{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, uploadBytes, uploadBytesResumable, getDownloadURL } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory, createUser } from \"../../../domain/service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128\n  }\n}));\n\nconst CategoryForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const createCategory = e => {\n    setIsLoading(true); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"categories\");\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100; // console.log(\"Upload is \" + progress + \"% done\");\n\n      setProgress(uprogress);\n    }, error => {\n      // Handle unsuccessful uploads\n      setIsLoading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        db.collection(\"categories\").add({\n          v: \"__\"\n        }).then(docRef => {\n          //Now save fully to firestore\n          addCategory(docRef.id, formValues.title, downloadURL).then(result => {\n            setIsLoading(false);\n            enqueueSnackbar(`New category added successfully`, {\n              variant: \"success\"\n            });\n          }).catch(err => {\n            setIsLoading(false);\n          });\n        }).catch(error => {\n          setIsLoading(false);\n          console.error(\"Error adding document: \", error);\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createCategory,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"title\",\n        label: \"Category name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title,\n        onChange: handleChange // onBlur={handleBlur}\n        ,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Category name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"image\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.image,\n        name: \"image\",\n        type: \"file\",\n        fullWidth: true,\n        disabled: isLoading,\n        accept: \".png, .jpg, .jpeg, .pdf\",\n        onChange: handleChange,\n        validators: [\"required\"],\n        errorMessages: [\"Category image is required\"],\n        helperText: \"Upload category image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: previewPassport && /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\",\n          alt: \"Passport\",\n          src: previewPassport,\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoryForm, \"5Wdxb39kdQI67HchJMdHUOCc2ew=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = CategoryForm;\nexport default CategoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","uploadBytes","uploadBytesResumable","getDownloadURL","useSnackbar","addCategory","createUser","useStyles","theme","image","margin","width","height","CategoryForm","classes","formValues","setFormValues","useState","title","file","setFile","isLoading","setIsLoading","progress","setProgress","previewPassport","setPreviewPassport","enqueueSnackbar","handleChange","e","id","name","value","target","files","URL","createObjectURL","prevData","createCategory","storageRef","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","collection","add","v","docRef","result","catch","err"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  uploadBytes,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory, createUser } from \"../../../domain/service\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CategoryForm = () => {\n  const classes = useStyles();\n\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createCategory = (e) => {\n    setIsLoading(true);\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"categories\");\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        // console.log(\"Upload is \" + progress + \"% done\");\n        setProgress(uprogress);\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        setIsLoading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          db.collection(\"categories\")\n            .add({\n              v: \"__\",\n            })\n            .then((docRef) => {\n              //Now save fully to firestore\n              addCategory(docRef.id, formValues.title, downloadURL)\n                .then((result) => {\n                  setIsLoading(false);\n                  enqueueSnackbar(`New category added successfully`, {\n                    variant: \"success\",\n                  });\n                })\n                .catch((err) => {\n                  setIsLoading(false);\n                });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n              console.error(\"Error adding document: \", error);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <ValidatorForm onSubmit={createCategory}>\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n        <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        />\n\n        <div>\n          {previewPassport && (\n            <Avatar\n              variant=\"rounded\"\n              alt=\"Passport\"\n              src={previewPassport}\n              className={classes.image}\n            />\n          )}\n        </div>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default CategoryForm;\n"]},"metadata":{},"sourceType":"module"}