{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { createUser } from \"../../../domain/service\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { db, addDoc, collection, getDocs, doc, getDoc, setDoc, setPersistence, browserSessionPersistence, auth } from \"../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../data/store/slice/user\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright(props) {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    align: \"center\",\n    ...props,\n    children: [\"Copyright Â© \", /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://mui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \" \", new Date().getFullYear(), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Copyright;\n\nconst SignupForm = () => {\n  _s();\n\n  const [formValues, setFormValues] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const submitForm = e => {\n    setPersistence(auth, browserSessionPersistence).then(() => {\n      createUser(formValues.email, formValues.password).then(async resp => {\n        try {\n          setDoc(doc(db, \"users\", resp.user.uid), {\n            id: resp.user.uid,\n            firstname: formValues.firstName,\n            lastname: formValues.lastName,\n            phone: formValues.phone,\n            email: formValues.email,\n            userType: \"super\"\n          }).then(async result => {\n            //Fetch user data and save to redux store\n            const docRef = doc(db, \"users\", resp.user.uid);\n            const docSnap = await getDoc(docRef);\n\n            if (docSnap.exists()) {\n              dispatch(setUserData(docSnap.data));\n              history.push(\"/admin/dashboard\");\n            } else {\n              console.log(\"No such document!\");\n            }\n          }).catch(err => {});\n        } catch (error) {\n          console.log(\"ERR: \", error === null || error === void 0 ? void 0 : error.message);\n        }\n      }).catch(err => {\n        console.log(\"ERR: \", err === null || err === void 0 ? void 0 : err.message);\n      });\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n  }; // const formik = useFormik({\n  //   initialValues: {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     phone: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   },\n  //   validationSchema: validationSchema,\n  //   onSubmit: (values) => {\n  //     alert(\"Heergf\");\n  //     // try {\n  //     //   const resp = await createUser(values.email, values.password);\n  //     //   if (resp.user) {\n  //     //     // Add a second document with a generated ID.\n  //     //     try {\n  //     //       const docRef = await addDoc(collection(db, \"users\"), {\n  //     //         id: resp.user.uid,\n  //     //         firstname: values.firstName,\n  //     //         lastname: values.lastName,\n  //     //         phone: values.phone,\n  //     //         email: values.email,\n  //     //         userType: \"super\",\n  //     //       });\n  //     //       console.log(\"Document written with ID: \", docRef.id);\n  //     //     } catch (e) {\n  //     //       console.error(\"Error adding document: \", e);\n  //     //     }\n  //     //   }\n  //     // } catch (error) {}\n  //   },\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: submitForm,\n      sx: {\n        mt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"firstName\",\n            label: \"First name\",\n            name: \"firstName\",\n            value: formValues.firstName,\n            onChange: handleChange,\n            type: \"text\",\n            autoFocus: true,\n            placeholder: \"First name\",\n            variant: \"outlined\",\n            validators: [\"required\"],\n            errorMessages: [\"First name is required\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"lastName\",\n            label: \"Last name\",\n            name: \"lastName\",\n            value: formValues.lastName,\n            onChange: handleChange,\n            type: \"text\",\n            placeholder: \"Last name\",\n            variant: \"outlined\",\n            validators: [\"required\"],\n            errorMessages: [\"Last name is required\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        value: formValues.email,\n        onChange: handleChange,\n        autoComplete: \"email\",\n        placeholder: \"Email Address\",\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Email address is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: showCode ? \"text\" : \"password\",\n        id: \"password\",\n        onChange: handleChange,\n        value: formValues.password,\n        autoComplete: \"current-password\",\n        placeholder: \"Password\",\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Password is required\"],\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle code\",\n              onClick: () => setShowCode(!showCode),\n              onMouseDown: () => setShowCode(!showCode),\n              edge: \"end\",\n              children: showCode ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mt: 2,\n          mb: 2\n        },\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"h1\",\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        variant: \"body2\",\n        children: \"Already have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"ApdxcpgWrpxjBqOZnskGDYvWY6U=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c2 = SignupForm;\nexport default SignupForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"SignupForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js"],"names":["React","Button","TextField","Link","Box","Grid","Typography","useFormik","yup","InputAdornment","IconButton","Visibility","VisibilityOff","createUser","ValidatorForm","TextValidator","db","addDoc","collection","getDocs","doc","getDoc","setDoc","setPersistence","browserSessionPersistence","auth","useDispatch","setUserData","useHistory","Copyright","props","Date","getFullYear","SignupForm","formValues","setFormValues","useState","firstName","lastName","phone","email","password","showCode","setShowCode","isLoading","setIsLoading","history","dispatch","handleChange","e","name","value","target","prevData","submitForm","then","resp","user","uid","id","firstname","lastname","userType","result","docRef","docSnap","exists","data","push","console","log","catch","err","error","message","errorCode","code","errorMessage","mt","endAdornment","mb"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { createUser } from \"../../../domain/service\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  db,\n  addDoc,\n  collection,\n  getDocs,\n  doc,\n  getDoc,\n  setDoc,\n  setPersistence,\n  browserSessionPersistence,\n  auth,\n} from \"../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../data/store/slice/user\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst SignupForm = () => {\n  const [formValues, setFormValues] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submitForm = (e) => {\n    setPersistence(auth, browserSessionPersistence)\n      .then(() => {\n        createUser(formValues.email, formValues.password)\n          .then(async (resp) => {\n            try {\n              setDoc(doc(db, \"users\", resp.user.uid), {\n                id: resp.user.uid,\n                firstname: formValues.firstName,\n                lastname: formValues.lastName,\n                phone: formValues.phone,\n                email: formValues.email,\n                userType: \"super\",\n              })\n                .then(async (result) => {\n                  //Fetch user data and save to redux store\n                  const docRef = doc(db, \"users\", resp.user.uid);\n                  const docSnap = await getDoc(docRef);\n                  if (docSnap.exists()) {\n                    dispatch(setUserData(docSnap.data));\n                    history.push(\"/admin/dashboard\");\n                  } else {\n                    console.log(\"No such document!\");\n                  }\n                })\n                .catch((err) => {});\n            } catch (error) {\n              console.log(\"ERR: \", error?.message);\n            }\n          })\n          .catch((err) => {\n            console.log(\"ERR: \", err?.message);\n          });\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n  };\n\n  // const formik = useFormik({\n  //   initialValues: {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     phone: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   },\n  //   validationSchema: validationSchema,\n\n  //   onSubmit: (values) => {\n  //     alert(\"Heergf\");\n  //     // try {\n  //     //   const resp = await createUser(values.email, values.password);\n\n  //     //   if (resp.user) {\n  //     //     // Add a second document with a generated ID.\n  //     //     try {\n  //     //       const docRef = await addDoc(collection(db, \"users\"), {\n  //     //         id: resp.user.uid,\n  //     //         firstname: values.firstName,\n  //     //         lastname: values.lastName,\n  //     //         phone: values.phone,\n  //     //         email: values.email,\n  //     //         userType: \"super\",\n  //     //       });\n  //     //       console.log(\"Document written with ID: \", docRef.id);\n  //     //     } catch (e) {\n  //     //       console.error(\"Error adding document: \", e);\n  //     //     }\n  //     //   }\n  //     // } catch (error) {}\n  //   },\n  // });\n\n  return (\n    <div>\n      <ValidatorForm onSubmit={submitForm} sx={{ mt: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item md={6} xs={12} sm={12}>\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First name\"\n              name=\"firstName\"\n              value={formValues.firstName}\n              onChange={handleChange}\n              type=\"text\"\n              autoFocus\n              placeholder=\"First name\"\n              variant=\"outlined\"\n              validators={[\"required\"]}\n              errorMessages={[\"First name is required\"]}\n            />\n          </Grid>\n\n          <Grid item md={6} xs={12} sm={12}>\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"lastName\"\n              label=\"Last name\"\n              name=\"lastName\"\n              value={formValues.lastName}\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"Last name\"\n              variant=\"outlined\"\n              validators={[\"required\"]}\n              errorMessages={[\"Last name is required\"]}\n            />\n          </Grid>\n        </Grid>\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          value={formValues.email}\n          onChange={handleChange}\n          autoComplete=\"email\"\n          placeholder=\"Email Address\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 2, mb: 2 }}\n        >\n          Sign In\n        </Button>\n        <Typography variant=\"body1\" component=\"h1\">\n          Or\n        </Typography>\n        {/* <Button fullWidth variant=\"contained\" sx={{ mt: 1, mb: 2 }}>\n          Sign In With Google\n        </Button> */}\n        <Link href=\"#\" variant=\"body2\">\n          {\"Already have an account? Login\"}\n        </Link>\n        {/* <Copyright sx={{ mt: 5 }} /> */}\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}