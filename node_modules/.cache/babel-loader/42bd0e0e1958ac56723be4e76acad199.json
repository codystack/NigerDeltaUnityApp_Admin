{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/update_category.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, setDoc, doc, deleteObject, uploadBytesResumable, getDownloadURL } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst EditCategoryForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    img,\n    name,\n    id\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNew = e => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        var dbRef = db.collection(\"categories\").doc(\"img_\" + id);\n        return dbRef.update({\n          title: formValues.title,\n          url: downloadURL\n        }).then(() => {\n          enqueueSnackbar(`Category updated successfully`, {\n            variant: \"success\"\n          });\n        }).catch(error => {\n          enqueueSnackbar(`Error updating name`, {\n            variant: \"success\"\n          });\n        });\n      });\n    });\n  };\n\n  const updateCategory = e => {\n    setIsLoading(true);\n\n    if (!previewPassport) {\n      //   alert(\"Only title\");\n      //Only change title\n      //   var dbRef = db.collection(\"categories\").doc(\"img_\" + id);\n      setDoc(doc(db, \"categories\", `img_${id}`), {\n        id: id,\n        title: formValues.title,\n        url: img\n      }).then(res => {\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`New category added successfully`, {\n          variant: \"success\"\n        });\n      }).catch(error => {\n        setIsLoading(false);\n      });\n    } else {\n      setFormValues({\n        title: formValues.title ? formValues.title : name\n      });\n      const fileRef = ref(storage, \"categories/img_\" + id);\n      deleteObject(fileRef).then(() => {\n        // File deleted now upload new file,\n        //get download url and save to firestore\n        setIsLoading(false);\n        uploadNew();\n      }).catch(error => {\n        setIsLoading(false);\n        console.log(\"ErR: \", error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateCategory,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"title\",\n        label: \"Category name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title ? formValues.title : name,\n        onChange: handleChange // onBlur={handleBlur}\n        ,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Category name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"image\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.image,\n        name: \"image\",\n        type: \"file\",\n        fullWidth: true,\n        disabled: isLoading,\n        accept: \".png, .jpg, .jpeg, .pdf\",\n        onChange: handleChange //   validators={[\"required\"]}\n        //   errorMessages={[\"Category image is required\"]}\n        ,\n        helperText: \"Upload category image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\",\n          alt: \"Passport\",\n          src: previewPassport ? previewPassport : img,\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditCategoryForm, \"ddsS/CO4+nMO0qRh3/X8wNyYIsk=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = EditCategoryForm;\nexport default EditCategoryForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"EditCategoryForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/update_category.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","setDoc","doc","deleteObject","uploadBytesResumable","getDownloadURL","useSnackbar","addCategory","Backdrop","Box","CircularProgress","Typography","useStyles","theme","image","margin","width","height","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","EditCategoryForm","classes","setOpen","img","name","id","formValues","setFormValues","useState","title","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewPassport","setPreviewPassport","enqueueSnackbar","handleChange","e","target","files","URL","createObjectURL","prevData","uploadNew","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","dbRef","collection","update","url","catch","updateCategory","res","fileRef","zIndex"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACEC,EADF,EAEEC,GAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,YANF,EAOEC,oBAPF,EAQEC,cARF,QASO,yBATP;AAUA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,SAAS,GAAGhB,UAAU,CAAEiB,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,oBADH;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,MAAM,EAAE;AAHH;AADgC,CAAZ,CAAD,CAA5B;;AAQA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAC3C,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAC,aAAjC;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,EAAC,aADV;AAAA,SAEMA,KAFN;AAGE,MAAA,IAAI,EAAE,EAHR;AAIE,MAAA,SAAS,EAAE,GAJb;AAKE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AALT;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,GAAD;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,MAAM,EAAE,CAHV;AAIE,MAAA,KAAK,EAAE,CAJT;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,OAAO,EAAC,MANV;AAOE,MAAA,UAAU,EAAC,QAPb;AAQE,MAAA,cAAc,EAAC,QARjB;AAAA,6BAUE,QAAC,UAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,UAAU,EAAE;AAA9B,SAHT;AAAA,kBAIG,GAAEC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,KAAjB,CAAwB;AAJ7B;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5BD;;KAAMN,yB;;AA8BN,MAAMO,gBAAgB,GAAIN,KAAD,IAAW;AAAA;;AAClC,QAAMO,OAAO,GAAGd,SAAS,EAAzB;AACA,MAAI;AAAEe,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,MAA6BX,KAAjC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BxC,KAAK,CAACyC,QAAN,CAAe;AACjDC,IAAAA,KAAK,EAAE,EAD0C;AAEjDpB,IAAAA,KAAK,EAAE;AAF0C,GAAf,CAApC;AAIA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkB5C,KAAK,CAACyC,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgC9C,KAAK,CAACyC,QAAN,CAAe,KAAf,CAAtC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BhD,KAAK,CAACyC,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BlD,KAAK,CAACyC,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCpD,KAAK,CAACyC,QAAN,CAAe,EAAf,CAA9C;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAsBvC,WAAW,EAAvC;;AAEA,QAAMwC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEjB,MAAAA,EAAF;AAAMD,MAAAA,IAAN;AAAYL,MAAAA;AAAZ,QAAsBuB,CAAC,CAACC,MAA9B;;AAEA,QAAIlB,EAAE,KAAK,OAAX,EAAoB;AAClBM,MAAAA,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAL,MAAAA,kBAAkB,CAACM,GAAG,CAACC,eAAJ,CAAoBJ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAlB;AACAjB,MAAAA,aAAa,CAAEoB,QAAD,KAAe,EAC3B,GAAGA,QADwB;AAE3BtC,QAAAA,KAAK,EAAEiC,CAAC,CAACC,MAAF,CAASxB;AAFW,OAAf,CAAD,CAAb;AAID,KAPD,MAOO;AACLQ,MAAAA,aAAa,CAAEoB,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAe,SAACvB,IAAD,GAAQL;AAAvB,OAAf,CAAD,CAAb;AACD;AACF,GAbD;;AAeA,QAAM6B,SAAS,GAAIN,CAAD,IAAO;AACvBT,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,UAAMgB,OAAO,GAAG,IAAIC,IAAJ,EAAhB,CAFuB,CAGvB;;AACA,UAAMC,UAAU,GAAGzD,GAAG,CAACC,OAAD,EAAU,oBAAoBsD,OAAO,CAACG,OAAR,EAA9B,CAAtB;AACA,UAAMC,UAAU,GAAGtD,oBAAoB,CAACoD,UAAD,EAAarB,IAAb,CAAvC;AAEAuB,IAAAA,UAAU,CAACC,EAAX,CACE,eADF,EAEGC,QAAD,IAAc;AACZ,YAAMC,SAAS,GACZD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GADtD;AAEArB,MAAAA,WAAW,CAACmB,SAAD,CAAX;AACD,KANH,EAOGG,KAAD,IAAW;AACT1B,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAnB,MAAAA,eAAe,CAAE,GAAEmB,KAAK,CAACG,OAAQ,EAAlB,EAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAf;AACD,KAXH,EAYE,MAAM;AACJ9B,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAnC,MAAAA,cAAc,CAACqD,UAAU,CAACE,QAAX,CAAoB7D,GAArB,CAAd,CAAwCsE,IAAxC,CAA8CC,WAAD,IAAiB;AAC5D,YAAIC,KAAK,GAAGzE,EAAE,CAAC0E,UAAH,CAAc,YAAd,EAA4BtE,GAA5B,CAAgC,SAAS4B,EAAzC,CAAZ;AACA,eAAOyC,KAAK,CACTE,MADI,CACG;AACNvC,UAAAA,KAAK,EAAEH,UAAU,CAACG,KADZ;AAENwC,UAAAA,GAAG,EAAEJ;AAFC,SADH,EAKJD,IALI,CAKC,MAAM;AACVxB,UAAAA,eAAe,CAAE,+BAAF,EAAkC;AAC/CuB,YAAAA,OAAO,EAAE;AADsC,WAAlC,CAAf;AAGD,SATI,EAUJO,KAVI,CAUGX,KAAD,IAAW;AAChBnB,UAAAA,eAAe,CAAE,qBAAF,EAAwB;AACrCuB,YAAAA,OAAO,EAAE;AAD4B,WAAxB,CAAf;AAGD,SAdI,CAAP;AAeD,OAjBD;AAkBD,KAjCH;AAmCD,GA1CD;;AA4CA,QAAMQ,cAAc,GAAI7B,CAAD,IAAO;AAC5BP,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI,CAACG,eAAL,EAAsB;AACpB;AACA;AACA;AACA1C,MAAAA,MAAM,CAACC,GAAG,CAACJ,EAAD,EAAK,YAAL,EAAoB,OAAMgC,EAAG,EAA7B,CAAJ,EAAqC;AACzCA,QAAAA,EAAE,EAAEA,EADqC;AAEzCI,QAAAA,KAAK,EAAEH,UAAU,CAACG,KAFuB;AAGzCwC,QAAAA,GAAG,EAAE9C;AAHoC,OAArC,CAAN,CAKGyC,IALH,CAKSQ,GAAD,IAAS;AACblD,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAa,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,QAAAA,eAAe,CAAE,iCAAF,EAAoC;AACjDuB,UAAAA,OAAO,EAAE;AADwC,SAApC,CAAf;AAGD,OAXH,EAYGO,KAZH,CAYUX,KAAD,IAAW;AAChBxB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAdH;AAeD,KAnBD,MAmBO;AACLR,MAAAA,aAAa,CAAC;AAAEE,QAAAA,KAAK,EAAEH,UAAU,CAACG,KAAX,GAAmBH,UAAU,CAACG,KAA9B,GAAsCL;AAA/C,OAAD,CAAb;AACA,YAAMiD,OAAO,GAAG/E,GAAG,CAACC,OAAD,EAAU,oBAAoB8B,EAA9B,CAAnB;AAEA3B,MAAAA,YAAY,CAAC2E,OAAD,CAAZ,CACGT,IADH,CACQ,MAAM;AACV;AACA;AACA7B,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAa,QAAAA,SAAS;AACV,OANH,EAOGsB,KAPH,CAOUX,KAAD,IAAW;AAChBxB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAyB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,OAVH;AAWD;AACF,GArCD;;AAuCA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEe,QAAAA,MAAM,EAAE;AAAV,OAAjB;AAAmC,MAAA,IAAI,EAAE1C,WAAW,IAAIE,SAAxD;AAAA,iBACGF,WAAW,gBAAG,QAAC,yBAAD;AAA2B,QAAA,KAAK,EAAEI;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAoD;AAAA;AAAA;AAAA;AAAA,cADlE,EAEGF,SAAS,gBACR,QAAC,gBAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,KAAK,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA,cADQ,gBAOR;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEwD,cAAzB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,KAAK,EAAC,eAFR;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,OAAO,EAAC,UAJV;AAKE,QAAA,KAAK,EAAE7C,UAAU,CAACG,KAAX,GAAmBH,UAAU,CAACG,KAA9B,GAAsCL,IAL/C;AAME,QAAA,QAAQ,EAAEiB,YANZ,CAOE;AAPF;AAQE,QAAA,IAAI,EAAC,OARP;AASE,QAAA,SAAS,MATX;AAUE,QAAA,UAAU,EAAE,CAAC,UAAD,CAVd;AAWE,QAAA,aAAa,EAAE,CAAC,2BAAD;AAXjB;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,aAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,KAAK,EAAEf,UAAU,CAACjB,KAJpB;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,SAAS,MAPX;AAQE,QAAA,QAAQ,EAAEyB,SARZ;AASE,QAAA,MAAM,EAAC,yBATT;AAUE,QAAA,QAAQ,EAAEO,YAVZ,CAWE;AACA;AAZF;AAaE,QAAA,UAAU,EAAC;AAbb;AAAA;AAAA;AAAA;AAAA,cAfF,eA+BE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,SADV;AAEE,UAAA,GAAG,EAAC,UAFN;AAGE,UAAA,GAAG,EAAEH,eAAe,GAAGA,eAAH,GAAqBf,GAH3C;AAIE,UAAA,SAAS,EAAEF,OAAO,CAACZ;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA/BF,eAuCE;AAAA;AAAA;AAAA;AAAA,cAvCF,eAwCE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,QAAQ,EAAEyB,SAAS,IAAIF,WAHzB;AAIE,QAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiED,CAlLD;;GAAMZ,gB;UACYb,S,EAYYN,W;;;MAbxBmB,gB;AAoLN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditCategoryForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, name, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNew = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          var dbRef = db.collection(\"categories\").doc(\"img_\" + id);\n          return dbRef\n            .update({\n              title: formValues.title,\n              url: downloadURL,\n            })\n            .then(() => {\n              enqueueSnackbar(`Category updated successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              enqueueSnackbar(`Error updating name`, {\n                variant: \"success\",\n              });\n            });\n        });\n      }\n    );\n  };\n\n  const updateCategory = (e) => {\n    setIsLoading(true);\n    if (!previewPassport) {\n      //   alert(\"Only title\");\n      //Only change title\n      //   var dbRef = db.collection(\"categories\").doc(\"img_\" + id);\n      setDoc(doc(db, \"categories\", `img_${id}`), {\n        id: id,\n        title: formValues.title,\n        url: img,\n      })\n        .then((res) => {\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`New category added successfully`, {\n            variant: \"success\",\n          });\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    } else {\n      setFormValues({ title: formValues.title ? formValues.title : name });\n      const fileRef = ref(storage, \"categories/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          // File deleted now upload new file,\n          //get download url and save to firestore\n          setIsLoading(false);\n          uploadNew();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateCategory}>\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title ? formValues.title : name}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n        <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        />\n\n        <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditCategoryForm;\n"]},"metadata":{},"sourceType":"module"}