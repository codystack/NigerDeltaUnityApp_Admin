{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/add_project_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, setDoc, doc, query, onSnapshot, collection, updateDoc, arrayUnion, uploadBytesResumable, getDownloadURL } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport Dropzone from \"react-dropzone\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst AddProjectForm = props => {\n  _s();\n\n  var _ref;\n\n  const classes = useStyles();\n  let {\n    setOpen\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    state: \"\",\n    desc: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [statesList, setStatesList] = React.useState(null);\n  const [stateId, setStateId] = React.useState(0);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [files, setFiles] = React.useState([]);\n  const [fileNames, setFileNames] = React.useState([]);\n  const [urls, setUrls] = React.useState([]); // const [fileError, setFileError] = React.useState(\"\");\n\n  const handleDrop = acceptedFiles => {\n    setFileNames(acceptedFiles.map(file => file.name));\n    setFiles(acceptedFiles);\n  };\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"states\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const states = [];\n      querySnapshot.forEach(doc => {\n        states.push(doc.data());\n      });\n      setStatesList(states);\n    });\n  }, []);\n\n  const fileValidator = file => {\n    if (!file || (file === null || file === void 0 ? void 0 : file.length) < 1) {\n      return {\n        code: \"name-too-large\",\n        message: `You must select at least one file!`\n      };\n    }\n\n    return null;\n  };\n\n  const handleChange = async e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n      let item = await (statesList === null || statesList === void 0 ? void 0 : statesList.find(item => (item === null || item === void 0 ? void 0 : item.name) === value));\n      setStateId(item === null || item === void 0 ? void 0 : item.id); // console.log(\"ID: \", item?.id);\n    }\n  };\n\n  const handleUpload = tnw => {\n    const promises = [];\n    files === null || files === void 0 ? void 0 : files.map(image => {\n      let storageRef = ref(storage, `projects/${image.name}`);\n      let uploadTask = uploadBytesResumable(storageRef, files);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(progress);\n      }, error => {\n        console.log(error);\n      }, async () => {\n        await getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setUrls(urls.push(downloadURL));\n        });\n      });\n    });\n    Promise.all(promises).then(async () => {\n      // Now update the images field\n      console.log(\"URLS\", urls);\n\n      try {\n        const mRef = doc(db, \"projects\", \"\" + tnw);\n        await updateDoc(mRef, {\n          images: arrayUnion(...urls)\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`New project added successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n          variant: \"error\"\n        });\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const createProject = e => {\n    setIsUploading(true); //First upload images to firebase storage then save to firestore\n\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"projects/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setIsUploading(false);\n        setIsLoading(true);\n        setDoc(doc(db, \"projects\", `${timeNow.getTime()}`), {\n          id: timeNow.getTime(),\n          title: formValues.title,\n          image: downloadURL,\n          images: [],\n          state: formValues.state,\n          stateId: stateId,\n          description: formValues.desc,\n          createdAt: timeNow,\n          updatedAt: timeNow\n        }).then(res => {\n          //Now upload project progress images here\n          handleUpload(timeNow.getTime());\n        }).catch(error => {\n          setIsUploading(false);\n          setIsLoading(false);\n          enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n            variant: \"error\"\n          });\n        });\n      }).catch(error => {\n        setIsUploading(false);\n        setIsLoading(false);\n        enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n          variant: \"error\"\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createProject,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            validators: [\"required\"],\n            errorMessages: [\"Featured image is required\"],\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: previewImage && /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectValidator, {\n        className: classes.mb,\n        value: formValues.state,\n        onChange: handleChange,\n        label: \"Project state\",\n        name: \"state\",\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"small\",\n        validators: [\"required\"],\n        errorMessages: [\"Project state is required\"],\n        children: (_ref = statesList !== null && statesList !== void 0 ? statesList : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => {\n          var _item$name, _item$name2;\n\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: (_item$name = item === null || item === void 0 ? void 0 : item.name) !== null && _item$name !== void 0 ? _item$name : \"\",\n            children: (_item$name2 = item === null || item === void 0 ? void 0 : item.name) !== null && _item$name2 !== void 0 ? _item$name2 : \"\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"Project title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Project title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        multiline: true,\n        rows: 5,\n        rowsMax: 10,\n        placeholder: \"Project description here\",\n        name: \"desc\",\n        label: \"Project description\",\n        value: formValues.desc,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Project description is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: handleDrop,\n        validator: fileValidator,\n        accept: \"image/png, image/jpg, image/jpeg, application/pdf, application/mspowerpoint, application/powerpoint, application/vnd.ms-powerpoint, application/x-mspowerpoint\",\n        children: _ref2 => {\n          let {\n            getRootProps,\n            getInputProps\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n              className: classes.dropZone\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), (files === null || files === void 0 ? void 0 : files.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.row,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  disablePadding: true,\n                  children: fileNames.map(fileName => /*#__PURE__*/_jsxDEV(ListItem, {\n                    disableGutters: true,\n                    divider: true,\n                    children: fileName\n                  }, fileName, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                padding: 2,\n                color: \"blue\",\n                children: \"Add more files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Add project images, Maximum of 5 images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddProjectForm, \"cBAOcaYn6FRJdxSgn4svp1IbyKs=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = AddProjectForm;\nexport default AddProjectForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"AddProjectForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/add_project_form.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","setDoc","doc","query","onSnapshot","collection","updateDoc","arrayUnion","uploadBytesResumable","getDownloadURL","useSnackbar","Backdrop","Box","CircularProgress","Grid","MenuItem","Typography","Dropzone","List","ListItem","useStyles","theme","image","margin","width","height","mb","marginBottom","row","display","flexDirection","justifyContent","alignItems","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","AddProjectForm","classes","setOpen","formValues","setFormValues","useState","title","state","desc","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","statesList","setStatesList","stateId","setStateId","enqueueSnackbar","files","setFiles","fileNames","setFileNames","urls","setUrls","handleDrop","acceptedFiles","map","name","useEffect","q","unsubscribe","querySnapshot","states","forEach","push","data","fileValidator","length","code","message","handleChange","e","id","target","URL","createObjectURL","prevData","item","find","handleUpload","tnw","promises","storageRef","uploadTask","on","snapshot","bytesTransferred","totalBytes","error","console","log","then","downloadURL","Promise","all","mRef","images","variant","catch","err","createProject","timeNow","Date","getTime","uprogress","description","createdAt","updatedAt","res","zIndex","index","getRootProps","getInputProps","className","dropZone","fileName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  query,\n  onSnapshot,\n  collection,\n  updateDoc,\n  arrayUnion,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport Dropzone from \"react-dropzone\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddProjectForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    state: \"\",\n    desc: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [statesList, setStatesList] = React.useState(null);\n  const [stateId, setStateId] = React.useState(0);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [files, setFiles] = React.useState([]);\n  const [fileNames, setFileNames] = React.useState([]);\n  const [urls, setUrls] = React.useState([]);\n  // const [fileError, setFileError] = React.useState(\"\");\n\n  const handleDrop = (acceptedFiles) => {\n    setFileNames(acceptedFiles.map((file) => file.name));\n    setFiles(acceptedFiles);\n  };\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"states\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const states = [];\n      querySnapshot.forEach((doc) => {\n        states.push(doc.data());\n      });\n      setStatesList(states);\n    });\n  }, []);\n\n  const fileValidator = (file) => {\n    if (!file || file?.length < 1) {\n      return {\n        code: \"name-too-large\",\n        message: `You must select at least one file!`,\n      };\n    }\n    return null;\n  };\n\n  const handleChange = async (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n      let item = await statesList?.find((item) => item?.name === value);\n      setStateId(item?.id);\n      // console.log(\"ID: \", item?.id);\n    }\n  };\n\n  const handleUpload = (tnw) => {\n    const promises = [];\n    files?.map((image) => {\n      let storageRef = ref(storage, `projects/${image.name}`);\n      let uploadTask = uploadBytesResumable(storageRef, files);\n      promises.push(uploadTask);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n        },\n        async () => {\n          await getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            setIsUploading(false);\n            setIsLoading(true);\n            setUrls(urls.push(downloadURL));\n          });\n        }\n      );\n    });\n\n    Promise.all(promises)\n      .then(async () => {\n        // Now update the images field\n        console.log(\"URLS\", urls);\n        try {\n          const mRef = doc(db, \"projects\", \"\" + tnw);\n          await updateDoc(mRef, {\n            images: arrayUnion(...urls),\n          });\n\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`New project added successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(\n            `${error?.message || \"Check your internet connection\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const createProject = (e) => {\n    setIsUploading(true);\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n\n    let storageRef = ref(storage, \"projects/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref)\n          .then((downloadURL) => {\n            setIsUploading(false);\n            setIsLoading(true);\n            setDoc(doc(db, \"projects\", `${timeNow.getTime()}`), {\n              id: timeNow.getTime(),\n              title: formValues.title,\n              image: downloadURL,\n              images: [],\n              state: formValues.state,\n              stateId: stateId,\n              description: formValues.desc,\n              createdAt: timeNow,\n              updatedAt: timeNow,\n            })\n              .then((res) => {\n                //Now upload project progress images here\n                handleUpload(timeNow.getTime());\n              })\n              .catch((error) => {\n                setIsUploading(false);\n                setIsLoading(false);\n                enqueueSnackbar(`${error?.message}`, {\n                  variant: \"error\",\n                });\n              });\n          })\n          .catch((error) => {\n            setIsUploading(false);\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createProject}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.state}\n          onChange={handleChange}\n          label=\"Project state\"\n          name=\"state\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project state is required\"]}\n        >\n          {(statesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.name ?? \"\"}>\n              {item?.name ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Project title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Project title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Project description here\"\n          name=\"desc\"\n          label=\"Project description\"\n          value={formValues.desc}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project description is required\"]}\n        />\n\n        <Dropzone\n          onDrop={handleDrop}\n          validator={fileValidator}\n          accept={\n            \"image/png, image/jpg, image/jpeg, application/pdf, application/mspowerpoint, application/powerpoint, application/vnd.ms-powerpoint, application/x-mspowerpoint\"\n          }\n        >\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps({ className: classes.dropZone })}>\n              <input {...getInputProps()} />\n              {files?.length > 0 ? (\n                <div className={classes.row}>\n                  <div>\n                    <List disablePadding>\n                      {fileNames.map((fileName) => (\n                        <ListItem disableGutters divider key={fileName}>\n                          {fileName}\n                        </ListItem>\n                      ))}\n                    </List>\n                  </div>\n                  <Typography padding={2} color=\"blue\">\n                    Add more files\n                  </Typography>\n                </div>\n              ) : (\n                <p>Add project images, Maximum of 5 images</p>\n              )}\n            </div>\n          )}\n        </Dropzone>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Create Project\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddProjectForm;\n"]},"metadata":{},"sourceType":"module"}