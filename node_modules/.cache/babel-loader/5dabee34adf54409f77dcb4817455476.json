{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/update_project_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, query, collection, onSnapshot, uploadBytesResumable, getDownloadURL, deleteObject, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { FirebaseError } from \"@firebase/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst EditProjectForm = props => {\n  _s();\n\n  var _ref;\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title,\n    img,\n    state,\n    desc\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    state: state,\n    desc: desc\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [statesList, setStatesList] = React.useState(null);\n  const [stateId, setStateId] = React.useState(null);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = async e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n      let item = await (statesList === null || statesList === void 0 ? void 0 : statesList.find(item => (item === null || item === void 0 ? void 0 : item.name) === value));\n      setStateId(item === null || item === void 0 ? void 0 : item.id);\n    }\n  };\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"states\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const states = [];\n      querySnapshot.forEach(doc => {\n        states.push(doc.data());\n      });\n      setStatesList(states);\n    });\n  }, []);\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"projects/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"projects\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            title: formValues.title,\n            state: formValues.state,\n            stateId: stateId,\n            description: formValues.desc,\n            updatedAt: timeNow,\n            image: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Project updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const updateProject = async e => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      state: formValues.state ? formValues.state : state,\n      desc: (formValues === null || formValues === void 0 ? void 0 : formValues.desc) ? formValues.desc : desc\n    });\n\n    if (previewImage) {\n      //Change only the featured image and all texts\n      const fileRef = ref(storage, \"projects/\" + id);\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      }).catch(error => {\n        setIsLoading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n          variant: \"error\"\n        });\n      });\n    } else {\n      // const fileRef = ref(storage, \"projects/\" + id);\n      const timeNow = new Date();\n      setIsLoading(true);\n\n      try {\n        const mRef = doc(db, \"projects\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          state: formValues.state,\n          stateId: stateId,\n          description: formValues.desc,\n          updatedAt: timeNow\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Project updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        setIsUploading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n          variant: \"error\"\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateProject,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg, .pdf\",\n            onChange: handleChange,\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : img,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectValidator, {\n        id: \"state\",\n        className: classes.mb,\n        value: formValues.state ? formValues.state : state,\n        onChange: handleChange,\n        label: \"Project state\",\n        name: \"state\",\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"small\",\n        validators: [\"required\"],\n        errorMessages: [\"Project state is required\"],\n        children: (_ref = statesList !== null && statesList !== void 0 ? statesList : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => {\n          var _item$name, _item$name2;\n\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: (_item$name = item === null || item === void 0 ? void 0 : item.name) !== null && _item$name !== void 0 ? _item$name : \"\",\n            children: (_item$name2 = item === null || item === void 0 ? void 0 : item.name) !== null && _item$name2 !== void 0 ? _item$name2 : \"\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"Project title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title === \" \" ? title : !formValues.title ? \"\" : formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Project title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        multiline: true,\n        rows: 5,\n        rowsMax: 10,\n        placeholder: \"Type project description here\",\n        name: \"desc\",\n        label: \"Project Description\",\n        value: formValues.desc === \" \" ? desc : !formValues.desc ? \"\" : formValues.desc,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"News content is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Update Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProjectForm, \"6vIryC3H0tlRX/coInXNSEfUW5U=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = EditProjectForm;\nexport default EditProjectForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"EditProjectForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/update_project_form.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","doc","query","collection","onSnapshot","uploadBytesResumable","getDownloadURL","deleteObject","updateDoc","useSnackbar","Backdrop","Box","CircularProgress","Typography","Grid","MenuItem","FirebaseError","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","EditProjectForm","classes","setOpen","id","title","img","state","desc","formValues","setFormValues","useState","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","statesList","setStatesList","stateId","setStateId","enqueueSnackbar","handleChange","e","name","target","files","URL","createObjectURL","prevData","item","find","useEffect","q","unsubscribe","querySnapshot","states","forEach","push","data","uploadNewImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","mRef","description","updatedAt","updateProject","fileRef","catch","zIndex","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  query,\n  collection,\n  onSnapshot,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { FirebaseError } from \"@firebase/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditProjectForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title, img, state, desc } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    state: state,\n    desc: desc,\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [statesList, setStatesList] = React.useState(null);\n  const [stateId, setStateId] = React.useState(null);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = async (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n      let item = await statesList?.find((item) => item?.name === value);\n      setStateId(item?.id);\n    }\n  };\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"states\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const states = [];\n      querySnapshot.forEach((doc) => {\n        states.push(doc.data());\n      });\n      setStatesList(states);\n    });\n  }, []);\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"projects/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"projects\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              state: formValues.state,\n              stateId: stateId,\n              description: formValues.desc,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Project updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const updateProject = async (e) => {\n    setIsLoading(true);\n\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      state: formValues.state ? formValues.state : state,\n      desc: formValues?.desc ? formValues.desc : desc,\n    });\n    if (previewImage) {\n      //Change only the featured image and all texts\n      const fileRef = ref(storage, \"projects/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          enqueueSnackbar(\n            `${error?.message || \"Check your internet connection\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n        });\n    } else {\n      // const fileRef = ref(storage, \"projects/\" + id);\n      const timeNow = new Date();\n      setIsLoading(true);\n      try {\n        const mRef = doc(db, \"projects\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          state: formValues.state,\n          stateId: stateId,\n          description: formValues.desc,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Project updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        setIsUploading(false);\n        enqueueSnackbar(\n          `${error?.message || \"Check your internet connection\"}`,\n          {\n            variant: \"error\",\n          }\n        );\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateProject}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          id=\"state\"\n          className={classes.mb}\n          value={formValues.state ? formValues.state : state}\n          onChange={handleChange}\n          label=\"Project state\"\n          name=\"state\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project state is required\"]}\n        >\n          {(statesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.name ?? \"\"}>\n              {item?.name ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Project title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Project title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type project description here\"\n          name=\"desc\"\n          label=\"Project Description\"\n          value={\n            formValues.desc === \" \"\n              ? desc\n              : !formValues.desc\n              ? \"\"\n              : formValues.desc\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update Project\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditProjectForm;\n"]},"metadata":{},"sourceType":"module"}