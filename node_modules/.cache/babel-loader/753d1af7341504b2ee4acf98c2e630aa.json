{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DataGrid, GridToolbarContainer, GridFilterToolbarButton, GridToolbarExport } from \"@mui/x-data-grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport axios from \"axios\";\nimport TimeAgo from \"../../countdown/timeago\";\nimport ActionButton from \"../../button/ActionButton\";\nimport CustomNoRowsOverlay from \"../../skeleton/CustomNoRowsOverlay\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { addDoc, onSnapshot, query, where, collection, db } from \"../../../../data/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomToolbar = () => {\n  _s();\n\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n    color: \"secondary\",\n    style: {\n      display: \"flex\",\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: 6,\n        borderRadius: 10,\n        marginLeft: 5,\n        marginRight: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(GridFilterToolbarButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        alignSelf: \"flex-end\",\n        padding: 6,\n        marginLeft: \"auto\",\n        borderRadius: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(GridToolbarExport, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomToolbar, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = CustomToolbar;\n\nconst fetcher = url => axios.get(url, {\n  headers: {\n    Authorization: localStorage.getItem(\"token\")\n  }\n}).then(res => res.data);\n\nexport default function UsersTable(_ref) {\n  _s2();\n\n  let {\n    setIsPerforming\n  } = _ref;\n  const [filterData, setfilterData] = React.useState([]);\n  const [isLoading, setIsloading] = React.useState(true);\n  const [usersList, setUsersList] = React.useState(null); // const { data } = useSWR('/applicants/scholars/all', fetcher);\n  // React.useEffect(() => {\n  //     if (data) {\n  //         setIsloading(false);\n  //         setfilterData(data.map(item => ({ id: item._id, ...item, ...item.Details })))\n  //     }\n  // }, [data])\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"users\"), where(\"userType\", \"===\", \"public\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const usrs = [];\n      querySnapshot.forEach(doc => {\n        usrs.push(doc.data());\n      });\n      setUsersList(usrs);\n    });\n    return () => {\n      setUsersList([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 520,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      columns: [{\n        field: \"photo\",\n        headerName: \"Image\",\n        width: 60,\n        renderCell: params => /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"Profile Picture\",\n          src: params.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, {\n        field: \"fullName\",\n        headerName: \"FULL NAME\",\n        width: 200,\n        sortable: false,\n        valueGetter: params => `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`\n      }, {\n        field: \"phone\",\n        headerName: \"PHONE NUMBER\",\n        width: 180\n      }, {\n        field: \"email\",\n        headerName: \"EMAIL ADDRESS\",\n        width: 180\n      }, // {\n      //     field: \"Gender\",\n      //     headerName: \"GENDER\",\n      // },\n      // {\n      //     field: \"Community\",\n      //     headerName: \"COMMUNITY\",\n      //     width: 150,\n      // },\n      {\n        field: \"Created_At\",\n        headerName: \"DATE\",\n        type: \"date\",\n        renderCell: params => {\n          return /*#__PURE__*/_jsxDEV(TimeAgo, {\n            dateString: params.value,\n            variant: \"body1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 22\n          }, this);\n        }\n      }, {\n        field: \"id\",\n        headerName: \"ACTIONS\",\n        width: 130,\n        renderCell: params => {\n          return /*#__PURE__*/_jsxDEV(ActionButton, {\n            selected: params,\n            setIsPerforming: setIsPerforming // handleSetSelectedRow={props.handleSetSelectedRow}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this);\n        }\n      }],\n      rows: filterData,\n      density: \"comfortable\",\n      loading: isLoading,\n      rowHeight: 45,\n      pagination: true // rowCount={data?.total}\n      ,\n      paginationMode: \"client\",\n      disableSelectionOnClick: true,\n      components: {\n        NoRowsOverlay: CustomNoRowsOverlay,\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UsersTable, \"rpO1b2Q07jM0cCpVkxFQI2XmfMM=\");\n\n_c2 = UsersTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomToolbar\");\n$RefreshReg$(_c2, \"UsersTable\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js"],"names":["React","DataGrid","GridToolbarContainer","GridFilterToolbarButton","GridToolbarExport","Avatar","axios","TimeAgo","ActionButton","CustomNoRowsOverlay","useTheme","Paper","addDoc","onSnapshot","query","where","collection","db","CustomToolbar","theme","display","padding","borderRadius","marginLeft","marginRight","alignSelf","fetcher","url","get","headers","Authorization","localStorage","getItem","then","res","data","UsersTable","setIsPerforming","filterData","setfilterData","useState","isLoading","setIsloading","usersList","setUsersList","useEffect","q","unsubscribe","querySnapshot","usrs","forEach","doc","push","height","width","field","headerName","renderCell","params","value","sortable","valueGetter","row","firstname","lastname","type","NoRowsOverlay","Toolbar"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridFilterToolbarButton,\n  GridToolbarExport,\n} from \"@mui/x-data-grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport axios from \"axios\";\nimport TimeAgo from \"../../countdown/timeago\";\nimport ActionButton from \"../../button/ActionButton\";\nimport CustomNoRowsOverlay from \"../../skeleton/CustomNoRowsOverlay\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  addDoc,\n  onSnapshot,\n  query,\n  where,\n  collection,\n  db,\n} from \"../../../../data/firebase\";\n\nconst CustomToolbar = () => {\n  const theme = useTheme();\n\n  return (\n    <GridToolbarContainer\n      color=\"secondary\"\n      style={{\n        display: \"flex\",\n        padding: 16,\n      }}\n    >\n      {/* <Paper style={{ padding: 6, borderRadius: 10 }}>\n        <GridColumnsToolbarButton />\n      </Paper> */}\n      <Paper\n        style={{ padding: 6, borderRadius: 10, marginLeft: 5, marginRight: 5 }}\n      >\n        <GridFilterToolbarButton />\n      </Paper>\n      <Paper\n        style={{\n          alignSelf: \"flex-end\",\n          padding: 6,\n          marginLeft: \"auto\",\n          borderRadius: 10,\n        }}\n      >\n        <GridToolbarExport />\n      </Paper>\n    </GridToolbarContainer>\n  );\n};\n\nconst fetcher = (url) =>\n  axios\n    .get(url, {\n      headers: {\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n    .then((res) => res.data);\n\nexport default function UsersTable({ setIsPerforming }) {\n  const [filterData, setfilterData] = React.useState([]);\n  const [isLoading, setIsloading] = React.useState(true);\n  const [usersList, setUsersList] = React.useState(null);\n\n  // const { data } = useSWR('/applicants/scholars/all', fetcher);\n\n  // React.useEffect(() => {\n  //     if (data) {\n  //         setIsloading(false);\n  //         setfilterData(data.map(item => ({ id: item._id, ...item, ...item.Details })))\n  //     }\n  // }, [data])\n\n  React.useEffect(() => {\n    const q = query(\n      collection(db, \"users\"),\n      where(\"userType\", \"===\", \"public\")\n    );\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const usrs = [];\n      querySnapshot.forEach((doc) => {\n        usrs.push(doc.data());\n      });\n      setUsersList(usrs);\n    });\n    return () => {\n      setUsersList([]);\n    };\n  }, []);\n\n  return (\n    <div style={{ height: 520, width: \"100%\" }}>\n      <DataGrid\n        columns={[\n          {\n            field: \"photo\",\n            headerName: \"Image\",\n            width: 60,\n            renderCell: (params) => (\n              <Avatar alt=\"Profile Picture\" src={params.value} />\n            ),\n          },\n          {\n            field: \"fullName\",\n            headerName: \"FULL NAME\",\n            width: 200,\n            sortable: false,\n            valueGetter: (params) =>\n              `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`,\n          },\n          { field: \"phone\", headerName: \"PHONE NUMBER\", width: 180 },\n          { field: \"email\", headerName: \"EMAIL ADDRESS\", width: 180 },\n          // {\n          //     field: \"Gender\",\n          //     headerName: \"GENDER\",\n          // },\n          // {\n          //     field: \"Community\",\n          //     headerName: \"COMMUNITY\",\n          //     width: 150,\n          // },\n          {\n            field: \"Created_At\",\n            headerName: \"DATE\",\n            type: \"date\",\n            renderCell: (params) => {\n              return <TimeAgo dateString={params.value} variant=\"body1\" />;\n            },\n          },\n\n          {\n            field: \"id\",\n            headerName: \"ACTIONS\",\n            width: 130,\n            renderCell: (params) => {\n              return (\n                <ActionButton\n                  selected={params}\n                  setIsPerforming={setIsPerforming}\n                  // handleSetSelectedRow={props.handleSetSelectedRow}\n                />\n              );\n            },\n          },\n        ]}\n        rows={filterData}\n        density=\"comfortable\"\n        loading={isLoading}\n        rowHeight={45}\n        pagination\n        // rowCount={data?.total}\n        paginationMode=\"client\"\n        disableSelectionOnClick={true}\n        components={{\n          NoRowsOverlay: CustomNoRowsOverlay,\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}