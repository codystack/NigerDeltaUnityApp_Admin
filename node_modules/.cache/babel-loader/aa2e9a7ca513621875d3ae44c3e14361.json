{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DataGrid, GridToolbarContainer, GridToolbarColumnsButton, GridToolbarFilterButton, GridToolbarExport, GridToolbarDensitySelector } from \"@mui/x-data-grid\"; // import { useDemoData } from \"@mui/x-data-grid-generator\";\n\nimport { onSnapshot, query, where, collection, db } from \"../../../../data/firebase\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CustomNoRowsOverlay from \"../../misc/placeholder/custom_no_data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomToolbar() {\n  return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridToolbarColumnsButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarFilterButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarDensitySelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarExport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CustomToolbar;\nexport default function UserTable() {\n  _s();\n\n  const columns = [{\n    field: \"photo\",\n    headerName: \"Image\",\n    width: 75,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Avatar, {\n      alt: \"Profile Picture\",\n      src: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: \"fullName\",\n    headerName: \"Full name\",\n    description: \"This column has a value getter and is not sortable.\",\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`\n  }, {\n    field: \"email\",\n    headerName: \"Email Address\",\n    width: 165\n  }, {\n    field: \"phone\",\n    headerName: \"Phone\",\n    width: 128\n  }, {\n    field: \"gender\",\n    headerName: \"Gender\",\n    width: 86\n  }, {\n    field: \"state\",\n    headerName: \"State of Origin\",\n    width: 100\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 96\n  }]; // const { data } = useDemoData({\n  //   dataSet: \"Commodity\",\n  //   rowLength: 10,\n  //   maxColumns: 6,\n  // });\n\n  const [usersList, setUsersList] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  React.useEffect(() => {\n    const usersRef = collection(db, \"users\");\n    const q = query(usersRef, where(\"userType\", \"==\", \"public\"));\n    onSnapshot(q, querySnapshot => {\n      const usrs = [];\n      querySnapshot.forEach(doc => {\n        usrs.push(doc.data());\n      });\n      setUsersList(usrs);\n    });\n    return () => {\n      setUsersList([]);\n    };\n  }, []);\n\n  if (usersList) {\n    console.log(\"Filtered: \", usersList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid // {...data}\n    , {\n      rows: usersList,\n      columns: columns,\n      components: {\n        Toolbar: CustomToolbar,\n        NoRowsOverlay: CustomNoRowsOverlay\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserTable, \"LygciImoAJTWTKcFz5UDz3659Fk=\");\n\n_c2 = UserTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomToolbar\");\n$RefreshReg$(_c2, \"UserTable\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js"],"names":["React","DataGrid","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarExport","GridToolbarDensitySelector","onSnapshot","query","where","collection","db","Avatar","CustomNoRowsOverlay","CustomToolbar","UserTable","columns","field","headerName","width","renderCell","params","value","description","sortable","valueGetter","row","firstname","lastname","usersList","setUsersList","useState","isLoading","setIsLoading","useEffect","usersRef","q","querySnapshot","usrs","forEach","doc","push","data","console","log","height","Toolbar","NoRowsOverlay"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarColumnsButton,\n  GridToolbarFilterButton,\n  GridToolbarExport,\n  GridToolbarDensitySelector,\n} from \"@mui/x-data-grid\";\n// import { useDemoData } from \"@mui/x-data-grid-generator\";\nimport {\n  onSnapshot,\n  query,\n  where,\n  collection,\n  db,\n} from \"../../../../data/firebase\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CustomNoRowsOverlay from \"../../misc/placeholder/custom_no_data\";\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarColumnsButton />\n      <GridToolbarFilterButton />\n      <GridToolbarDensitySelector />\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nexport default function UserTable() {\n  const columns = [\n    {\n      field: \"photo\",\n      headerName: \"Image\",\n      width: 75,\n      renderCell: (params) => (\n        <Avatar alt=\"Profile Picture\" src={params.value} />\n      ),\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`,\n    },\n    {\n      field: \"email\",\n      headerName: \"Email Address\",\n      width: 165,\n    },\n    {\n      field: \"phone\",\n      headerName: \"Phone\",\n      width: 128,\n    },\n    {\n      field: \"gender\",\n      headerName: \"Gender\",\n      width: 86,\n    },\n    {\n      field: \"state\",\n      headerName: \"State of Origin\",\n      width: 100,\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 96,\n    },\n  ];\n\n  // const { data } = useDemoData({\n  //   dataSet: \"Commodity\",\n  //   rowLength: 10,\n  //   maxColumns: 6,\n  // });\n\n  const [usersList, setUsersList] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    const usersRef = collection(db, \"users\");\n    const q = query(usersRef, where(\"userType\", \"==\", \"public\"));\n    onSnapshot(q, (querySnapshot) => {\n      const usrs = [];\n      querySnapshot.forEach((doc) => {\n        usrs.push(doc.data());\n      });\n      setUsersList(usrs);\n    });\n    return () => {\n      setUsersList([]);\n    };\n  }, []);\n\n  if (usersList) {\n    console.log(\"Filtered: \", usersList);\n  }\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        // {...data}\n        rows={usersList}\n        columns={columns}\n        components={{\n          Toolbar: CustomToolbar,\n          NoRowsOverlay: CustomNoRowsOverlay,\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}