{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/add_news_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, setDoc, doc, uploadBytesResumable, getDownloadURL, query, collection, updateDoc, onSnapshot } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst AddNewsForm = props => {\n  _s();\n\n  var _ref;\n\n  const classes = useStyles();\n  let {\n    setOpen\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    category: \"\",\n    body: \"\",\n    createdAt: \"\",\n    authorName: \"\",\n    authorPhoto: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const [newsBody, setNewsBody] = React.useState(null);\n  const [isError, setIsError] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const categories = [];\n      querySnapshot.forEach(doc => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        authorPhoto: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const createNews = e => {\n    setIsUploading(true); //First upload images to firebase storage then save to firestore\n\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setIsUploading(false);\n        setIsLoading(true);\n        setDoc(doc(db, \"news\", `${timeNow.getTime()}`), {\n          id: timeNow.getTime(),\n          title: formValues.title,\n          image: downloadURL,\n          category: formValues.category,\n          authorName: formValues.authorName,\n          authorPhoto: \" \",\n          body: newsBody,\n          createdAt: timeNow,\n          updatedAt: timeNow\n        }).then(res => {\n          //Now upload author image\n          const tmn = timeNow.getTime();\n          setIsUploading(true);\n          setIsLoading(false);\n          uploadTask2.on(\"state_changed\", snapshot2 => {\n            const prog = snapshot2.bytesTransferred / snapshot2.totalBytes * 100;\n            setProgress(prog);\n          }, error => {\n            setIsUploading(false);\n            enqueueSnackbar(`${error.message}`, {\n              variant: \"error\"\n            });\n          }, () => {\n            getDownloadURL(uploadTask2.snapshot.ref).then(async download => {\n              setIsUploading(false);\n              setIsLoading(true);\n\n              try {\n                const mRef = doc(db, \"news\", \"\" + tmn);\n                await updateDoc(mRef, {\n                  authorPhoto: download\n                });\n                setOpen(false);\n                setIsLoading(false);\n                enqueueSnackbar(`News item added successfully`, {\n                  variant: \"success\"\n                });\n              } catch (error) {\n                setIsLoading(false);\n                enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n                  variant: \"error\"\n                });\n              }\n            });\n          });\n        }).catch(error => {\n          setIsLoading(false);\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createNews,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            validators: [\"required\"],\n            errorMessages: [\"Featured image is required\"],\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: previewImage && /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            className: classes.mb,\n            id: \"title\",\n            label: \"News title\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.title,\n            onChange: handleChange,\n            name: \"title\",\n            fullWidth: true,\n            validators: [\"required\"],\n            errorMessages: [\"News title is required\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n            className: classes.mb,\n            value: formValues.category,\n            onChange: handleChange,\n            label: \"News category\",\n            name: \"category\",\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\",\n            validators: [\"required\"],\n            errorMessages: [\"News category is required\"],\n            children: (_ref = categoriesList !== null && categoriesList !== void 0 ? categoriesList : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => {\n              var _item$title, _item$title2;\n\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: (_item$title = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title !== void 0 ? _item$title : \"\",\n                children: (_item$title2 = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title2 !== void 0 ? _item$title2 : \"\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RichText, {\n        value: newsBody,\n        setValue: setNewsBody,\n        error: isError,\n        setError: setIsError,\n        setIsStartedFilling: setIsStartedFilling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"News title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"News title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        marginBottom: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"authorPhoto\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.authorPhoto,\n              name: \"authorPhoto\",\n              type: \"file\",\n              fullWidth: true,\n              disabled: isLoading,\n              accept: \".png, .jpg, .jpeg,\",\n              onChange: handleChange,\n              validators: [\"required\"],\n              errorMessages: [\"Author's image is required\"],\n              helperText: \"Author's photograph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"authorName\",\n              label: \"Author's name\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.authorName,\n              onChange: handleChange,\n              name: \"authorName\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: previewAuthor && /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: \"Author\",\n              src: previewAuthor,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddNewsForm, \"6x9MI1VknGIF8eihW9PcihqcJOk=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = AddNewsForm;\nexport default AddNewsForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"AddNewsForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/add_news_form.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","setDoc","doc","uploadBytesResumable","getDownloadURL","query","collection","updateDoc","onSnapshot","useSnackbar","Backdrop","Box","CircularProgress","Grid","MenuItem","Typography","RichText","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","AddNewsForm","classes","setOpen","formValues","setFormValues","useState","title","category","body","createdAt","authorName","authorPhoto","file","setFile","authorFile","setAuthorFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","previewAuthor","setPreviewAuthor","newsBody","setNewsBody","isError","setIsError","enqueueSnackbar","isStartedFilling","setIsStartedFilling","categoriesList","setCategoriesList","useEffect","q","unsubscribe","querySnapshot","categories","forEach","push","data","handleChange","e","id","name","target","files","URL","createObjectURL","prevData","createNews","timeNow","Date","storageRef","getTime","storageRef2","uploadTask","uploadTask2","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","updatedAt","res","tmn","snapshot2","prog","download","mRef","catch","zIndex","map","item","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  updateDoc,\n  onSnapshot,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddNewsForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    category: \"\",\n    body: \"\",\n    createdAt: \"\",\n    authorName: \"\",\n    authorPhoto: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const [newsBody, setNewsBody] = React.useState(null);\n  const [isError, setIsError] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createNews = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"news\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            category: formValues.category,\n            authorName: formValues.authorName,\n            authorPhoto: \" \",\n            body: newsBody,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              //Now upload author image\n              const tmn = timeNow.getTime();\n              setIsUploading(true);\n              setIsLoading(false);\n              uploadTask2.on(\n                \"state_changed\",\n                (snapshot2) => {\n                  const prog =\n                    (snapshot2.bytesTransferred / snapshot2.totalBytes) * 100;\n                  setProgress(prog);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask2.snapshot.ref).then(\n                    async (download) => {\n                      setIsUploading(false);\n                      setIsLoading(true);\n                      try {\n                        const mRef = doc(db, \"news\", \"\" + tmn);\n                        await updateDoc(mRef, {\n                          authorPhoto: download,\n                        });\n                        setOpen(false);\n                        setIsLoading(false);\n                        enqueueSnackbar(`News item added successfully`, {\n                          variant: \"success\",\n                        });\n                      } catch (error) {\n                        setIsLoading(false);\n                        enqueueSnackbar(`${error?.message}`, {\n                          variant: \"error\",\n                        });\n                      }\n                    }\n                  );\n                }\n              );\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              className={classes.mb}\n              id=\"title\"\n              label=\"News title\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.title}\n              onChange={handleChange}\n              name=\"title\"\n              fullWidth\n              validators={[\"required\"]}\n              errorMessages={[\"News title is required\"]}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <SelectValidator\n              className={classes.mb}\n              value={formValues.category}\n              onChange={handleChange}\n              label=\"News category\"\n              name=\"category\"\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              validators={[\"required\"]}\n              errorMessages={[\"News category is required\"]}\n            >\n              {(categoriesList ?? [])?.map((item, index) => (\n                <MenuItem key={index} value={item?.title ?? \"\"}>\n                  {item?.title ?? \"\"}\n                </MenuItem>\n              ))}\n            </SelectValidator>\n          </Grid>\n        </Grid>\n\n        <RichText\n          value={newsBody}\n          setValue={setNewsBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.authorPhoto}\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                validators={[\"required\"]}\n                errorMessages={[\"Author's image is required\"]}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.authorName}\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewAuthor && (\n                <Avatar\n                  alt=\"Author\"\n                  src={previewAuthor}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddNewsForm;\n"]},"metadata":{},"sourceType":"module"}