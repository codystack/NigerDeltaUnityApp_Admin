{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/dialogs/custom-dialog.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Modal from \"@mui/material/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    //top: `${top}%`,\n    margin: \"auto\",\n    minWidth: 200 //left: `${left}%`,\n    //transform: `translate(-${top}%, -${left}%)`,\n\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    // minWidth: '20%',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    borderRadius: 16,\n    padding: theme.spacing(3)\n  }\n}));\n\nconst CustomDialog = props => {\n  _s();\n\n  const {\n    title,\n    open,\n    handleClose,\n    bodyComponent\n  } = props;\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          fontFamily: \"roboto\",\n          fontWeight: \"600\"\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), bodyComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      disableBackdropClick: true,\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomDialog, \"xxOl9PXld9CcxCqxpLn4RXaEHe4=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomDialog;\nexport default CustomDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDialog\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/dialogs/custom-dialog.js"],"names":["React","makeStyles","useTheme","Typography","IconButton","CloseIcon","Modal","rand","Math","round","random","getModalStyle","top","left","margin","minWidth","useStyles","theme","paper","display","flexDirection","justifyContent","backgroundColor","palette","background","boxShadow","shadows","borderRadius","padding","spacing","CustomDialog","props","title","open","handleClose","bodyComponent","classes","modalStyle","useState","body","alignItems","fontFamily","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Modal from \"@mui/material/Modal\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    //top: `${top}%`,\n    margin: \"auto\",\n    minWidth: 200,\n    //left: `${left}%`,\n    //transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // minWidth: '20%',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    borderRadius: 16,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CustomDialog = (props) => {\n  const { title, open, handleClose, bodyComponent } = props;\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography\n          variant=\"h6\"\n          style={{ fontFamily: \"roboto\", fontWeight: \"600\" }}\n        >\n          {title}\n        </Typography>\n\n        <IconButton onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <br />\n      {bodyComponent}\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        disableBackdropClick={true}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default CustomDialog;\n"]},"metadata":{},"sourceType":"module"}