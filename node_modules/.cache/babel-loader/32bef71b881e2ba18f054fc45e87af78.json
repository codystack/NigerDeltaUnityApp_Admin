{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, setDoc, doc } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DirAddCategoryForm = props => {\n  _s();\n\n  let {\n    setOpen\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\"\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  const createCategory = e => {\n    const timeNow = new Date();\n    setIsLoading(true);\n    setDoc(doc(db, \"directories-categories\", `${timeNow.getTime()}`), {\n      id: timeNow.getTime(),\n      name: formValues.title,\n      createdAt: timeNow,\n      updatedAt: timeNow\n    }).then(res => {\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`New category added successfully`, {\n        variant: \"success\"\n      });\n    }).catch(error => {\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createCategory,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"title\",\n        label: \"Category name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title,\n        onChange: handleChange // onBlur={handleBlur}\n        ,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Category name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DirAddCategoryForm, \"xdAtAVl8VtiTuVIIzNyH7wAervk=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = DirAddCategoryForm;\nexport default DirAddCategoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DirAddCategoryForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js"],"names":["React","ValidatorForm","TextValidator","Button","db","setDoc","doc","useSnackbar","Backdrop","CircularProgress","DirAddCategoryForm","props","setOpen","formValues","setFormValues","useState","title","isLoading","setIsLoading","enqueueSnackbar","handleChange","e","name","value","target","prevData","useEffect","createCategory","timeNow","Date","getTime","id","createdAt","updatedAt","then","res","variant","catch","error","zIndex","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, setDoc, doc } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst DirAddCategoryForm = (props) => {\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  const createCategory = (e) => {\n    const timeNow = new Date();\n    setIsLoading(true);\n    setDoc(doc(db, \"directories-categories\", `${timeNow.getTime()}`), {\n      id: timeNow.getTime(),\n      name: formValues.title,\n      createdAt: timeNow,\n      updatedAt: timeNow,\n    })\n      .then((res) => {\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`New category added successfully`, {\n          variant: \"success\",\n        });\n      })\n      .catch((error) => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createCategory}>\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default DirAddCategoryForm;\n"]},"metadata":{},"sourceType":"module"}