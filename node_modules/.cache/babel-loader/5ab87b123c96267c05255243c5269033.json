{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, uploadBytesResumable, getDownloadURL, query, collection, onSnapshot, deleteObject, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst EditVendorForm = props => {\n  _s();\n\n  var _ref;\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    name,\n    img,\n    logo,\n    category,\n    address,\n    description,\n    phone,\n    website,\n    opensAt,\n    closesAt,\n    is24Hrs\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n    image: \"\",\n    logo: \"\",\n    category: category,\n    address: address,\n    description: description,\n    phone: phone,\n    website: website,\n    opensAt: opensAt,\n    closesAt: closesAt,\n    is24Hrs: is24Hrs\n  });\n  const [file, setFile] = React.useState(null);\n  const [logoFile, setLogoFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewLogo, setPreviewLogo] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const categories = [];\n      querySnapshot.forEach(doc => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else if (id === \"logo\") {\n      setLogoFile(e.target.files[0]);\n      setPreviewLogo(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        logo: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      enqueueSnackbar(`${error.message || \"\"}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"vendors\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            name: formValues.name,\n            address: formValues.address,\n            description: formValues.description,\n            category: formValues.category,\n            phone: formValues.phone,\n            website: formValues.website,\n            opensAt: formValues.opensAt,\n            closesAt: formValues.closesAt,\n            is24Hrs: formValues.is24Hrs,\n            updatedAt: timeNow,\n            image: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Vendor updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const uploadNewLogo = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"news/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"vendors\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            name: formValues.name,\n            address: formValues.address,\n            description: formValues.description,\n            category: formValues.category,\n            phone: formValues.phone,\n            website: formValues.website,\n            opensAt: formValues.opensAt,\n            closesAt: formValues.closesAt,\n            is24Hrs: formValues.is24Hrs,\n            updatedAt: timeNow,\n            logo: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Vendor updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const updateVendor = async e => {\n    setIsLoading(true); // setFormValues({\n    //   title: formValues.title ? formValues.title : title,\n    //   subTitle: formValues.subTitle ? formValues.subTitle : subTitle,\n    //   authorName: formValues.authorName ? formValues.authorName : authorName,\n    //   category: formValues.category ? formValues.category : category,\n    //   body: formValues.body ? formValues.body : body,\n    // });\n\n    if (!previewImage && !previewLogo) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n\n      try {\n        const mRef = doc(db, \"vendors\", \"\" + id);\n        await updateDoc(mRef, {\n          name: formValues.name,\n          address: formValues.address,\n          description: formValues.description,\n          category: formValues.category,\n          phone: formValues.phone,\n          website: formValues.website,\n          opensAt: formValues.opensAt,\n          closesAt: formValues.closesAt,\n          is24Hrs: formValues.is24Hrs,\n          updatedAt: timeNow\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Vendor updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n          variant: \"error\"\n        });\n      }\n    } else if (previewImage && !previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/\" + id);\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      }).catch(error => {\n        setIsLoading(false);\n      });\n    } else if (!previewImage && previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/img_\" + id);\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewLogo();\n      }).catch(error => {\n        setIsLoading(false);\n      });\n    } else {\n      const fileRef = ref(storage, \"vendors/\" + id);\n      const fileRef2 = ref(storage, \"vendors/img_\" + id);\n      setIsLoading(true);\n      deleteObject(fileRef).then(() => {\n        //Now Delete authors photo\n        deleteObject(fileRef2).then(() => {\n          //Both items were deleted\n          const timeNow = new Date();\n          let storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n          let storageRef2 = ref(storage, \"vendors/img_\" + timeNow.getTime());\n          let uploadTask = uploadBytesResumable(storageRef, file);\n          let uploadTask2 = uploadBytesResumable(storageRef2, logoFile);\n          setIsLoading(false);\n          setIsUploading(true);\n          uploadTask.on(\"state_changed\", snapshot => {\n            const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n            setProgress(uprogress);\n          }, error => {\n            setIsUploading(false);\n            enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your network\"}`, {\n              variant: \"error\"\n            });\n          }, () => {\n            var _uploadTask$snapshot;\n\n            getDownloadURL(uploadTask === null || uploadTask === void 0 ? void 0 : (_uploadTask$snapshot = uploadTask.snapshot) === null || _uploadTask$snapshot === void 0 ? void 0 : _uploadTask$snapshot.ref).then(async downloadURL => {\n              try {\n                const mRef = doc(db, \"vendors\", \"\" + id);\n                await updateDoc(mRef, {\n                  name: formValues.name,\n                  address: formValues.address,\n                  description: formValues.description,\n                  category: formValues.category,\n                  phone: formValues.phone,\n                  website: formValues.website,\n                  opensAt: formValues.opensAt,\n                  closesAt: formValues.closesAt,\n                  is24Hrs: formValues.is24Hrs,\n                  updatedAt: timeNow,\n                  image: downloadURL\n                });\n                const tmn = timeNow.getTime();\n                setIsUploading(true);\n                setIsLoading(false);\n                uploadTask2.on(\"state_changed\", snapshot2 => {\n                  const prog = snapshot2.bytesTransferred / snapshot2.totalBytes * 100;\n                  setProgress(prog);\n                }, error => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n                    variant: \"error\"\n                  });\n                }, () => {\n                  var _uploadTask2$snapshot;\n\n                  getDownloadURL(uploadTask2 === null || uploadTask2 === void 0 ? void 0 : (_uploadTask2$snapshot = uploadTask2.snapshot) === null || _uploadTask2$snapshot === void 0 ? void 0 : _uploadTask2$snapshot.ref).then(async download => {\n                    setIsUploading(false);\n                    setIsLoading(true);\n\n                    try {\n                      const mRef = doc(db, \"vendors\", \"\" + tmn);\n                      await updateDoc(mRef, {\n                        logo: download\n                      });\n                      setOpen(false);\n                      setIsLoading(false);\n                      enqueueSnackbar(`Vendor updated successfully`, {\n                        variant: \"success\"\n                      });\n                    } catch (error) {\n                      setIsLoading(false);\n                      enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n                        variant: \"error\"\n                      });\n                    }\n                  });\n                });\n              } catch (error) {\n                setIsLoading(false);\n                enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n                  variant: \"error\"\n                });\n              }\n            });\n          });\n        }).catch(error => {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n            variant: \"error\"\n          });\n        }); // setIsLoading(false);\n        // uploadNewAuthorPhoto();\n      }).catch(error => {\n        setIsLoading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n          variant: \"error\"\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateNews,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg, .pdf\",\n            onChange: handleChange,\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : img,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectValidator, {\n        className: classes.mb,\n        value: formValues.category ? formValues.category : category,\n        onChange: handleChange,\n        label: \"News category\",\n        name: \"category\",\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"small\",\n        validators: [\"required\"],\n        errorMessages: [\"News category is required\"],\n        children: (_ref = categoriesList !== null && categoriesList !== void 0 ? categoriesList : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => {\n          var _item$title, _item$title2;\n\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: (_item$title = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title !== void 0 ? _item$title : \"\",\n            children: (_item$title2 = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title2 !== void 0 ? _item$title2 : \"\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"News title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title === \" \" ? title : !formValues.title ? \"\" : formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"News title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"subTitle\",\n        label: \"News subtitle (optional)\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.subTitle === \" \" ? subTitle : !formValues.subTitle ? \"\" : formValues.subTitle,\n        onChange: handleChange,\n        name: \"subTitle\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        multiline: true,\n        rows: 5,\n        rowsMax: 10,\n        placeholder: \"Type news here\",\n        name: \"body\",\n        label: \"News content\",\n        value: formValues.body === \" \" ? body : !formValues.body ? \"\" : formValues.body,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"News content is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        marginBottom: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"authorPhoto\",\n              size: \"small\",\n              variant: \"outlined\",\n              name: \"authorPhoto\",\n              type: \"file\",\n              fullWidth: true,\n              disabled: isLoading,\n              accept: \".png, .jpg, .jpeg,\",\n              onChange: handleChange,\n              helperText: \"Author's photograph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"authorName\",\n              label: \"Author's name\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.authorName === \" \" ? authorName : !formValues.authorName ? \"\" : formValues.authorName,\n              onChange: handleChange,\n              name: \"authorName\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: \"Author\",\n              src: previewAuthor ? previewAuthor : authorPhoto,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditVendorForm, \"ML9pB0qqPZQQ7cfitZN/fQZA7Yk=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = EditVendorForm;\nexport default EditVendorForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"EditVendorForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","doc","uploadBytesResumable","getDownloadURL","query","collection","onSnapshot","deleteObject","updateDoc","useSnackbar","addCategory","Backdrop","Box","CircularProgress","Typography","Grid","MenuItem","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","EditVendorForm","classes","setOpen","id","name","img","logo","category","address","description","phone","website","opensAt","closesAt","is24Hrs","formValues","setFormValues","useState","file","setFile","logoFile","setLogoFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","previewLogo","setPreviewLogo","enqueueSnackbar","categoriesList","setCategoriesList","useEffect","q","unsubscribe","querySnapshot","categories","forEach","push","data","handleChange","e","target","files","URL","createObjectURL","prevData","uploadNewImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","message","variant","then","downloadURL","mRef","updatedAt","uploadNewLogo","console","log","updateVendor","fileRef","catch","fileRef2","storageRef2","uploadTask2","tmn","snapshot2","prog","download","zIndex","updateNews","map","item","index","title","subTitle","body","authorName","previewAuthor","authorPhoto"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditVendorForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    name,\n    img,\n    logo,\n    category,\n    address,\n    description,\n    phone,\n    website,\n    opensAt,\n    closesAt,\n    is24Hrs,\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n    image: \"\",\n    logo: \"\",\n    category: category,\n    address: address,\n    description: description,\n    phone: phone,\n    website: website,\n    opensAt: opensAt,\n    closesAt: closesAt,\n    is24Hrs: is24Hrs,\n  });\n  const [file, setFile] = React.useState(null);\n  const [logoFile, setLogoFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewLogo, setPreviewLogo] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"logo\") {\n      setLogoFile(e.target.files[0]);\n      setPreviewLogo(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        logo: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(`${error.message || \"\"}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"vendors\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              name: formValues.name,\n              address: formValues.address,\n              description: formValues.description,\n              category: formValues.category,\n              phone: formValues.phone,\n              website: formValues.website,\n              opensAt: formValues.opensAt,\n              closesAt: formValues.closesAt,\n              is24Hrs: formValues.is24Hrs,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Vendor updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message || \"\"}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewLogo = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"vendors\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              name: formValues.name,\n              address: formValues.address,\n              description: formValues.description,\n              category: formValues.category,\n              phone: formValues.phone,\n              website: formValues.website,\n              opensAt: formValues.opensAt,\n              closesAt: formValues.closesAt,\n              is24Hrs: formValues.is24Hrs,\n              updatedAt: timeNow,\n              logo: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Vendor updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message || \"\"}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateVendor = async (e) => {\n    setIsLoading(true);\n    // setFormValues({\n    //   title: formValues.title ? formValues.title : title,\n    //   subTitle: formValues.subTitle ? formValues.subTitle : subTitle,\n    //   authorName: formValues.authorName ? formValues.authorName : authorName,\n    //   category: formValues.category ? formValues.category : category,\n    //   body: formValues.body ? formValues.body : body,\n    // });\n    if (!previewImage && !previewLogo) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"vendors\", \"\" + id);\n        await updateDoc(mRef, {\n          name: formValues.name,\n          address: formValues.address,\n          description: formValues.description,\n          category: formValues.category,\n          phone: formValues.phone,\n          website: formValues.website,\n          opensAt: formValues.opensAt,\n          closesAt: formValues.closesAt,\n          is24Hrs: formValues.is24Hrs,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Vendor updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    } else if (!previewImage && previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewLogo();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    } else {\n      const fileRef = ref(storage, \"vendors/\" + id);\n      const fileRef2 = ref(storage, \"vendors/img_\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n              let storageRef2 = ref(\n                storage,\n                \"vendors/img_\" + timeNow.getTime()\n              );\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, logoFile);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  enqueueSnackbar(`${error?.message || \"Check your network\"}`, {\n                    variant: \"error\",\n                  });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"vendors\", \"\" + id);\n                        await updateDoc(mRef, {\n                          name: formValues.name,\n                          address: formValues.address,\n                          description: formValues.description,\n                          category: formValues.category,\n                          phone: formValues.phone,\n                          website: formValues.website,\n                          opensAt: formValues.opensAt,\n                          closesAt: formValues.closesAt,\n                          is24Hrs: formValues.is24Hrs,\n                          updatedAt: timeNow,\n                          image: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message || \"\"}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"vendors\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    logo: download,\n                                  });\n                                  setOpen(false);\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `Vendor updated successfully`,\n                                    {\n                                      variant: \"success\",\n                                    }\n                                  );\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(`${error?.message || \"\"}`, {\n                                    variant: \"error\",\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {\n                        setIsLoading(false);\n                        enqueueSnackbar(`${error?.message || \"\"}`, {\n                          variant: \"error\",\n                        });\n                      }\n                    }\n                  );\n                }\n              );\n            })\n            .catch((error) => {\n              setIsLoading(false);\n              enqueueSnackbar(`${error?.message || \"\"}`, {\n                variant: \"error\",\n              });\n            });\n          // setIsLoading(false);\n          // uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          enqueueSnackbar(`${error?.message || \"\"}`, {\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category ? formValues.category : category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"subTitle\"\n          label=\"News subtitle (optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.subTitle === \" \"\n              ? subTitle\n              : !formValues.subTitle\n              ? \"\"\n              : formValues.subTitle\n          }\n          onChange={handleChange}\n          name=\"subTitle\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type news here\"\n          name=\"body\"\n          label=\"News content\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  formValues.authorName === \" \"\n                    ? authorName\n                    : !formValues.authorName\n                    ? \"\"\n                    : formValues.authorName\n                }\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                alt=\"Author\"\n                src={previewAuthor ? previewAuthor : authorPhoto}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditVendorForm;\n"]},"metadata":{},"sourceType":"module"}