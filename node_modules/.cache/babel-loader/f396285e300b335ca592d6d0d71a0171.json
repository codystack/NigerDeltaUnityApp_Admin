{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, uploadBytesResumable, getDownloadURL, query, collection, onSnapshot, deleteObject, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst EditNewsForm = props => {\n  _s();\n\n  var _ref;\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    name,\n    img\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    category: \"\",\n    subTitle: \"\",\n    body: \"\",\n    createdAt: \"\",\n    authorName: \"\",\n    authorPhoto: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const categories = [];\n      querySnapshot.forEach(doc => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        authorPhoto: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNew = e => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"categories\", \"img_\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            title: formValues.title,\n            url: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Category updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`Error updating category`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const updateCategory = async e => {\n    setIsLoading(true);\n\n    if (!previewImage && !previewAuthor) {\n      console.log(\"ID: \", id);\n      const mRef = doc(db, \"news\", id);\n\n      try {\n        await updateDoc(mRef, {\n          title: formValues.title\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Category name updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`Error updating name`, {\n          variant: \"error\"\n        });\n      }\n    } else {\n      setFormValues({\n        title: formValues.title ? formValues.title : name\n      });\n      const fileRef = ref(storage, \"categories/img_\" + id);\n      deleteObject(fileRef).then(() => {\n        // File deleted now upload new file,\n        //get download url and save to firestore\n        setIsLoading(false);\n        uploadNew();\n      }).catch(error => {\n        setIsLoading(false);\n        console.log(\"ErR: \", error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateCategory,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg, .pdf\",\n            onChange: handleChange,\n            validators: [\"required\"],\n            errorMessages: [\"Featured image is required\"],\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: previewImage && /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectValidator, {\n        className: classes.mb,\n        value: formValues.category,\n        onChange: handleChange,\n        label: \"News category\",\n        name: \"category\",\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"small\",\n        validators: [\"required\"],\n        errorMessages: [\"News category is required\"],\n        children: (_ref = categoriesList !== null && categoriesList !== void 0 ? categoriesList : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => {\n          var _item$title, _item$title2;\n\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: (_item$title = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title !== void 0 ? _item$title : \"\",\n            children: (_item$title2 = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title2 !== void 0 ? _item$title2 : \"\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"News title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"News title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"subTitle\",\n        label: \"News subtitle (optional)\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.subTitle,\n        onChange: handleChange,\n        name: \"subTitle\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        multiline: true,\n        rows: 5,\n        rowsMax: 10,\n        placeholder: \"Type news here\",\n        name: \"body\",\n        label: \"News content\",\n        value: formValues.body,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"News content is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        marginBottom: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"authorPhoto\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.authorPhoto,\n              name: \"authorPhoto\",\n              type: \"file\",\n              fullWidth: true,\n              disabled: isLoading,\n              accept: \".png, .jpg, .jpeg, .pdf\",\n              onChange: handleChange,\n              validators: [\"required\"],\n              errorMessages: [\"Author's image is required\"],\n              helperText: \"Author's photograph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"authorName\",\n              label: \"Author's name\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.authorName,\n              onChange: handleChange,\n              name: \"authorName\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: previewAuthor && /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: \"Author\",\n              src: previewAuthor,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditNewsForm, \"IPMeiX3ESgtZGj7ArxpYW72VRZw=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = EditNewsForm;\nexport default EditNewsForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"EditNewsForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","doc","uploadBytesResumable","getDownloadURL","query","collection","onSnapshot","deleteObject","updateDoc","useSnackbar","addCategory","Backdrop","Box","CircularProgress","Typography","Grid","MenuItem","useStyles","theme","image","margin","width","height","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","EditNewsForm","classes","setOpen","id","name","img","formValues","setFormValues","useState","title","category","subTitle","body","createdAt","authorName","authorPhoto","file","setFile","authorFile","setAuthorFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","previewAuthor","setPreviewAuthor","enqueueSnackbar","categoriesList","setCategoriesList","useEffect","q","unsubscribe","querySnapshot","categories","forEach","push","data","handleChange","e","target","files","URL","createObjectURL","prevData","uploadNew","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","mRef","url","updateCategory","fileRef","catch","zIndex","mb","map","item","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditNewsForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, name, img } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    category: \"\",\n    subTitle: \"\",\n    body: \"\",\n    createdAt: \"\",\n    authorName: \"\",\n    authorPhoto: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNew = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"categories\", \"img_\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              url: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Category updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`Error updating category`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateCategory = async (e) => {\n    setIsLoading(true);\n    if (!previewImage && !previewAuthor) {\n      console.log(\"ID: \", id);\n      const mRef = doc(db, \"news\", id);\n      try {\n        await updateDoc(mRef, {\n          title: formValues.title,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Category name updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`Error updating name`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      setFormValues({ title: formValues.title ? formValues.title : name });\n      const fileRef = ref(storage, \"categories/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          // File deleted now upload new file,\n          //get download url and save to firestore\n          setIsLoading(false);\n          uploadNew();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateCategory}>\n        <Grid container spacing={1} padding={1}>\n          <Grid xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"subTitle\"\n          label=\"News subtitle (optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.subTitle}\n          onChange={handleChange}\n          name=\"subTitle\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type news here\"\n          name=\"body\"\n          label=\"News content\"\n          value={formValues.body}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.authorPhoto}\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg, .pdf\"\n                onChange={handleChange}\n                validators={[\"required\"]}\n                errorMessages={[\"Author's image is required\"]}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.authorName}\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid xs={12} sm={6} md={5}>\n            <div>\n              {previewAuthor && (\n                <Avatar\n                  alt=\"Author\"\n                  src={previewAuthor}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditNewsForm;\n"]},"metadata":{},"sourceType":"module"}