{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, uploadBytesResumable, getDownloadURL, query, collection, onSnapshot, deleteObject, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { CameraAlt } from \"@mui/icons-material\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\nconst timesOpen = [\"05:00 AM\", \"06:00 AM\", \"07:00 AM\", \"08:00 AM\", \"09:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\"];\nconst timesClosed = [\"02:00 PM\", \"03:00 PM\", \"04:00 PM\", \"05:00 PM\", \"06:00 PM\", \"07:00 PM\", \"08:00 PM\", \"09:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 AM\"];\n\nconst EditVendorForm = props => {\n  _s();\n\n  var _ref, _ref2, _ref3;\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    name,\n    category,\n    address,\n    description,\n    phone,\n    website,\n    opensAt,\n    closesAt,\n    is24Hours\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n    image: \"\",\n    logo: \"\",\n    category: category,\n    address: address,\n    description: description,\n    phone: phone,\n    website: website,\n    opensAt: opensAt,\n    closesAt: closesAt\n  });\n  const [file, setFile] = React.useState(null);\n  const [logoFile, setLogoFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewLogo, setPreviewLogo] = React.useState(\"\");\n  const [is24Hrs, setIs24Hrs] = React.useState(is24Hours);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const categories = [];\n      querySnapshot.forEach(doc => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else if (id === \"logo\") {\n      setLogoFile(e.target.files[0]);\n      setPreviewLogo(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        logo: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      enqueueSnackbar(`${error.message || \"\"}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"vendors\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            name: formValues.name,\n            address: formValues.address,\n            description: formValues.description,\n            category: formValues.category,\n            phone: formValues.phone,\n            website: formValues.website,\n            opensAt: formValues.opensAt,\n            closesAt: formValues.closesAt,\n            is24Hrs: is24Hrs,\n            updatedAt: timeNow,\n            image: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Vendor updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const uploadNewLogo = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"vendors/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      enqueueSnackbar(`${error.message || \"Check internet\"}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"vendors\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            name: formValues.name,\n            address: formValues.address,\n            description: formValues.description,\n            category: formValues.category,\n            phone: formValues.phone,\n            website: formValues.website,\n            opensAt: formValues.opensAt,\n            closesAt: formValues.closesAt,\n            is24Hrs: is24Hrs,\n            updatedAt: timeNow,\n            logo: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Vendor updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your network\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const updateVendor = async e => {\n    setIsLoading(true); // setFormValues({\n    //   title: formValues.title ? formValues.title : title,\n    //   subTitle: formValues.subTitle ? formValues.subTitle : subTitle,\n    //   authorName: formValues.authorName ? formValues.authorName : authorName,\n    //   category: formValues.category ? formValues.category : category,\n    //   body: formValues.body ? formValues.body : body,\n    // });\n\n    if (!previewImage && !previewLogo) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n\n      try {\n        const mRef = doc(db, \"vendors\", \"\" + id);\n        await updateDoc(mRef, {\n          name: formValues.name,\n          address: formValues.address,\n          description: formValues.description,\n          category: formValues.category,\n          phone: formValues.phone,\n          website: formValues.website,\n          opensAt: formValues.opensAt,\n          closesAt: formValues.closesAt,\n          is24Hrs: is24Hrs,\n          updatedAt: timeNow\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Vendor updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check internet connection\"}`, {\n          variant: \"error\"\n        });\n      }\n    } else if (previewImage && !previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/\" + id);\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      }).catch(error => {\n        setIsLoading(false);\n      });\n    } else if (!previewImage && previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/img_\" + id);\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewLogo();\n      }).catch(error => {\n        setIsLoading(false);\n      });\n    } else {\n      const fileRef = ref(storage, \"vendors/\" + id);\n      const fileRef2 = ref(storage, \"vendors/img_\" + id);\n      setIsLoading(true);\n      deleteObject(fileRef).then(() => {\n        //Now Delete authors photo\n        deleteObject(fileRef2).then(() => {\n          //Both items were deleted\n          const timeNow = new Date();\n          let storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n          let storageRef2 = ref(storage, \"vendors/img_\" + timeNow.getTime());\n          let uploadTask = uploadBytesResumable(storageRef, file);\n          let uploadTask2 = uploadBytesResumable(storageRef2, logoFile);\n          setIsLoading(false);\n          setIsUploading(true);\n          uploadTask.on(\"state_changed\", snapshot => {\n            const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n            setProgress(uprogress);\n          }, error => {\n            setIsUploading(false);\n            enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your network\"}`, {\n              variant: \"error\"\n            });\n          }, () => {\n            var _uploadTask$snapshot;\n\n            getDownloadURL(uploadTask === null || uploadTask === void 0 ? void 0 : (_uploadTask$snapshot = uploadTask.snapshot) === null || _uploadTask$snapshot === void 0 ? void 0 : _uploadTask$snapshot.ref).then(async downloadURL => {\n              try {\n                const mRef = doc(db, \"vendors\", \"\" + id);\n                await updateDoc(mRef, {\n                  name: formValues.name,\n                  address: formValues.address,\n                  description: formValues.description,\n                  category: formValues.category,\n                  phone: formValues.phone,\n                  website: formValues.website,\n                  opensAt: formValues.opensAt,\n                  closesAt: formValues.closesAt,\n                  is24Hrs: is24Hrs,\n                  updatedAt: timeNow,\n                  image: downloadURL\n                });\n                const tmn = timeNow.getTime();\n                setIsUploading(true);\n                setIsLoading(false);\n                uploadTask2.on(\"state_changed\", snapshot2 => {\n                  const prog = snapshot2.bytesTransferred / snapshot2.totalBytes * 100;\n                  setProgress(prog);\n                }, error => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n                    variant: \"error\"\n                  });\n                }, () => {\n                  var _uploadTask2$snapshot;\n\n                  getDownloadURL(uploadTask2 === null || uploadTask2 === void 0 ? void 0 : (_uploadTask2$snapshot = uploadTask2.snapshot) === null || _uploadTask2$snapshot === void 0 ? void 0 : _uploadTask2$snapshot.ref).then(async download => {\n                    setIsUploading(false);\n                    setIsLoading(true);\n\n                    try {\n                      const mRef = doc(db, \"vendors\", \"\" + tmn);\n                      await updateDoc(mRef, {\n                        logo: download\n                      });\n                      setOpen(false);\n                      setIsLoading(false);\n                      enqueueSnackbar(`Vendor updated successfully`, {\n                        variant: \"success\"\n                      });\n                    } catch (error) {\n                      setIsLoading(false);\n                      enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n                        variant: \"error\"\n                      });\n                    }\n                  });\n                });\n              } catch (error) {\n                setIsLoading(false);\n                enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet\"}`, {\n                  variant: \"error\"\n                });\n              }\n            });\n          });\n        }).catch(error => {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n            variant: \"error\"\n          });\n        });\n      }).catch(error => {\n        setIsLoading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"\"}`, {\n          variant: \"error\"\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateVendor,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"image\",\n        size: \"small\",\n        style: {\n          display: \"none\"\n        },\n        variant: \"outlined\",\n        value: formValues.image,\n        name: \"image\",\n        type: \"file\",\n        fullWidth: true,\n        disabled: isLoading,\n        accept: \".png, .jpg, .jpeg\",\n        onChange: handleChange,\n        validators: [\"required\"],\n        errorMessages: [\"Featured image is required\"],\n        helperText: \"Featured image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"logo\",\n        size: \"small\",\n        variant: \"outlined\",\n        style: {\n          display: \"none\"\n        },\n        value: formValues.logo,\n        name: \"logo\",\n        type: \"file\",\n        fullWidth: true,\n        disabled: isLoading,\n        accept: \".png, .jpg, .jpeg,\",\n        onChange: handleChange,\n        validators: [\"required\"],\n        errorMessages: [\"Vendor's logo is required\"],\n        helperText: \"Vendor's logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: 144,\n          width: 420,\n          backgroundImage: \"url(\" + previewImage + \")\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          marginBottom: 24\n        },\n        typeof: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            marginTop: \"auto\",\n            marginBottom: -32\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"logo\",\n            style: {\n              zIndex: 1000,\n              display: \"flex\",\n              flexDirection: \"row\",\n              padding: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"circular\",\n              alt: \"Author\",\n              src: previewLogo,\n              className: classes.logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"logo\",\n              style: {\n                marginTop: 16,\n                marginLeft: -10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.subRow,\n                children: /*#__PURE__*/_jsxDEV(CameraAlt, {\n                  style: {\n                    color: \"white\",\n                    zIndex: 10000\n                  },\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            style: {\n              marginBottom: 24,\n              padding: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.subRow,\n              children: [/*#__PURE__*/_jsxDEV(Edit, {\n                color: \"primary\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"blue\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 0,\n        marginBottom: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n              className: classes.mb,\n              value: formValues.category,\n              onChange: handleChange,\n              label: \"Category\",\n              name: \"category\",\n              fullWidth: true,\n              variant: \"outlined\",\n              size: \"small\",\n              validators: [\"required\"],\n              errorMessages: [\"Vendor's category is required\"],\n              children: (_ref = categoriesList !== null && categoriesList !== void 0 ? categoriesList : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => {\n                var _item$name, _item$name2;\n\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: (_item$name = item === null || item === void 0 ? void 0 : item.name) !== null && _item$name !== void 0 ? _item$name : \"\",\n                  children: (_item$name2 = item === null || item === void 0 ? void 0 : item.name) !== null && _item$name2 !== void 0 ? _item$name2 : \"\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"name\",\n              label: \"Vendor name\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.name,\n              onChange: handleChange,\n              name: \"name\",\n              required: true,\n              fullWidth: true,\n              validators: [\"required\"],\n              errorMessages: [\"Vendor's name is required\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"address\",\n        label: \"Vendor address\",\n        size: \"small\",\n        variant: \"outlined\",\n        required: true,\n        value: formValues.address,\n        onChange: handleChange,\n        name: \"address\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Vendor's address is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 0,\n        marginBottom: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"phone\",\n              label: \"Phone number\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.phone,\n              onChange: handleChange,\n              name: \"phone\",\n              fullWidth: true,\n              required: true,\n              type: \"phone\",\n              validators: [\"required\"],\n              errorMessages: [\"Vendor's phone number is required\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"website\",\n              label: \"Website (Optional)\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.website,\n              onChange: handleChange,\n              name: \"website\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        rowsMax: 5,\n        placeholder: \"Briefly describe vendor\",\n        name: \"description\",\n        label: \"Description\",\n        value: formValues.description,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Vendor's description is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.row,\n        children: [!is24Hrs ? /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          padding: 0,\n          marginBottom: 0,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n                className: classes.mb,\n                value: formValues.opensAt,\n                onChange: handleChange,\n                label: \"Opens By\",\n                name: \"opensAt\",\n                fullWidth: true,\n                variant: \"outlined\",\n                size: \"small\",\n                validators: [\"required\"],\n                errorMessages: [\"Opening time is required\"],\n                children: (_ref2 = timesOpen !== null && timesOpen !== void 0 ? timesOpen : []) === null || _ref2 === void 0 ? void 0 : _ref2.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: item !== null && item !== void 0 ? item : \"\",\n                  children: item !== null && item !== void 0 ? item : \"\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n                className: classes.mb,\n                value: formValues.closesAt,\n                onChange: handleChange,\n                label: \"Closes By\",\n                name: \"closesAt\",\n                fullWidth: true,\n                variant: \"outlined\",\n                size: \"small\",\n                validators: [\"required\"],\n                errorMessages: [\"Closing time is required\"],\n                children: (_ref3 = timesClosed !== null && timesClosed !== void 0 ? timesClosed : []) === null || _ref3 === void 0 ? void 0 : _ref3.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: item !== null && item !== void 0 ? item : \"\",\n                  children: item !== null && item !== void 0 ? item : \"\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Always open 24/7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.subRow,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            fontSize: 14,\n            children: \"Always open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: is24Hrs,\n            onChange: () => setIs24Hrs(!is24Hrs)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 482,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditVendorForm, \"nLoD38badCh2hhHecmO+DEybWrA=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = EditVendorForm;\nexport default EditVendorForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"EditVendorForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","doc","uploadBytesResumable","getDownloadURL","query","collection","onSnapshot","deleteObject","updateDoc","useSnackbar","Backdrop","Box","Checkbox","CircularProgress","Typography","Grid","MenuItem","CameraAlt","Edit","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","timesOpen","timesClosed","EditVendorForm","classes","setOpen","id","name","category","address","description","phone","website","opensAt","closesAt","is24Hours","formValues","setFormValues","useState","logo","file","setFile","logoFile","setLogoFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","previewLogo","setPreviewLogo","is24Hrs","setIs24Hrs","enqueueSnackbar","categoriesList","setCategoriesList","useEffect","q","unsubscribe","querySnapshot","categories","forEach","push","data","handleChange","e","target","files","URL","createObjectURL","prevData","uploadNewImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","message","variant","then","downloadURL","mRef","updatedAt","uploadNewLogo","updateVendor","fileRef","catch","fileRef2","storageRef2","uploadTask2","tmn","snapshot2","prog","console","log","download","zIndex","display","flexDirection","backgroundImage","backgroundRepeat","backgroundSize","justifyContent","alignItems","marginTop","padding","marginLeft","subRow","map","item","index","row"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { CameraAlt } from \"@mui/icons-material\";\nimport Edit from \"@mui/icons-material/Edit\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst timesOpen = [\n  \"05:00 AM\",\n  \"06:00 AM\",\n  \"07:00 AM\",\n  \"08:00 AM\",\n  \"09:00 AM\",\n  \"10:00 AM\",\n  \"11:00 AM\",\n  \"12:00 PM\",\n];\n\nconst timesClosed = [\n  \"02:00 PM\",\n  \"03:00 PM\",\n  \"04:00 PM\",\n  \"05:00 PM\",\n  \"06:00 PM\",\n  \"07:00 PM\",\n  \"08:00 PM\",\n  \"09:00 PM\",\n  \"10:00 PM\",\n  \"11:00 PM\",\n  \"12:00 AM\",\n];\n\nconst EditVendorForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    name,\n    category,\n    address,\n    description,\n    phone,\n    website,\n    opensAt,\n    closesAt,\n    is24Hours,\n  } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n    image: \"\",\n    logo: \"\",\n    category: category,\n    address: address,\n    description: description,\n    phone: phone,\n    website: website,\n    opensAt: opensAt,\n    closesAt: closesAt,\n  });\n\n  const [file, setFile] = React.useState(null);\n  const [logoFile, setLogoFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewLogo, setPreviewLogo] = React.useState(\"\");\n  const [is24Hrs, setIs24Hrs] = React.useState(is24Hours);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"logo\") {\n      setLogoFile(e.target.files[0]);\n      setPreviewLogo(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        logo: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(`${error.message || \"\"}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"vendors\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              name: formValues.name,\n              address: formValues.address,\n              description: formValues.description,\n              category: formValues.category,\n              phone: formValues.phone,\n              website: formValues.website,\n              opensAt: formValues.opensAt,\n              closesAt: formValues.closesAt,\n              is24Hrs: is24Hrs,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Vendor updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message || \"\"}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewLogo = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"vendors/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(`${error.message || \"Check internet\"}`, {\n          variant: \"error\",\n        });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"vendors\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              name: formValues.name,\n              address: formValues.address,\n              description: formValues.description,\n              category: formValues.category,\n              phone: formValues.phone,\n              website: formValues.website,\n              opensAt: formValues.opensAt,\n              closesAt: formValues.closesAt,\n              is24Hrs: is24Hrs,\n              updatedAt: timeNow,\n              logo: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Vendor updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message || \"Check your network\"}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateVendor = async (e) => {\n    setIsLoading(true);\n    // setFormValues({\n    //   title: formValues.title ? formValues.title : title,\n    //   subTitle: formValues.subTitle ? formValues.subTitle : subTitle,\n    //   authorName: formValues.authorName ? formValues.authorName : authorName,\n    //   category: formValues.category ? formValues.category : category,\n    //   body: formValues.body ? formValues.body : body,\n    // });\n    if (!previewImage && !previewLogo) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"vendors\", \"\" + id);\n        await updateDoc(mRef, {\n          name: formValues.name,\n          address: formValues.address,\n          description: formValues.description,\n          category: formValues.category,\n          phone: formValues.phone,\n          website: formValues.website,\n          opensAt: formValues.opensAt,\n          closesAt: formValues.closesAt,\n          is24Hrs: is24Hrs,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Vendor updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message || \"Check internet connection\"}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    } else if (!previewImage && previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewLogo();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    } else {\n      const fileRef = ref(storage, \"vendors/\" + id);\n      const fileRef2 = ref(storage, \"vendors/img_\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n              let storageRef2 = ref(\n                storage,\n                \"vendors/img_\" + timeNow.getTime()\n              );\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, logoFile);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  enqueueSnackbar(`${error?.message || \"Check your network\"}`, {\n                    variant: \"error\",\n                  });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"vendors\", \"\" + id);\n                        await updateDoc(mRef, {\n                          name: formValues.name,\n                          address: formValues.address,\n                          description: formValues.description,\n                          category: formValues.category,\n                          phone: formValues.phone,\n                          website: formValues.website,\n                          opensAt: formValues.opensAt,\n                          closesAt: formValues.closesAt,\n                          is24Hrs: is24Hrs,\n                          updatedAt: timeNow,\n                          image: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message || \"\"}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"vendors\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    logo: download,\n                                  });\n                                  setOpen(false);\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `Vendor updated successfully`,\n                                    {\n                                      variant: \"success\",\n                                    }\n                                  );\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `${\n                                      error?.message ||\n                                      \"Check your internet connection\"\n                                    }`,\n                                    {\n                                      variant: \"error\",\n                                    }\n                                  );\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {\n                        setIsLoading(false);\n                        enqueueSnackbar(\n                          `${error?.message || \"Check your internet\"}`,\n                          {\n                            variant: \"error\",\n                          }\n                        );\n                      }\n                    }\n                  );\n                }\n              );\n            })\n            .catch((error) => {\n              setIsLoading(false);\n              enqueueSnackbar(`${error?.message || \"\"}`, {\n                variant: \"error\",\n              });\n            });\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          enqueueSnackbar(`${error?.message || \"\"}`, {\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateVendor}>\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          style={{ display: \"none\" }}\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Featured image is required\"]}\n          helperText=\"Featured image\"\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"logo\"\n          size=\"small\"\n          variant=\"outlined\"\n          style={{ display: \"none\" }}\n          value={formValues.logo}\n          name=\"logo\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg,\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's logo is required\"]}\n          helperText=\"Vendor's logo\"\n        />\n\n        <label\n          htmlFor=\"image\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: 144,\n            width: 420,\n            backgroundImage: \"url(\" + previewImage + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            marginBottom: 24,\n          }}\n          typeof=\"file\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginTop: \"auto\",\n              marginBottom: -32,\n            }}\n          >\n            <label\n              htmlFor=\"logo\"\n              style={{\n                zIndex: 1000,\n                display: \"flex\",\n                flexDirection: \"row\",\n                padding: 5,\n              }}\n            >\n              <Avatar\n                variant=\"circular\"\n                alt=\"Author\"\n                src={previewLogo}\n                className={classes.logo}\n              />\n              <label htmlFor=\"logo\" style={{ marginTop: 16, marginLeft: -10 }}>\n                <div className={classes.subRow}>\n                  <CameraAlt\n                    style={{ color: \"white\", zIndex: 10000 }}\n                    fontSize=\"small\"\n                  />\n                </div>\n              </label>\n            </label>\n            <label htmlFor=\"image\" style={{ marginBottom: 24, padding: 8 }}>\n              <div className={classes.subRow}>\n                <Edit color=\"primary\" fontSize=\"small\" />\n                <Typography color=\"blue\">Edit</Typography>\n              </div>\n            </label>\n          </div>\n        </label>\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <SelectValidator\n                className={classes.mb}\n                value={formValues.category}\n                onChange={handleChange}\n                label=\"Category\"\n                name=\"category\"\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's category is required\"]}\n              >\n                {(categoriesList ?? [])?.map((item, index) => (\n                  <MenuItem key={index} value={item?.name ?? \"\"}>\n                    {item?.name ?? \"\"}\n                  </MenuItem>\n                ))}\n              </SelectValidator>\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"name\"\n                label=\"Vendor name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.name}\n                onChange={handleChange}\n                name=\"name\"\n                required\n                fullWidth\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's name is required\"]}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"address\"\n          label=\"Vendor address\"\n          size=\"small\"\n          variant=\"outlined\"\n          required\n          value={formValues.address}\n          onChange={handleChange}\n          name=\"address\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's address is required\"]}\n        />\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"phone\"\n                label=\"Phone number\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.phone}\n                onChange={handleChange}\n                name=\"phone\"\n                fullWidth\n                required\n                type=\"phone\"\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's phone number is required\"]}\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"website\"\n                label=\"Website (Optional)\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.website}\n                onChange={handleChange}\n                name=\"website\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={4}\n          rowsMax={5}\n          placeholder=\"Briefly describe vendor\"\n          name=\"description\"\n          label=\"Description\"\n          value={formValues.description}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's description is required\"]}\n        />\n\n        <div className={classes.row}>\n          {!is24Hrs ? (\n            <Grid container spacing={1} padding={0} marginBottom={0}>\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <SelectValidator\n                    className={classes.mb}\n                    value={formValues.opensAt}\n                    onChange={handleChange}\n                    label=\"Opens By\"\n                    name=\"opensAt\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Opening time is required\"]}\n                  >\n                    {(timesOpen ?? [])?.map((item, index) => (\n                      <MenuItem key={index} value={item ?? \"\"}>\n                        {item ?? \"\"}\n                      </MenuItem>\n                    ))}\n                  </SelectValidator>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <SelectValidator\n                    className={classes.mb}\n                    value={formValues.closesAt}\n                    onChange={handleChange}\n                    label=\"Closes By\"\n                    name=\"closesAt\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Closing time is required\"]}\n                  >\n                    {(timesClosed ?? [])?.map((item, index) => (\n                      <MenuItem key={index} value={item ?? \"\"}>\n                        {item ?? \"\"}\n                      </MenuItem>\n                    ))}\n                  </SelectValidator>\n                </div>\n              </Grid>\n            </Grid>\n          ) : (\n            <Typography>Always open 24/7</Typography>\n          )}\n          <div className={classes.subRow}>\n            <Typography fontSize={14}>Always open</Typography>\n            <Checkbox value={is24Hrs} onChange={() => setIs24Hrs(!is24Hrs)} />\n          </div>\n        </div>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditVendorForm;\n"]},"metadata":{},"sourceType":"module"}