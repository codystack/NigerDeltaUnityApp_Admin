{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, setDoc, doc, uploadBytes, uploadBytesResumable, getDownloadURL } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst CategoryForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const createCategory = e => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100; // console.log(\"Upload is \" + progress + \"% done\");\n\n      setProgress(uprogress);\n    }, error => {\n      // Handle unsuccessful uploads\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        console.log(\"URL D: \", downloadURL.slice(7));\n        setDoc(doc(db, \"categories\", \"id\"), {\n          id: \"__\"\n        }).then(res => {\n          console.log(\"Fake ID\", res); //   setDoc(doc(db, \"categories\", , ), {\n          //   })\n        }); //   db.collection(\"categories\")\n        //     .add({\n        //       v: \"__\",\n        //     })\n        //     .then((docRef) => {\n        //       //Now save fully to firestore\n        //       addCategory(docRef.id, formValues.title, downloadURL)\n        //         .then((result) => {\n        //           setIsLoading(false);\n        //           enqueueSnackbar(`New category added successfully`, {\n        //             variant: \"success\",\n        //           });\n        //         })\n        //         .catch((err) => {\n        //           setIsLoading(false);\n        //         });\n        //     })\n        //     .catch((error) => {\n        //       setIsLoading(false);\n        //       console.error(\"Error adding document: \", error);\n        //     });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createCategory,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"title\",\n        label: \"Category name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title,\n        onChange: handleChange // onBlur={handleBlur}\n        ,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Category name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"image\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.image,\n        name: \"image\",\n        type: \"file\",\n        fullWidth: true,\n        disabled: isLoading,\n        accept: \".png, .jpg, .jpeg, .pdf\",\n        onChange: handleChange,\n        validators: [\"required\"],\n        errorMessages: [\"Category image is required\"],\n        helperText: \"Upload category image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: previewPassport && /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\",\n          alt: \"Passport\",\n          src: previewPassport,\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoryForm, \"ddsS/CO4+nMO0qRh3/X8wNyYIsk=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = CategoryForm;\nexport default CategoryForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"CategoryForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","setDoc","doc","uploadBytes","uploadBytesResumable","getDownloadURL","useSnackbar","addCategory","Backdrop","Box","CircularProgress","Typography","useStyles","theme","image","margin","width","height","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","CategoryForm","classes","formValues","setFormValues","useState","title","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewPassport","setPreviewPassport","enqueueSnackbar","handleChange","e","id","name","target","files","URL","createObjectURL","prevData","createCategory","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","slice","res","zIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytes,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst CategoryForm = () => {\n  const classes = useStyles();\n\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createCategory = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        // console.log(\"Upload is \" + progress + \"% done\");\n        setProgress(uprogress);\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          console.log(\"URL D: \", downloadURL.slice(7));\n          setDoc(doc(db, \"categories\", \"id\"), {\n            id: \"__\",\n          }).then((res) => {\n            console.log(\"Fake ID\", res);\n            //   setDoc(doc(db, \"categories\", , ), {\n\n            //   })\n          });\n          //   db.collection(\"categories\")\n          //     .add({\n          //       v: \"__\",\n          //     })\n          //     .then((docRef) => {\n          //       //Now save fully to firestore\n          //       addCategory(docRef.id, formValues.title, downloadURL)\n          //         .then((result) => {\n          //           setIsLoading(false);\n          //           enqueueSnackbar(`New category added successfully`, {\n          //             variant: \"success\",\n          //           });\n          //         })\n          //         .catch((err) => {\n          //           setIsLoading(false);\n          //         });\n          //     })\n          //     .catch((error) => {\n          //       setIsLoading(false);\n          //       console.error(\"Error adding document: \", error);\n          //     });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createCategory}>\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n        <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        />\n\n        <div>\n          {previewPassport && (\n            <Avatar\n              variant=\"rounded\"\n              alt=\"Passport\"\n              src={previewPassport}\n              className={classes.image}\n            />\n          )}\n        </div>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default CategoryForm;\n"]},"metadata":{},"sourceType":"module"}