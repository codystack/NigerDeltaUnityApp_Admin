{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/edit_education.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, uploadBytesResumable, getDownloadURL, query, collection, onSnapshot, deleteObject, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { CameraAlt } from \"@mui/icons-material\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst EditEducationForm = props => {\n  _s();\n\n  var _ref;\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title,\n    category,\n    url,\n    description,\n    img\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    category: category,\n    url: url,\n    description: description\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  React.useEffect(() => {\n    const q = query(collection(db, \"education-categories\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const categories = [];\n      querySnapshot.forEach(doc => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"education/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      enqueueSnackbar(`${error.message || \"Check your internet connection\"}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"education\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            title: formValues.title,\n            url: formValues.url,\n            description: formValues.description,\n            category: formValues.category,\n            updatedAt: timeNow,\n            image: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Data updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const updateEducation = async e => {\n    setIsLoading(true);\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n\n      try {\n        const mRef = doc(db, \"education\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          url: formValues.url,\n          description: formValues.description,\n          category: formValues.category,\n          updatedAt: timeNow\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Data updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check internet connection\"}`, {\n          variant: \"error\"\n        });\n      }\n    } else if (previewImage) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"education/\" + id);\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      }).catch(error => {\n        setIsLoading(false);\n        enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check internet connection\"}`, {\n          variant: \"error\"\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateEducation,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"image\",\n        size: \"small\",\n        style: {\n          display: \"none\"\n        },\n        variant: \"outlined\",\n        value: formValues.image,\n        name: \"image\",\n        type: \"file\",\n        fullWidth: true,\n        disabled: isLoading,\n        accept: \".png, .jpg, .jpeg\",\n        onChange: handleChange,\n        validators: [\"required\"],\n        errorMessages: [\"Featured image is required\"],\n        helperText: \"Featured image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: 144,\n          width: 420,\n          backgroundImage: \"url(\" + previewImage + \")\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          marginBottom: 24\n        },\n        typeof: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"end\",\n            alignItems: \"center\",\n            marginTop: \"auto\",\n            marginBottom: -32\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            style: {\n              marginBottom: 24,\n              padding: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.subRow,\n              children: [/*#__PURE__*/_jsxDEV(Edit, {\n                color: \"primary\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"blue\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 0,\n        marginBottom: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n              className: classes.mb,\n              value: formValues.category,\n              onChange: handleChange,\n              label: \"Category\",\n              name: \"category\",\n              fullWidth: true,\n              variant: \"outlined\",\n              size: \"small\",\n              validators: [\"required\"],\n              errorMessages: [\"Category is required\"],\n              children: (_ref = categoriesList !== null && categoriesList !== void 0 ? categoriesList : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => {\n                var _item$name, _item$name2;\n\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: (_item$name = item === null || item === void 0 ? void 0 : item.name) !== null && _item$name !== void 0 ? _item$name : \"\",\n                  children: (_item$name2 = item === null || item === void 0 ? void 0 : item.name) !== null && _item$name2 !== void 0 ? _item$name2 : \"\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              label: \"Title\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.title,\n              onChange: handleChange,\n              name: \"title\",\n              required: true,\n              fullWidth: true,\n              validators: [\"required\"],\n              errorMessages: [\"Title is required\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        label: \"Website link (Optional)\",\n        size: \"small\",\n        variant: \"outlined\",\n        required: true,\n        value: formValues.url,\n        onChange: handleChange,\n        name: \"url\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        rowsMax: 5,\n        placeholder: \"Briefly describe here...\",\n        name: \"description\",\n        label: \"Description\",\n        value: formValues.description,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Description is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditEducationForm, \"dHwbV/Z7w9nk0eQc0Jru9XfFRTY=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = EditEducationForm;\nexport default EditEducationForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"EditEducationForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/edit_education.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","doc","uploadBytesResumable","getDownloadURL","query","collection","onSnapshot","deleteObject","updateDoc","useSnackbar","Backdrop","Box","Checkbox","CircularProgress","Typography","Grid","MenuItem","CameraAlt","Edit","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","EditEducationForm","classes","setOpen","id","title","category","url","description","img","formValues","setFormValues","useState","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","enqueueSnackbar","categoriesList","setCategoriesList","useEffect","q","unsubscribe","querySnapshot","categories","forEach","push","data","handleChange","e","name","target","files","URL","createObjectURL","prevData","uploadNewImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","message","variant","then","downloadURL","mRef","updatedAt","updateEducation","fileRef","catch","zIndex","display","flexDirection","backgroundImage","backgroundRepeat","backgroundSize","justifyContent","alignItems","marginTop","padding","subRow","map","item","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { CameraAlt } from \"@mui/icons-material\";\nimport Edit from \"@mui/icons-material/Edit\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditEducationForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title, category, url, description, img } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    category: category,\n    url: url,\n    description: description,\n  });\n\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"education-categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"education/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(\n          `${error.message || \"Check your internet connection\"}`,\n          { variant: \"error\" }\n        );\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"education\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              url: formValues.url,\n              description: formValues.description,\n              category: formValues.category,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Data updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const updateEducation = async (e) => {\n    setIsLoading(true);\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"education\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          url: formValues.url,\n          description: formValues.description,\n          category: formValues.category,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Data updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message || \"Check internet connection\"}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"education/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          enqueueSnackbar(`${error?.message || \"Check internet connection\"}`, {\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateEducation}>\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          style={{ display: \"none\" }}\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Featured image is required\"]}\n          helperText=\"Featured image\"\n        />\n\n        <label\n          htmlFor=\"image\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: 144,\n            width: 420,\n            backgroundImage: \"url(\" + previewImage + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            marginBottom: 24,\n          }}\n          typeof=\"file\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"end\",\n              alignItems: \"center\",\n              marginTop: \"auto\",\n              marginBottom: -32,\n            }}\n          >\n            <label htmlFor=\"image\" style={{ marginBottom: 24, padding: 8 }}>\n              <div className={classes.subRow}>\n                <Edit color=\"primary\" fontSize=\"small\" />\n                <Typography color=\"blue\">Edit</Typography>\n              </div>\n            </label>\n          </div>\n        </label>\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <SelectValidator\n                className={classes.mb}\n                value={formValues.category}\n                onChange={handleChange}\n                label=\"Category\"\n                name=\"category\"\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                validators={[\"required\"]}\n                errorMessages={[\"Category is required\"]}\n              >\n                {(categoriesList ?? [])?.map((item, index) => (\n                  <MenuItem key={index} value={item?.name ?? \"\"}>\n                    {item?.name ?? \"\"}\n                  </MenuItem>\n                ))}\n              </SelectValidator>\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                label=\"Title\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.title}\n                onChange={handleChange}\n                name=\"title\"\n                required\n                fullWidth\n                validators={[\"required\"]}\n                errorMessages={[\"Title is required\"]}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          label=\"Website link (Optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          required\n          value={formValues.url}\n          onChange={handleChange}\n          name=\"url\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={4}\n          rowsMax={5}\n          placeholder=\"Briefly describe here...\"\n          name=\"description\"\n          label=\"Description\"\n          value={formValues.description}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Description is required\"]}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditEducationForm;\n"]},"metadata":{},"sourceType":"module"}