{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/products/add_product.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, setDoc, doc, uploadBytesResumable, getDownloadURL, query, collection, updateDoc, onSnapshot } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst AddProductForm = props => {\n  _s();\n\n  var _ref;\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    vendorID,\n    vendorAddress,\n    vendorName,\n    vendorPhone,\n    vendorWebsite\n  } = props;\n  let deliveryTypes = [\"Free delivery\", \"Pick up\", \"Pay on delivery\"];\n  const [formValues, setFormValues] = React.useState({\n    name: \"\",\n    image: \"\",\n    vendorName: \"\",\n    delivery: \"\",\n    vendorAddress: \"\",\n    vendorPhone: \"\",\n    vendorWebsite: \"\",\n    description: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const createNews = e => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload images to firebase storage then save to firestore\n\n    let storageRef = ref(storage, \"products/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setIsUploading(false);\n        setIsLoading(true);\n        setDoc(doc(db, \"products\", `${timeNow.getTime()}`), {\n          id: timeNow.getTime(),\n          name: formValues.name,\n          image: downloadURL,\n          delivery: formValues.delivery,\n          vendorID: vendorID,\n          vendorName: vendorName,\n          vendorPhone: vendorPhone,\n          vendorAddress: vendorAddress,\n          vendorWebsite: vendorWebsite,\n          description: formValues.description,\n          createdAt: timeNow,\n          updatedAt: timeNow\n        }).then(res => {\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`New product added successfully`, {\n            variant: \"success\"\n          });\n        }).catch(error => {\n          setIsLoading(false);\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n            variant: \"error\"\n          });\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createNews,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            validators: [\"required\"],\n            errorMessages: [\"Product image is required\"],\n            helperText: \"Product image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: previewImage && /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectValidator, {\n        className: classes.mb,\n        value: formValues.delivery,\n        onChange: handleChange,\n        label: \"Delivery type\",\n        name: \"delivery\",\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"small\",\n        validators: [\"required\"],\n        errorMessages: [\"Delivery type is required\"],\n        children: (_ref = deliveryTypes !== null && deliveryTypes !== void 0 ? deliveryTypes : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item !== null && item !== void 0 ? item : \"\",\n          children: item !== null && item !== void 0 ? item : \"\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"name\",\n        label: \"Product name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.name,\n        onChange: handleChange,\n        name: \"name\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Product name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        multiline: true,\n        rows: 5,\n        rowsMax: 10,\n        placeholder: \"Type description here\",\n        name: \"description\",\n        label: \"Product description\",\n        value: formValues.description,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Product description is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddProductForm, \"Mr03V1PXD3yAu8vcpkMFesV1MH0=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = AddProductForm;\nexport default AddProductForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"AddProductForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/products/add_product.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","setDoc","doc","uploadBytesResumable","getDownloadURL","query","collection","updateDoc","onSnapshot","useSnackbar","Backdrop","Box","CircularProgress","Grid","MenuItem","Typography","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","AddProductForm","classes","setOpen","vendorID","vendorAddress","vendorName","vendorPhone","vendorWebsite","deliveryTypes","formValues","setFormValues","useState","name","delivery","description","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","enqueueSnackbar","handleChange","e","id","target","files","URL","createObjectURL","prevData","createNews","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","createdAt","updatedAt","res","catch","zIndex","map","item","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  updateDoc,\n  onSnapshot,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddProductForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    vendorID,\n    vendorAddress,\n    vendorName,\n    vendorPhone,\n    vendorWebsite,\n  } = props;\n  let deliveryTypes = [\"Free delivery\", \"Pick up\", \"Pay on delivery\"];\n  const [formValues, setFormValues] = React.useState({\n    name: \"\",\n    image: \"\",\n    vendorName: \"\",\n    delivery: \"\",\n    vendorAddress: \"\",\n    vendorPhone: \"\",\n    vendorWebsite: \"\",\n    description: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createNews = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload images to firebase storage then save to firestore\n    let storageRef = ref(storage, \"products/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"products\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            name: formValues.name,\n            image: downloadURL,\n            delivery: formValues.delivery,\n            vendorID: vendorID,\n            vendorName: vendorName,\n            vendorPhone: vendorPhone,\n            vendorAddress: vendorAddress,\n            vendorWebsite: vendorWebsite,\n            description: formValues.description,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New product added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n              setIsLoading(false);\n              enqueueSnackbar(\n                `${error?.message || \"Check your internet connection\"}`,\n                {\n                  variant: \"error\",\n                }\n              );\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Product image is required\"]}\n              helperText=\"Product image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.delivery}\n          onChange={handleChange}\n          label=\"Delivery type\"\n          name=\"delivery\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"Delivery type is required\"]}\n        >\n          {(deliveryTypes ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item ?? \"\"}>\n              {item ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"name\"\n          label=\"Product name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n          name=\"name\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Product name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type description here\"\n          name=\"description\"\n          label=\"Product description\"\n          value={formValues.description}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Product description is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddProductForm;\n"]},"metadata":{},"sourceType":"module"}