{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { DataGrid, GridToolbarContainer, GridToolbarColumnsButton, GridToolbarFilterButton, GridToolbarExport, GridToolbarDensitySelector } from \"@mui/x-data-grid\";\nimport { useDemoData } from \"@mui/x-data-grid-generator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomToolbar() {\n  return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridToolbarColumnsButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarFilterButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarDensitySelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarExport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CustomToolbar;\nexport default function UserTable() {\n  _s();\n\n  const columns = [{\n    field: \"photo\",\n    headerName: \"Image\",\n    width: 75,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Avatar, {\n      alt: \"Profile Picture\",\n      src: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: \"fullName\",\n    headerName: \"Full name\",\n    description: \"This column has a value getter and is not sortable.\",\n    sortable: false,\n    width: 180,\n    valueGetter: params => `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`\n  }, {\n    field: \"email\",\n    headerName: \"Email Address\",\n    width: 110,\n    editable: true\n  }, {\n    field: \"phone\",\n    headerName: \"Phone\",\n    width: 110,\n    editable: true\n  }];\n  const {\n    data\n  } = useDemoData({\n    dataSet: \"Commodity\",\n    rowLength: 10,\n    maxColumns: 6\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, { ...data,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserTable, \"bNEVHhjR7F5GZvsqeL0z5C54e3s=\", false, function () {\n  return [useDemoData];\n});\n\n_c2 = UserTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomToolbar\");\n$RefreshReg$(_c2, \"UserTable\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js"],"names":["React","DataGrid","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarExport","GridToolbarDensitySelector","useDemoData","CustomToolbar","UserTable","columns","field","headerName","width","renderCell","params","value","description","sortable","valueGetter","row","firstname","lastname","editable","data","dataSet","rowLength","maxColumns","height","Toolbar"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,QADF,EAEEC,oBAFF,EAGEC,wBAHF,EAIEC,uBAJF,EAKEC,iBALF,EAMEC,0BANF,QAOO,kBAPP;AAQA,SAASC,WAAT,QAA4B,4BAA5B;;;AAEA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,oBAAD;AAAA,4BACE,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQA,a;AAWT,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,UAAU,EAAE,OAFd;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,UAAU,EAAGC,MAAD,iBACV,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,iBAAZ;AAA8B,MAAA,GAAG,EAAEA,MAAM,CAACC;AAA1C;AAAA;AAAA;AAAA;AAAA;AALJ,GADc,EASd;AACEL,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,UAAU,EAAE,WAFd;AAGEK,IAAAA,WAAW,EAAE,qDAHf;AAIEC,IAAAA,QAAQ,EAAE,KAJZ;AAKEL,IAAAA,KAAK,EAAE,GALT;AAMEM,IAAAA,WAAW,EAAGJ,MAAD,IACV,GAAEA,MAAM,CAACK,GAAP,CAAWC,SAAX,IAAwB,EAAG,IAAGN,MAAM,CAACK,GAAP,CAAWE,QAAX,IAAuB,EAAG;AAP/D,GATc,EAkBd;AACEX,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,UAAU,EAAE,eAFd;AAGEC,IAAAA,KAAK,EAAE,GAHT;AAIEU,IAAAA,QAAQ,EAAE;AAJZ,GAlBc,EAwBd;AACEZ,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,UAAU,EAAE,OAFd;AAGEC,IAAAA,KAAK,EAAE,GAHT;AAIEU,IAAAA,QAAQ,EAAE;AAJZ,GAxBc,CAAhB;AAgCA,QAAM;AAAEC,IAAAA;AAAF,MAAWjB,WAAW,CAAC;AAC3BkB,IAAAA,OAAO,EAAE,WADkB;AAE3BC,IAAAA,SAAS,EAAE,EAFgB;AAG3BC,IAAAA,UAAU,EAAE;AAHe,GAAD,CAA5B;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAef,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA,2BACE,QAAC,QAAD,OACMW,IADN;AAEE,MAAA,QAAQ,EAAE,CAFZ;AAGE,MAAA,kBAAkB,EAAE,CAAC,CAAD,CAHtB;AAIE,MAAA,UAAU,EAAE;AACVK,QAAAA,OAAO,EAAErB;AADC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnDuBC,S;UAiCLF,W;;;MAjCKE,S","sourcesContent":["import * as React from \"react\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarColumnsButton,\n  GridToolbarFilterButton,\n  GridToolbarExport,\n  GridToolbarDensitySelector,\n} from \"@mui/x-data-grid\";\nimport { useDemoData } from \"@mui/x-data-grid-generator\";\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarColumnsButton />\n      <GridToolbarFilterButton />\n      <GridToolbarDensitySelector />\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nexport default function UserTable() {\n  const columns = [\n    {\n      field: \"photo\",\n      headerName: \"Image\",\n      width: 75,\n      renderCell: (params) => (\n        <Avatar alt=\"Profile Picture\" src={params.value} />\n      ),\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 180,\n      valueGetter: (params) =>\n        `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`,\n    },\n    {\n      field: \"email\",\n      headerName: \"Email Address\",\n      width: 110,\n      editable: true,\n    },\n    {\n      field: \"phone\",\n      headerName: \"Phone\",\n      width: 110,\n      editable: true,\n    },\n  ];\n\n  const { data } = useDemoData({\n    dataSet: \"Commodity\",\n    rowLength: 10,\n    maxColumns: 6,\n  });\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        {...data}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}