{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/admin/create_admin_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { makeStyles } from \"@mui/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { auth, ref, db, doc, setDoc, getDoc } from \"../../../data/firebase\";\nimport { createUser } from \"../../../domain/service\";\nimport { useSnackbar } from \"notistack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CreateAdminForm = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [formValues, setFormValues] = React.useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\"\n  });\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const createAdmin = e => {\n    setIsLoading(true);\n    const timeNow = new Date();\n    createUser(formValues.email, formValues.password).then(async resp => {\n      try {\n        setDoc(doc(db, \"users\", resp.user.uid), {\n          id: resp.user.uid,\n          firstname: formValues.firstname,\n          lastname: formValues.lastname,\n          phone: formValues.phone,\n          email: formValues.email,\n          password: formValues.password,\n          userType: \"admin\",\n          createdAt: timeNow,\n          updatedAt: timeNow\n        }).then(async result => {\n          const docRef = doc(db, \"users\", resp.user.uid);\n          const docSnap = await getDoc(docRef);\n\n          if (docSnap.exists()) {\n            enqueueSnackbar(`Admin created successfully`, {\n              variant: \"success\"\n            });\n          }\n        }).catch(err => {});\n      } catch (error) {\n        console.log(\"ERR: \", error === null || error === void 0 ? void 0 : error.message);\n      }\n    }).catch(err => {\n      console.log(\"ERR: \", err === null || err === void 0 ? void 0 : err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createAdmin,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"firstname\",\n        label: \"First name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.firstname,\n        onChange: handleChange,\n        name: \"firstname\",\n        fullWidth: true,\n        required: true,\n        validators: [\"required\"],\n        errorMessages: [\"First name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"lastname\",\n        label: \"Last name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.lastname,\n        onChange: handleChange,\n        name: \"lastname\",\n        fullWidth: true,\n        required: true,\n        validators: [\"required\"],\n        errorMessages: [\"Last name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"email\",\n        label: \"Email address\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.email,\n        onChange: handleChange,\n        name: \"email\",\n        fullWidth: true,\n        required: true,\n        type: \"email\",\n        validators: [\"required\"],\n        errorMessages: [\"Email address is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"phone\",\n        label: \"Phone number\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.phone,\n        onChange: handleChange,\n        name: \"phone\",\n        fullWidth: true,\n        required: true,\n        type: \"phone\",\n        validators: [\"required\"],\n        errorMessages: [\"Phone number is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: showCode ? \"text\" : \"password\",\n        id: \"password\",\n        onChange: handleChange,\n        value: formValues.password,\n        autoComplete: \"current-password\",\n        placeholder: \"Password\",\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Password is required\"],\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle code\",\n              onClick: () => setShowCode(!showCode),\n              onMouseDown: () => setShowCode(!showCode),\n              edge: \"end\",\n              children: showCode ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateAdminForm, \"VyPGDZ8PVu+SrH0HrezY4suOHaI=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = CreateAdminForm;\nexport default CreateAdminForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdminForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/admin/create_admin_form.js"],"names":["React","Button","CircularProgress","ValidatorForm","TextValidator","Backdrop","makeStyles","IconButton","InputAdornment","Visibility","VisibilityOff","auth","ref","db","doc","setDoc","getDoc","createUser","useSnackbar","useStyles","theme","mb","marginBottom","CreateAdminForm","classes","showCode","setShowCode","useState","isLoading","setIsLoading","formValues","setFormValues","firstname","lastname","email","phone","password","enqueueSnackbar","useEffect","handleChange","e","name","value","target","prevData","createAdmin","timeNow","Date","then","resp","user","uid","id","userType","createdAt","updatedAt","result","docRef","docSnap","exists","variant","catch","err","error","console","log","message","zIndex","color","endAdornment"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { makeStyles } from \"@mui/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { auth, ref, db, doc, setDoc, getDoc } from \"../../../data/firebase\";\nimport { createUser } from \"../../../domain/service\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles((theme) => ({\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CreateAdminForm = () => {\n  const classes = useStyles();\n\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [formValues, setFormValues] = React.useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n  });\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const createAdmin = (e) => {\n    setIsLoading(true);\n    const timeNow = new Date();\n    createUser(formValues.email, formValues.password)\n      .then(async (resp) => {\n        try {\n          setDoc(doc(db, \"users\", resp.user.uid), {\n            id: resp.user.uid,\n            firstname: formValues.firstname,\n            lastname: formValues.lastname,\n            phone: formValues.phone,\n            email: formValues.email,\n            password: formValues.password,\n            userType: \"admin\",\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then(async (result) => {\n              const docRef = doc(db, \"users\", resp.user.uid);\n              const docSnap = await getDoc(docRef);\n              if (docSnap.exists()) {\n                enqueueSnackbar(`Admin created successfully`, {\n                  variant: \"success\",\n                });\n              }\n            })\n            .catch((err) => {});\n        } catch (error) {\n          console.log(\"ERR: \", error?.message);\n        }\n      })\n      .catch((err) => {\n        console.log(\"ERR: \", err?.message);\n      });\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createAdmin}>\n        <TextValidator\n          className={classes.mb}\n          id=\"firstname\"\n          label=\"First name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.firstname}\n          onChange={handleChange}\n          name=\"firstname\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"First name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"lastname\"\n          label=\"Last name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.lastname}\n          onChange={handleChange}\n          name=\"lastname\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Last name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"email\"\n          label=\"Email address\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.email}\n          onChange={handleChange}\n          name=\"email\"\n          fullWidth\n          required\n          type=\"email\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"phone\"\n          label=\"Phone number\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.phone}\n          onChange={handleChange}\n          name=\"phone\"\n          fullWidth\n          required\n          type=\"phone\"\n          validators={[\"required\"]}\n          errorMessages={[\"Phone number is required\"]}\n        />\n\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default CreateAdminForm;\n"]},"metadata":{},"sourceType":"module"}