{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/states/edit_state.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, uploadBytesResumable, getDownloadURL, deleteObject, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst EditStateForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    name,\n    slogan,\n    img\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: \" \",\n    image: \"\",\n    slogan: \" \"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadStateImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"states/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection!\"}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"states\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            name: formValues.name,\n            slogan: formValues.slogan,\n            updatedAt: timeNow,\n            image: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`State updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection!\"}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const updateState = async e => {\n    setIsLoading(true);\n    setFormValues({\n      name: formValues.name ? formValues.name : name,\n      slogan: formValues.slogan ? formValues.slogan : slogan\n    });\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n\n      try {\n        const mRef = doc(db, \"states\", \"\" + id);\n        await updateDoc(mRef, {\n          name: formValues.name,\n          slogan: formValues.slogan,\n          updatedAt: timeNow\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`State updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n          variant: \"error\"\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"states/\" + id);\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadStateImage();\n      }).catch(error => {\n        setIsLoading(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateState,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : img,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"name\",\n        label: \"Name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.name === \" \" ? name : !formValues.name ? \"\" : formValues.name,\n        onChange: handleChange,\n        name: \"name\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Name of state is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"slogan\",\n        label: \"State slogan\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.slogan === \" \" ? slogan : !formValues.slogan ? \"\" : formValues.slogan,\n        onChange: handleChange,\n        name: \"slogan\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"State slogan is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditStateForm, \"J33m7HyqKYic1XTZfIo87WkQPPc=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = EditStateForm;\nexport default EditStateForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"EditStateForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/states/edit_state.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","doc","uploadBytesResumable","getDownloadURL","deleteObject","updateDoc","useSnackbar","Backdrop","Box","CircularProgress","Typography","Grid","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","EditStateForm","classes","setOpen","id","name","slogan","img","formValues","setFormValues","useState","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","enqueueSnackbar","handleChange","e","target","files","URL","createObjectURL","prevData","uploadStateImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","message","variant","then","downloadURL","mRef","updatedAt","updateState","fileRef","catch","zIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditStateForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, name, slogan, img } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: \" \",\n    image: \"\",\n    slogan: \" \",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadStateImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"states/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(\n          `${error?.message || \"Check your internet connection!\"}`,\n          { variant: \"error\" }\n        );\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"states\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              name: formValues.name,\n              slogan: formValues.slogan,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`State updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection!\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const updateState = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      name: formValues.name ? formValues.name : name,\n      slogan: formValues.slogan ? formValues.slogan : slogan,\n    });\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"states\", \"\" + id);\n        await updateDoc(mRef, {\n          name: formValues.name,\n          slogan: formValues.slogan,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`State updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"states/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadStateImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateState}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"name\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.name === \" \"\n              ? name\n              : !formValues.name\n              ? \"\"\n              : formValues.name\n          }\n          onChange={handleChange}\n          name=\"name\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Name of state is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"slogan\"\n          label=\"State slogan\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.slogan === \" \"\n              ? slogan\n              : !formValues.slogan\n              ? \"\"\n              : formValues.slogan\n          }\n          onChange={handleChange}\n          name=\"slogan\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"State slogan is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditStateForm;\n"]},"metadata":{},"sourceType":"module"}