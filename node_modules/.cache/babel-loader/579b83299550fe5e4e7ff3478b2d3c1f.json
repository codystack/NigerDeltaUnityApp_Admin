{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/contact-us/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128\n  },\n  mb: {\n    marginBottom: 10\n  }\n})); // const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdateContactUsForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    img,\n    phone,\n    email,\n    website,\n    facebook,\n    instagram\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    phone: \" \",\n    email: \" \",\n    website: \" \",\n    facebook: \" \",\n    instagram: \" \",\n    image: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false); //   const [progress, setProgress] = React.useState(0);\n\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []); //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n  const updateContactInfo = async e => {\n    setIsLoading(true); // setFormValues({\n    //   phone: formValues.phone === \" \" ? phone : formValues.phone,\n    //   email: formValues.email === \" \" ? email : formValues.email,\n    //   website: formValues.website === \" \" ? website : formValues.website,\n    //   facebook: formValues.facebook === \" \" ? facebook : formValues.facebook,\n    //   instagram:\n    //     formValues.instagram === \" \" ? instagram : formValues.instagram,\n    // });\n    // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"contact-us\");\n\n    try {\n      await updateDoc(mRef, {\n        phone: formValues.phone === \" \" ? phone : formValues.phone,\n        email: formValues.email === \" \" ? email : formValues.email,\n        website: formValues.website === \" \" ? website : formValues.website,\n        facebook: formValues.facebook === \" \" ? facebook : formValues.facebook,\n        instagram: formValues.instagram === \" \" ? instagram : formValues.instagram,\n        updatedAt: timeNow\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Contact info updated successfully`, {\n        variant: \"success\"\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Error updating Ccntact info\"}`, {\n        variant: \"error\"\n      });\n    } // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 512\n    },\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateContactInfo,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        name: \"phone\",\n        label: \"Phone\",\n        value: formValues.phone === \" \" ? phone : !formValues.phone ? \"\" : formValues.phone,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Phone number is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        name: \"email\",\n        label: \"Email address\",\n        value: formValues.email === \" \" ? email : !formValues.email ? \"\" : formValues.email,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Email address is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        name: \"website\",\n        label: \"Website\",\n        value: formValues.website === \" \" ? website : !formValues.website ? \"\" : formValues.website,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Website is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        name: \"facebook\",\n        label: \"Facebook\",\n        value: formValues.facebook === \" \" ? facebook : !formValues.facebook ? \"\" : formValues.facebook,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Facebook is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        name: \"instagram\",\n        label: \"Instagram\",\n        value: formValues.instagram === \" \" ? instagram : !formValues.instagram ? \"\" : formValues.instagram,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Instagram is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateContactUsForm, \"I3zpqc+4y+xRKuHk3ffrdmr0wzw=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = UpdateContactUsForm;\nexport default UpdateContactUsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateContactUsForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/contact-us/index.js"],"names":["React","ValidatorForm","TextValidator","makeStyles","Button","db","doc","updateDoc","useSnackbar","Backdrop","CircularProgress","useStyles","theme","image","margin","width","height","mb","marginBottom","UpdateContactUsForm","props","classes","setOpen","img","phone","email","website","facebook","instagram","formValues","setFormValues","useState","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","previewPassport","setPreviewPassport","enqueueSnackbar","handleChange","e","id","name","value","target","files","URL","createObjectURL","prevData","useEffect","updateContactInfo","timeNow","Date","mRef","updatedAt","variant","error","message","zIndex","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\n// const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdateContactUsForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, phone, email, website, facebook, instagram } = props;\n  const [formValues, setFormValues] = React.useState({\n    phone: \" \",\n    email: \" \",\n    website: \" \",\n    facebook: \" \",\n    instagram: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  //   const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n  const updateContactInfo = async (e) => {\n    setIsLoading(true);\n    // setFormValues({\n    //   phone: formValues.phone === \" \" ? phone : formValues.phone,\n    //   email: formValues.email === \" \" ? email : formValues.email,\n    //   website: formValues.website === \" \" ? website : formValues.website,\n    //   facebook: formValues.facebook === \" \" ? facebook : formValues.facebook,\n    //   instagram:\n    //     formValues.instagram === \" \" ? instagram : formValues.instagram,\n    // });\n    // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"contact-us\");\n    try {\n      await updateDoc(mRef, {\n        phone: formValues.phone === \" \" ? phone : formValues.phone,\n        email: formValues.email === \" \" ? email : formValues.email,\n        website: formValues.website === \" \" ? website : formValues.website,\n        facebook: formValues.facebook === \" \" ? facebook : formValues.facebook,\n        instagram:\n          formValues.instagram === \" \" ? instagram : formValues.instagram,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Contact info updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Error updating Ccntact info\"}`, {\n        variant: \"error\",\n      });\n    }\n    // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n  };\n\n  return (\n    <div style={{ width: 512 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {/* {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />} */}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateContactInfo}>\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"phone\"\n          label=\"Phone\"\n          value={\n            formValues.phone === \" \"\n              ? phone\n              : !formValues.phone\n              ? \"\"\n              : formValues.phone\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Phone number is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"email\"\n          label=\"Email address\"\n          value={\n            formValues.email === \" \"\n              ? email\n              : !formValues.email\n              ? \"\"\n              : formValues.email\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"website\"\n          label=\"Website\"\n          value={\n            formValues.website === \" \"\n              ? website\n              : !formValues.website\n              ? \"\"\n              : formValues.website\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Website is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"facebook\"\n          label=\"Facebook\"\n          value={\n            formValues.facebook === \" \"\n              ? facebook\n              : !formValues.facebook\n              ? \"\"\n              : formValues.facebook\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Facebook is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"instagram\"\n          label=\"Instagram\"\n          value={\n            formValues.instagram === \" \"\n              ? instagram\n              : !formValues.instagram\n              ? \"\"\n              : formValues.instagram\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Instagram is required\"]}\n        />\n\n        {/* <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        /> */}\n\n        {/* <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div> */}\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateContactUsForm;\n"]},"metadata":{},"sourceType":"module"}