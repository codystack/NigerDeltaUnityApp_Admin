{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { auth } from \"../../data/firebase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { setPersistence, browserSessionPersistence, setDoc, doc, db } from \"../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nexport default function Service() {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const createUser = async (email, pass) => {\n    try {\n      return await createUserWithEmailAndPassword(auth, email, pass);\n    } catch (error) {\n      enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connection\"}`, {\n        variant: \"error\"\n      });\n    }\n  };\n}\n\n_s(Service, \"EOBaWbrlhJsnjjf+SgNfGhR5FU4=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = Service;\nexport const signInUser = async (email, pass) => {\n  try {\n    return await signInWithEmailAndPassword(auth, email, pass);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addCategory = async (id, name, image) => {\n  // Add a new document in collection \"cities\"\n  return await setDoc(doc(db, \"categories\", id), {\n    id: id,\n    name: name,\n    url: image\n  }); //   db.collection(\"categories\").doc(id).set({\n  //     id: id,\n  //     name: name,\n  //     url: image,\n  //   });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/domain/service/index.js"],"names":["auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","setPersistence","browserSessionPersistence","setDoc","doc","db","useSnackbar","Service","enqueueSnackbar","createUser","email","pass","error","message","variant","signInUser","console","log","addCategory","id","name","image","url"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,qBAArB;AACA,SACEC,8BADF,EAEEC,0BAFF,QAGO,eAHP;AAIA,SACEC,cADF,EAEEC,yBAFF,EAGEC,MAHF,EAIEC,GAJF,EAKEC,EALF,QAMO,sBANP;AAOA,SAASC,WAAT,QAA4B,WAA5B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAsBF,WAAW,EAAvC;;AAEA,QAAMG,UAAU,GAAG,OAAOC,KAAP,EAAcC,IAAd,KAAuB;AACxC,QAAI;AACF,aAAO,MAAMZ,8BAA8B,CAACD,IAAD,EAAOY,KAAP,EAAcC,IAAd,CAA3C;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdJ,MAAAA,eAAe,CAAE,GAAE,CAAAI,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,OAAP,KAAkB,gCAAiC,EAAvD,EAA0D;AACvEC,QAAAA,OAAO,EAAE;AAD8D,OAA1D,CAAf;AAGD;AACF,GARD;AASD;;GAZuBP,O;UACMD,W;;;KADNC,O;AAcxB,OAAO,MAAMQ,UAAU,GAAG,OAAOL,KAAP,EAAcC,IAAd,KAAuB;AAC/C,MAAI;AACF,WAAO,MAAMX,0BAA0B,CAACF,IAAD,EAAOY,KAAP,EAAcC,IAAd,CAAvC;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;AACF,CANM;AAQP,OAAO,MAAMM,WAAW,GAAG,OAAOC,EAAP,EAAWC,IAAX,EAAiBC,KAAjB,KAA2B;AACpD;AACA,SAAO,MAAMlB,MAAM,CAACC,GAAG,CAACC,EAAD,EAAK,YAAL,EAAmBc,EAAnB,CAAJ,EAA4B;AAC7CA,IAAAA,EAAE,EAAEA,EADyC;AAE7CC,IAAAA,IAAI,EAAEA,IAFuC;AAG7CE,IAAAA,GAAG,EAAED;AAHwC,GAA5B,CAAnB,CAFoD,CAOpD;AACA;AACA;AACA;AACA;AACD,CAZM","sourcesContent":["import { auth } from \"../../data/firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  setPersistence,\n  browserSessionPersistence,\n  setDoc,\n  doc,\n  db,\n} from \"../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\n\nexport default function Service() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const createUser = async (email, pass) => {\n    try {\n      return await createUserWithEmailAndPassword(auth, email, pass);\n    } catch (error) {\n      enqueueSnackbar(`${error?.message || \"Check your internet connection\"}`, {\n        variant: \"error\",\n      });\n    }\n  };\n}\n\nexport const signInUser = async (email, pass) => {\n  try {\n    return await signInWithEmailAndPassword(auth, email, pass);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addCategory = async (id, name, image) => {\n  // Add a new document in collection \"cities\"\n  return await setDoc(doc(db, \"categories\", id), {\n    id: id,\n    name: name,\n    url: image,\n  });\n  //   db.collection(\"categories\").doc(id).set({\n  //     id: id,\n  //     name: name,\n  //     url: image,\n  //   });\n};\n"]},"metadata":{},"sourceType":"module"}