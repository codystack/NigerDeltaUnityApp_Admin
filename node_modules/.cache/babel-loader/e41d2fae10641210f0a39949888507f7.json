{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport { db, setDoc, doc, uploadBytesResumable, getDownloadURL } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport placeholder from \"../../../assets/images/placeholder.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst DirAddCategoryForm = props => {\n  _s();\n\n  let {\n    setOpen\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\"\n  });\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(placeholder);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    }\n\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  const createCategory = e => {\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"directories-categories/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    setIsUploading(true);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(async download => {\n        setIsUploading(false);\n        setIsLoading(true);\n        setDoc(doc(db, \"directories-categories\", `${timeNow.getTime()}`), {\n          id: timeNow.getTime(),\n          name: formValues.title,\n          image: download,\n          createdAt: timeNow,\n          updatedAt: timeNow\n        }).then(res => {\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`New category added successfully`, {\n            variant: \"success\"\n          });\n        }).catch(error => {\n          setIsLoading(false);\n          enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Check your internet connnection!\"}`, {\n            variant: \"error\"\n          });\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createCategory,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        id: \"title\",\n        label: \"Category name\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title,\n        onChange: handleChange // onBlur={handleBlur}\n        ,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Category name is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DirAddCategoryForm, \"/hrD9UXxkTlicHS1px+AY3X9SCk=\", false, function () {\n  return [useSnackbar];\n});\n\n_c2 = DirAddCategoryForm;\nexport default DirAddCategoryForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"DirAddCategoryForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js"],"names":["React","ValidatorForm","TextValidator","Button","db","setDoc","doc","uploadBytesResumable","getDownloadURL","useSnackbar","Backdrop","CircularProgress","placeholder","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","DirAddCategoryForm","setOpen","formValues","setFormValues","useState","title","image","isUploading","setIsUploading","progress","setProgress","previewImage","setPreviewImage","isLoading","setIsLoading","enqueueSnackbar","handleChange","e","id","name","target","setFile","files","URL","createObjectURL","prevData","useEffect","createCategory","timeNow","Date","storageRef","ref","storage","getTime","uploadTask","file","on","snapshot","bytesTransferred","totalBytes","error","console","log","message","variant","then","download","createdAt","updatedAt","res","catch","zIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport placeholder from \"../../../assets/images/placeholder.png\";\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst DirAddCategoryForm = (props) => {\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n  });\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(placeholder);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    }\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  const createCategory = (e) => {\n    const timeNow = new Date();\n    let storageRef = ref(\n      storage,\n      \"directories-categories/\" + timeNow.getTime()\n    );\n    let uploadTask = uploadBytesResumable(storageRef, file);\n\n    setIsUploading(true);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(progress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async (download) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"directories-categories\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            name: formValues.title,\n            image: download,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New category added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n              enqueueSnackbar(\n                `${error?.message || \"Check your internet connnection!\"}`,\n                {\n                  variant: \"error\",\n                }\n              );\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createCategory}>\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default DirAddCategoryForm;\n"]},"metadata":{},"sourceType":"module"}