{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/privacy-policy/update_policy_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, setDoc, doc, deleteObject, uploadBytesResumable, getDownloadURL, updateDoc } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128\n  }\n})); // const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdatePolicyForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    img,\n    body,\n    id\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    body: \" \",\n    image: \"\"\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  }; //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n\n  const updatePolicy = async e => {\n    setIsLoading(true); // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"privacy-policy\");\n\n    try {\n      await updateDoc(mRef, {\n        body: formValues.body,\n        updatedAt: timeNow\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Privacy policy updated successfully`, {\n        variant: \"success\"\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${(error === null || error === void 0 ? void 0 : error.message) || \"Error updating privacy policy\"}`, {\n        variant: \"error\"\n      });\n    } // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 512\n    },\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updatePolicy,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        multiline: true,\n        rows: 8,\n        rowsMax: 12,\n        placeholder: \"Type policy here\",\n        name: \"body\",\n        label: \"Privacy policy\",\n        value: formValues.body === \" \" ? body : !formValues.body ? \"\" : formValues.body,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Privacy policy is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePolicyForm, \"qyexGI/iUV1Q25DDlYVB0QZRX40=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = UpdatePolicyForm;\nexport default UpdatePolicyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePolicyForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/privacy-policy/update_policy_form.js"],"names":["React","ValidatorForm","TextValidator","Avatar","makeStyles","Button","db","ref","storage","setDoc","doc","deleteObject","uploadBytesResumable","getDownloadURL","updateDoc","useSnackbar","addCategory","Backdrop","Box","CircularProgress","Typography","useStyles","theme","image","margin","width","height","UpdatePolicyForm","props","classes","setOpen","img","body","id","formValues","setFormValues","useState","file","setFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewPassport","setPreviewPassport","enqueueSnackbar","handleChange","e","name","value","target","files","URL","createObjectURL","prevData","updatePolicy","timeNow","Date","mRef","updatedAt","variant","error","message","zIndex","color","mb"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACEC,EADF,EAEEC,GAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,YANF,EAOEC,oBAPF,EAQEC,cARF,EASEC,SATF,QAUO,yBAVP;AAWA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,MAAMC,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,oBADH;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,MAAM,EAAE;AAHH;AADgC,CAAZ,CAAD,CAA5B,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,MAAI;AAAES,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,MAA6BL,KAAjC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BnC,KAAK,CAACoC,QAAN,CAAe;AACjDJ,IAAAA,IAAI,EAAE,GAD2C;AAEjDT,IAAAA,KAAK,EAAE;AAF0C,GAAf,CAApC;AAIA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBtC,KAAK,CAACoC,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCxC,KAAK,CAACoC,QAAN,CAAe,KAAf,CAAtC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4B1C,KAAK,CAACoC,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0B5C,KAAK,CAACoC,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwC9C,KAAK,CAACoC,QAAN,CAAe,EAAf,CAA9C;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAsBhC,WAAW,EAAvC;;AAEA,QAAMiC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEhB,MAAAA,EAAF;AAAMiB,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,QAAsBF,CAAC,CAACG,MAA9B;;AAEA,QAAInB,EAAE,KAAK,OAAX,EAAoB;AAClBK,MAAAA,OAAO,CAACW,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACAP,MAAAA,kBAAkB,CAACQ,GAAG,CAACC,eAAJ,CAAoBN,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAlB;AACAlB,MAAAA,aAAa,CAAEqB,QAAD,KAAe,EAC3B,GAAGA,QADwB;AAE3BjC,QAAAA,KAAK,EAAE0B,CAAC,CAACG,MAAF,CAASD;AAFW,OAAf,CAAD,CAAb;AAID,KAPD,MAOO;AACLhB,MAAAA,aAAa,CAAEqB,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAe,SAACN,IAAD,GAAQC;AAAvB,OAAf,CAAD,CAAb;AACD;AACF,GAbD,CAfkC,CA8BlC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMM,YAAY,GAAG,MAAOR,CAAP,IAAa;AAChCP,IAAAA,YAAY,CAAC,IAAD,CAAZ,CADgC,CAEhC;AACA;;AACA,UAAMgB,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,UAAMC,IAAI,GAAGlD,GAAG,CAACJ,EAAD,EAAK,QAAL,EAAe,gBAAf,CAAhB;;AACA,QAAI;AACF,YAAMQ,SAAS,CAAC8C,IAAD,EAAO;AACpB5B,QAAAA,IAAI,EAAEE,UAAU,CAACF,IADG;AAEpB6B,QAAAA,SAAS,EAAEH;AAFS,OAAP,CAAf;AAIA5B,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAY,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,MAAAA,eAAe,CAAE,qCAAF,EAAwC;AACrDe,QAAAA,OAAO,EAAE;AAD4C,OAAxC,CAAf;AAGD,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdrB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,MAAAA,eAAe,CAAE,GAAE,CAAAgB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,OAAP,KAAkB,+BAAgC,EAAtD,EAAyD;AACtEF,QAAAA,OAAO,EAAE;AAD6D,OAAzD,CAAf;AAGD,KArB+B,CAsBhC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GAvCD;;AAyCA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAErC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEwC,QAAAA,MAAM,EAAE;AAAV,OAAjB;AAAmC,MAAA,IAAI,EAAE1B,WAAW,IAAIE,SAAxD;AAAA,gBAEGA,SAAS,gBACR,QAAC,gBAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,KAAK,EAAE;AAAEyB,UAAAA,KAAK,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA,cADQ,gBAOR;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAET,YAAzB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,SAAS,EAAE5B,OAAO,CAACsC,EADrB;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,IAAI,EAAE,CAJR;AAKE,QAAA,OAAO,EAAE,EALX;AAME,QAAA,WAAW,EAAC,kBANd;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,KAAK,EAAC,gBARR;AASE,QAAA,KAAK,EACHjC,UAAU,CAACF,IAAX,KAAoB,GAApB,GACIA,IADJ,GAEI,CAACE,UAAU,CAACF,IAAZ,GACA,EADA,GAEAE,UAAU,CAACF,IAdnB;AAgBE,QAAA,QAAQ,EAAEgB,YAhBZ;AAiBE,QAAA,OAAO,EAAC,UAjBV;AAkBE,QAAA,UAAU,EAAE,CAAC,UAAD,CAlBd;AAmBE,QAAA,aAAa,EAAE,CAAC,4BAAD;AAnBjB;AAAA;AAAA;AAAA;AAAA,cADF,eA+CE;AAAA;AAAA;AAAA;AAAA,cA/CF,eAgDE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,QAAQ,EAAEP,SAAS,IAAIF,WAHzB;AAIE,QAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyED,CA7LD;;GAAMZ,gB;UACYN,S,EAYYN,W;;;KAbxBY,gB;AA+LN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\n// const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdatePolicyForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, body, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    body: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n  const updatePolicy = async (e) => {\n    setIsLoading(true);\n    // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"privacy-policy\");\n    try {\n      await updateDoc(mRef, {\n        body: formValues.body,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Privacy policy updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Error updating privacy policy\"}`, {\n        variant: \"error\",\n      });\n    }\n    // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n  };\n\n  return (\n    <div style={{ width: 512 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {/* {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />} */}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updatePolicy}>\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={8}\n          rowsMax={12}\n          placeholder=\"Type policy here\"\n          name=\"body\"\n          label=\"Privacy policy\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Privacy policy is required\"]}\n        />\n        {/* <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        /> */}\n\n        {/* <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div> */}\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdatePolicyForm;\n"]},"metadata":{},"sourceType":"module"}