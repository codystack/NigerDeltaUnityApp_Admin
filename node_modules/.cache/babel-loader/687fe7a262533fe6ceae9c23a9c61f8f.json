{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, doc, uploadBytesResumable, getDownloadURL, query, collection, onSnapshot, deleteObject, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst EditNewsForm = props => {\n  _s();\n\n  var _ref;\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title,\n    img,\n    category,\n    body,\n    summary,\n    authorName,\n    authorPhoto\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    category: category,\n    authorName: authorName,\n    authorPhoto: \"\",\n    summary: summary\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const [newsBody, setNewsBody] = React.useState(body);\n  const [isError, setIsError] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const categories = [];\n      querySnapshot.forEach(doc => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        authorPhoto: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"news\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            title: formValues.title,\n            authorName: formValues.authorName,\n            category: formValues.category,\n            body: newsBody,\n            summary: formValues.summary,\n            updatedAt: timeNow,\n            image: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Newsfeed updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const uploadNewAuthorPhoto = () => {\n    setIsUploading(true);\n    const timeNow = new Date(); //First upload image to firebase storage then save to firestore\n\n    const storageRef = ref(storage, \"news/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      setIsUploading(false);\n      setIsLoading(true);\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        const mRef = doc(db, \"news\", \"\" + id);\n\n        try {\n          await updateDoc(mRef, {\n            title: formValues.title,\n            authorName: formValues.authorName,\n            category: formValues.category,\n            body: newsBody,\n            summary: formValues.summary,\n            updatedAt: timeNow,\n            authorPhoto: downloadURL\n          });\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`Newsfeed updated successfully`, {\n            variant: \"success\"\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n            variant: \"error\"\n          });\n        }\n      });\n    });\n  };\n\n  const updateNews = async e => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      authorName: formValues.authorName ? formValues.authorName : authorName,\n      category: formValues.category ? formValues.category : category,\n      body: newsBody,\n      summary: formValues.summary ? formValues.summary : summary\n    });\n\n    if (!previewImage && !previewAuthor) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n\n      try {\n        const mRef = doc(db, \"news\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          authorName: formValues.authorName,\n          category: formValues.category,\n          body: newsBody,\n          summary: formValues.summary,\n          updatedAt: timeNow\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`News title updated successfully`, {\n          variant: \"success\"\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n          variant: \"error\"\n        });\n      }\n    } else if (previewImage && !previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/\" + id);\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewImage();\n      }).catch(error => {\n        setIsLoading(false);\n        console.log(\"ErR: \", error);\n      });\n    } else if (!previewImage && previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/img_\" + id);\n      deleteObject(fileRef).then(() => {\n        setIsLoading(false);\n        uploadNewAuthorPhoto();\n      }).catch(error => {\n        setIsLoading(false);\n        console.log(\"ErR: \", error);\n      });\n    } else {\n      const fileRef = ref(storage, \"news/\" + id);\n      const fileRef2 = ref(storage, \"news/img_\" + id);\n      setIsLoading(true);\n      deleteObject(fileRef).then(() => {\n        //Now Delete authors photo\n        deleteObject(fileRef2).then(() => {\n          //Both items were deleted\n          const timeNow = new Date();\n          let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n          let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n          let uploadTask = uploadBytesResumable(storageRef, file);\n          let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n          setIsLoading(false);\n          setIsUploading(true);\n          uploadTask.on(\"state_changed\", snapshot => {\n            const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n            setProgress(uprogress);\n          }, error => {\n            setIsUploading(false);\n            console.log(error);\n            enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n              variant: \"error\"\n            });\n          }, () => {\n            var _uploadTask$snapshot;\n\n            getDownloadURL(uploadTask === null || uploadTask === void 0 ? void 0 : (_uploadTask$snapshot = uploadTask.snapshot) === null || _uploadTask$snapshot === void 0 ? void 0 : _uploadTask$snapshot.ref).then(async downloadURL => {\n              try {\n                const mRef = doc(db, \"news\", \"\" + id);\n                await updateDoc(mRef, {\n                  title: formValues.title,\n                  authorName: formValues.authorName,\n                  category: formValues.category,\n                  body: newsBody,\n                  summary: formValues.summary,\n                  updatedAt: timeNow,\n                  image: downloadURL\n                });\n                const tmn = timeNow.getTime();\n                setIsUploading(true);\n                setIsLoading(false);\n                uploadTask2.on(\"state_changed\", snapshot2 => {\n                  const prog = snapshot2.bytesTransferred / snapshot2.totalBytes * 100;\n                  setProgress(prog);\n                }, error => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n                    variant: \"error\"\n                  });\n                }, () => {\n                  var _uploadTask2$snapshot;\n\n                  getDownloadURL(uploadTask2 === null || uploadTask2 === void 0 ? void 0 : (_uploadTask2$snapshot = uploadTask2.snapshot) === null || _uploadTask2$snapshot === void 0 ? void 0 : _uploadTask2$snapshot.ref).then(async download => {\n                    setIsUploading(false);\n                    setIsLoading(true);\n\n                    try {\n                      const mRef = doc(db, \"news\", \"\" + tmn);\n                      await updateDoc(mRef, {\n                        authorPhoto: download\n                      });\n                      setOpen(false);\n                      setIsLoading(false);\n                      enqueueSnackbar(`Newsfeed updated successfully`, {\n                        variant: \"success\"\n                      });\n                    } catch (error) {\n                      setIsLoading(false);\n                      enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n                        variant: \"error\"\n                      });\n                    }\n                  });\n                });\n              } catch (error) {}\n            });\n          });\n        }).catch(err => {}); // setIsLoading(false);\n        // uploadNewAuthorPhoto();\n      }).catch(error => {\n        setIsLoading(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateNews,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            id: \"image\",\n            size: \"small\",\n            variant: \"outlined\",\n            value: formValues.image,\n            name: \"image\",\n            type: \"file\",\n            fullWidth: true,\n            disabled: isLoading,\n            accept: \".png, .jpg, .jpeg\",\n            onChange: handleChange,\n            helperText: \"Featured image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"rounded\",\n              alt: \"Passport\",\n              src: previewImage ? previewImage : img,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectValidator, {\n        className: classes.mb,\n        value: formValues.category ? formValues.category : category,\n        onChange: handleChange,\n        label: \"News category\",\n        name: \"category\",\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"small\",\n        validators: [\"required\"],\n        errorMessages: [\"News category is required\"],\n        children: (_ref = categoriesList !== null && categoriesList !== void 0 ? categoriesList : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => {\n          var _item$title, _item$title2;\n\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: (_item$title = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title !== void 0 ? _item$title : \"\",\n            children: (_item$title2 = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title2 !== void 0 ? _item$title2 : \"\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"News title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title === \" \" ? title : !formValues.title ? \"\" : formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"News title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RichText, {\n        value: newsBody,\n        setValue: setNewsBody,\n        error: isError,\n        setError: setIsError,\n        setIsStartedFilling: setIsStartedFilling\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"summary\",\n        multiLine: true,\n        rows: 2,\n        rowsMax: 2,\n        label: \"News summary\",\n        placeholder: \"Type summary here...\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.summary,\n        onChange: handleChange,\n        name: \"summary\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"News summary is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 1,\n        marginBottom: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"authorPhoto\",\n              size: \"small\",\n              variant: \"outlined\",\n              name: \"authorPhoto\",\n              type: \"file\",\n              fullWidth: true,\n              disabled: isLoading,\n              accept: \".png, .jpg, .jpeg,\",\n              onChange: handleChange,\n              helperText: \"Author's photograph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"authorName\",\n              label: \"Author's name\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.authorName === \" \" ? authorName : !formValues.authorName ? \"\" : formValues.authorName,\n              onChange: handleChange,\n              name: \"authorName\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: \"Author\",\n              src: previewAuthor ? previewAuthor : authorPhoto,\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditNewsForm, \"8qSbC7xCjXf4cyPCJznxPQW6aZA=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = EditNewsForm;\nexport default EditNewsForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"EditNewsForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","doc","uploadBytesResumable","getDownloadURL","query","collection","onSnapshot","deleteObject","updateDoc","useSnackbar","Backdrop","Box","CircularProgress","Typography","Grid","MenuItem","RichText","useStyles","theme","image","margin","width","height","mb","marginBottom","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","EditNewsForm","classes","setOpen","id","title","img","category","body","summary","authorName","authorPhoto","formValues","setFormValues","useState","file","setFile","authorFile","setAuthorFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","previewAuthor","setPreviewAuthor","newsBody","setNewsBody","isError","setIsError","enqueueSnackbar","categoriesList","setCategoriesList","isStartedFilling","setIsStartedFilling","useEffect","q","unsubscribe","querySnapshot","categories","forEach","push","data","handleChange","e","name","target","files","URL","createObjectURL","prevData","uploadNewImage","timeNow","Date","storageRef","getTime","uploadTask","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","mRef","updatedAt","uploadNewAuthorPhoto","updateNews","fileRef","catch","fileRef2","storageRef2","uploadTask2","tmn","snapshot2","prog","download","err","zIndex","map","item","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext/\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditNewsForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title,\n    img,\n    category,\n    body,\n    summary,\n    authorName,\n    authorPhoto,\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    category: category,\n    authorName: authorName,\n    authorPhoto: \"\",\n    summary: summary,\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n\n  const [newsBody, setNewsBody] = React.useState(body);\n  const [isError, setIsError] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: newsBody,\n              summary: formValues.summary,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewAuthorPhoto = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: newsBody,\n              summary: formValues.summary,\n              updatedAt: timeNow,\n              authorPhoto: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateNews = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      authorName: formValues.authorName ? formValues.authorName : authorName,\n      category: formValues.category ? formValues.category : category,\n      body: newsBody,\n      summary: formValues.summary ? formValues.summary : summary,\n    });\n    if (!previewImage && !previewAuthor) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"news\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          authorName: formValues.authorName,\n          category: formValues.category,\n          body: newsBody,\n          summary: formValues.summary,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`News title updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else if (!previewImage && previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else {\n      const fileRef = ref(storage, \"news/\" + id);\n      const fileRef2 = ref(storage, \"news/img_\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n              let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"news\", \"\" + id);\n                        await updateDoc(mRef, {\n                          title: formValues.title,\n                          authorName: formValues.authorName,\n                          category: formValues.category,\n                          body: newsBody,\n                          summary: formValues.summary,\n                          updatedAt: timeNow,\n                          image: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"news\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    authorPhoto: download,\n                                  });\n                                  setOpen(false);\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `Newsfeed updated successfully`,\n                                    {\n                                      variant: \"success\",\n                                    }\n                                  );\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(`${error?.message}`, {\n                                    variant: \"error\",\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {}\n                    }\n                  );\n                }\n              );\n            })\n            .catch((err) => {});\n          // setIsLoading(false);\n          // uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category ? formValues.category : category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n        <RichText\n          value={newsBody}\n          setValue={setNewsBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"summary\"\n          multiLine\n          rows={2}\n          rowsMax={2}\n          label=\"News summary\"\n          placeholder=\"Type summary here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News summary is required\"]}\n        />\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  formValues.authorName === \" \"\n                    ? authorName\n                    : !formValues.authorName\n                    ? \"\"\n                    : formValues.authorName\n                }\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                alt=\"Author\"\n                src={previewAuthor ? previewAuthor : authorPhoto}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditNewsForm;\n"]},"metadata":{},"sourceType":"module"}