{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport * as yup from \"yup\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { createUser } from \"../../../domain/service\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { db, addDoc, collection } from \"../../../data/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright(props) {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    align: \"center\",\n    ...props,\n    children: [\"Copyright Â© \", /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://mui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \" \", new Date().getFullYear(), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Copyright;\nconst validationSchema = yup.object().shape({\n  firstName: yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"First name is required\"),\n  lastName: yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Last name is required\"),\n  email: yup.string(\"Enter your email\").email(\"Enter a valid email\").required(\"Email is required\"),\n  password: yup.string(\"Enter your password\").min(8, \"Password should be of minimum 8 characters length\").required(\"Password is required\")\n});\n\nconst SignupForm = () => {\n  _s();\n\n  const [formValues, setFormValues] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const submitForm = e => {\n    createUser(formValues.email, formValues.password).then(async resp => {\n      console.log(\"RESP\", resp);\n\n      try {\n        const docRef = await addDoc(collection(db, \"users\", resp.user.uid), {\n          id: resp.user.uid,\n          firstname: formValues.firstName,\n          lastname: formValues.lastName,\n          phone: formValues.phone,\n          email: formValues.email,\n          userType: \"super\"\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n    });\n  }; // const formik = useFormik({\n  //   initialValues: {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     phone: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   },\n  //   validationSchema: validationSchema,\n  //   onSubmit: (values) => {\n  //     alert(\"Heergf\");\n  //     // try {\n  //     //   const resp = await createUser(values.email, values.password);\n  //     //   if (resp.user) {\n  //     //     // Add a second document with a generated ID.\n  //     //     try {\n  //     //       const docRef = await addDoc(collection(db, \"users\"), {\n  //     //         id: resp.user.uid,\n  //     //         firstname: values.firstName,\n  //     //         lastname: values.lastName,\n  //     //         phone: values.phone,\n  //     //         email: values.email,\n  //     //         userType: \"super\",\n  //     //       });\n  //     //       console.log(\"Document written with ID: \", docRef.id);\n  //     //     } catch (e) {\n  //     //       console.error(\"Error adding document: \", e);\n  //     //     }\n  //     //   }\n  //     // } catch (error) {}\n  //   },\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: submitForm,\n      sx: {\n        mt: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"firstName\",\n            label: \"First name\",\n            name: \"firstName\",\n            value: formValues.firstName,\n            onChange: handleChange,\n            type: \"text\",\n            autoFocus: true,\n            placeholder: \"First name\",\n            variant: \"outlined\",\n            validators: [\"required\"],\n            errorMessages: [\"First name is required\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 6,\n          xs: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(TextValidator, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"lastName\",\n            label: \"Last name\",\n            name: \"lastName\",\n            value: formValues.lastName,\n            onChange: handleChange,\n            type: \"text\",\n            placeholder: \"Last name\",\n            variant: \"outlined\",\n            validators: [\"required\"],\n            errorMessages: [\"Last name is required\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        value: formValues.email,\n        onChange: handleChange,\n        autoComplete: \"email\",\n        placeholder: \"Email Address\",\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Email address is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: showCode ? \"text\" : \"password\",\n        id: \"password\",\n        onChange: handleChange,\n        value: formValues.password,\n        autoComplete: \"current-password\",\n        placeholder: \"Password\",\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Password is required\"],\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle code\",\n              onClick: () => setShowCode(!showCode),\n              onMouseDown: () => setShowCode(!showCode),\n              edge: \"end\",\n              children: showCode ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mt: 2,\n          mb: 2\n        },\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"h1\",\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        variant: \"body2\",\n        children: \"Already have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"wo38J7W1k5fAMU5IqITlp4uT7p4=\");\n\n_c2 = SignupForm;\nexport default SignupForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"SignupForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js"],"names":["React","Button","Link","Grid","Typography","yup","InputAdornment","IconButton","Visibility","VisibilityOff","createUser","ValidatorForm","TextValidator","db","addDoc","collection","Copyright","props","Date","getFullYear","validationSchema","object","shape","firstName","string","min","max","required","lastName","email","password","SignupForm","formValues","setFormValues","useState","phone","showCode","setShowCode","isLoading","setIsLoading","handleChange","e","name","value","target","prevData","submitForm","then","resp","console","log","docRef","user","uid","id","firstname","lastname","userType","error","mt","endAdornment","mb"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport * as yup from \"yup\";\n\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { createUser } from \"../../../domain/service\";\n\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { db, addDoc, collection } from \"../../../data/firebase\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst validationSchema = yup.object().shape({\n  firstName: yup\n    .string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"First name is required\"),\n  lastName: yup\n    .string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Last name is required\"),\n  email: yup\n    .string(\"Enter your email\")\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  password: yup\n    .string(\"Enter your password\")\n    .min(8, \"Password should be of minimum 8 characters length\")\n    .required(\"Password is required\"),\n});\n\nconst SignupForm = () => {\n  const [formValues, setFormValues] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submitForm = (e) => {\n    createUser(formValues.email, formValues.password).then(async (resp) => {\n      console.log(\"RESP\", resp);\n      try {\n        const docRef = await addDoc(collection(db, \"users\", resp.user.uid), {\n          id: resp.user.uid,\n          firstname: formValues.firstName,\n          lastname: formValues.lastName,\n          phone: formValues.phone,\n          email: formValues.email,\n          userType: \"super\",\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n    });\n  };\n\n  // const formik = useFormik({\n  //   initialValues: {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     phone: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   },\n  //   validationSchema: validationSchema,\n\n  //   onSubmit: (values) => {\n  //     alert(\"Heergf\");\n  //     // try {\n  //     //   const resp = await createUser(values.email, values.password);\n\n  //     //   if (resp.user) {\n  //     //     // Add a second document with a generated ID.\n  //     //     try {\n  //     //       const docRef = await addDoc(collection(db, \"users\"), {\n  //     //         id: resp.user.uid,\n  //     //         firstname: values.firstName,\n  //     //         lastname: values.lastName,\n  //     //         phone: values.phone,\n  //     //         email: values.email,\n  //     //         userType: \"super\",\n  //     //       });\n  //     //       console.log(\"Document written with ID: \", docRef.id);\n  //     //     } catch (e) {\n  //     //       console.error(\"Error adding document: \", e);\n  //     //     }\n  //     //   }\n  //     // } catch (error) {}\n  //   },\n  // });\n\n  return (\n    <div>\n      <ValidatorForm onSubmit={submitForm} sx={{ mt: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item md={6} xs={12} sm={12}>\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First name\"\n              name=\"firstName\"\n              value={formValues.firstName}\n              onChange={handleChange}\n              type=\"text\"\n              autoFocus\n              placeholder=\"First name\"\n              variant=\"outlined\"\n              validators={[\"required\"]}\n              errorMessages={[\"First name is required\"]}\n            />\n          </Grid>\n\n          <Grid item md={6} xs={12} sm={12}>\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"lastName\"\n              label=\"Last name\"\n              name=\"lastName\"\n              value={formValues.lastName}\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"Last name\"\n              variant=\"outlined\"\n              validators={[\"required\"]}\n              errorMessages={[\"Last name is required\"]}\n            />\n          </Grid>\n        </Grid>\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          value={formValues.email}\n          onChange={handleChange}\n          autoComplete=\"email\"\n          placeholder=\"Email Address\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 2, mb: 2 }}\n        >\n          Sign In\n        </Button>\n        <Typography variant=\"body1\" component=\"h1\">\n          Or\n        </Typography>\n        {/* <Button fullWidth variant=\"contained\" sx={{ mt: 1, mb: 2 }}>\n          Sign In With Google\n        </Button> */}\n        <Link href=\"#\" variant=\"body2\">\n          {\"Already have an account? Login\"}\n        </Link>\n        {/* <Copyright sx={{ mt: 5 }} /> */}\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}