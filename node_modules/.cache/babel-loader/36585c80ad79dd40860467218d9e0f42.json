{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_category.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100\n  },\n  mb: {\n    marginBottom: 10\n  }\n}));\n\nconst DirEditCategoryForm = props => {\n  _s();\n\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \"\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevData => ({ ...prevData,\n      [name]: value\n    }));\n  };\n\n  const updateCategory = async e => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title\n    }); //No image is changed. So update all text\n\n    const timeNow = new Date();\n\n    try {\n      const mRef = doc(db, \"directories-categories\", \"\" + id);\n      await updateDoc(mRef, {\n        id: timeNow.getTime(),\n        name: formValues.title,\n        updatedAt: timeNow\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Category updated successfully`, {\n        variant: \"success\"\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n        variant: \"error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isLoading,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: updateCategory,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"title\",\n        label: \"Title\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: formValues.title === \" \" ? title : !formValues.title ? \"\" : formValues.title,\n        onChange: handleChange,\n        name: \"title\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Title is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading,\n        fullWidth: true,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DirEditCategoryForm, \"xRIyGoB+dcCsDZWNI6imoVp6caU=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = DirEditCategoryForm;\nexport default DirEditCategoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DirEditCategoryForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_category.js"],"names":["React","ValidatorForm","TextValidator","makeStyles","Button","db","doc","updateDoc","useSnackbar","Backdrop","CircularProgress","useStyles","theme","image","margin","width","height","mb","marginBottom","DirEditCategoryForm","props","classes","setOpen","id","title","formValues","setFormValues","useState","isLoading","setIsLoading","enqueueSnackbar","handleChange","e","name","value","target","prevData","updateCategory","timeNow","Date","mRef","getTime","updatedAt","variant","error","message","zIndex","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst DirEditCategoryForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \",\n  });\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const updateCategory = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n    });\n    //No image is changed. So update all text\n    const timeNow = new Date();\n    try {\n      const mRef = doc(db, \"directories-categories\", \"\" + id);\n      await updateDoc(mRef, {\n        id: timeNow.getTime(),\n        name: formValues.title,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Category updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message}`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateCategory}>\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Title is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default DirEditCategoryForm;\n"]},"metadata":{},"sourceType":"module"}