{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_vendor.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator, SelectValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, ref, storage, setDoc, doc, uploadBytesResumable, getDownloadURL, query, collection, updateDoc, onSnapshot } from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, CircularProgress, Grid, IconButton, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { CameraAlt } from \"@mui/icons-material\";\nimport placeholder from \"../../../assets/images/placeholder.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: \"100%\",\n    height: 156\n  },\n  logo: {\n    margin: \"0px auto 15px auto\",\n    width: 48,\n    height: 48\n  },\n  mb: {\n    marginBottom: 10\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\"\n  }\n}));\nconst timesOpen = [\"05:00 AM\", \"06:00 AM\", \"07:00 AM\", \"08:00 AM\", \"09:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\"];\nconst timesClosed = [\"02:00 PM\", \"03:00 PM\", \"04:00 PM\", \"05:00 PM\", \"06:00 PM\", \"07:00 PM\", \"08:00 PM\", \"09:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 AM\"];\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props,\n      size: 90,\n      thickness: 3.0,\n      style: {\n        color: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"div\",\n        style: {\n          color: \"white\",\n          fontFamily: \"roboto\"\n        },\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\n\nconst AddVendorForm = props => {\n  _s();\n\n  var _ref, _ref2, _ref3;\n\n  const classes = useStyles();\n  let {\n    setOpen\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: \"\",\n    image: \"\",\n    logo: \"\",\n    category: \"\",\n    address: \"\",\n    description: \"\",\n    phone: \"\",\n    website: \"\",\n    opensAt: \"\",\n    closesAt: \"\",\n    is24Hrs: false\n  });\n  const [file, setFile] = React.useState(null);\n  const [logoFile, setLogoFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(placeholder);\n  const [previewLogo, setPreviewLogo] = React.useState(\"\");\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  const coverRef = React.useRef();\n  const [is24Hrs, setIs24Hrs] = React.useState(false);\n  React.useEffect(() => {\n    const q = query(collection(db, \"directories-categories\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const categories = [];\n      querySnapshot.forEach(doc => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = e => {\n    const {\n      id,\n      name,\n      value\n    } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        image: e.target.value\n      }));\n    } else if (id === \"logo\") {\n      setLogoFile(e.target.files[0]);\n      setPreviewLogo(URL.createObjectURL(e.target.files[0]));\n      setFormValues(prevData => ({ ...prevData,\n        logo: e.target.value\n      }));\n    } else {\n      setFormValues(prevData => ({ ...prevData,\n        [name]: value\n      }));\n    }\n  };\n\n  const createVendor = e => {\n    setIsUploading(true); //First upload images to firebase storage then save to firestore\n\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n    let storageRef2 = ref(storage, \"vendors/img_\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    let uploadTask2 = uploadBytesResumable(storageRef2, logoFile);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const uprogress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(uprogress);\n    }, error => {\n      setIsUploading(false);\n      console.log(error);\n      enqueueSnackbar(`${error.message}`, {\n        variant: \"error\"\n      });\n    }, () => {\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setIsUploading(false);\n        setIsLoading(true);\n        setDoc(doc(db, \"directories-vendors\", `${timeNow.getTime()}`), {\n          id: timeNow.getTime(),\n          name: formValues.name,\n          image: downloadURL,\n          category: formValues.category,\n          address: formValues.address,\n          phone: formValues.phone,\n          website: formValues.website,\n          description: formValues.description,\n          opensAt: formValues.opensAt,\n          closesAt: formValues.closesAt,\n          is24Hours: formValues.is24Hrs,\n          logo: \" \",\n          blocked: false,\n          createdAt: timeNow,\n          updatedAt: timeNow\n        }).then(res => {\n          //Now upload author image\n          const tmn = timeNow.getTime();\n          setIsUploading(true);\n          setIsLoading(false);\n          uploadTask2.on(\"state_changed\", snapshot2 => {\n            const prog = snapshot2.bytesTransferred / snapshot2.totalBytes * 100;\n            setProgress(prog);\n          }, error => {\n            setIsUploading(false);\n            console.log(error);\n            enqueueSnackbar(`${error.message}`, {\n              variant: \"error\"\n            });\n          }, () => {\n            getDownloadURL(uploadTask2.snapshot.ref).then(async download => {\n              setIsUploading(false);\n              setIsLoading(true);\n\n              try {\n                const mRef = doc(db, \"directories-vendors\", \"\" + tmn);\n                await updateDoc(mRef, {\n                  logo: download\n                });\n                setOpen(false);\n                setIsLoading(false);\n                enqueueSnackbar(`New vendor added successfully`, {\n                  variant: \"success\"\n                });\n              } catch (error) {\n                setIsLoading(false);\n                enqueueSnackbar(`${error === null || error === void 0 ? void 0 : error.message}`, {\n                  variant: \"error\"\n                });\n              }\n            });\n          });\n        }).catch(error => {\n          setIsLoading(false);\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      style: {\n        zIndex: 1200\n      },\n      open: isUploading || isLoading,\n      children: [isUploading ? /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 73\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 90,\n        thickness: 3.0,\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      onSubmit: createVendor,\n      children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n        ref: coverRef,\n        id: \"image\",\n        size: \"small\",\n        style: {\n          display: \"none\"\n        },\n        variant: \"outlined\",\n        value: formValues.image,\n        name: \"image\",\n        type: \"file\",\n        fullWidth: true,\n        disabled: isLoading,\n        accept: \".png, .jpg, .jpeg\",\n        onChange: handleChange,\n        validators: [\"required\"],\n        errorMessages: [\"Featured image is required\"],\n        helperText: \"Featured image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"logo\",\n        size: \"small\",\n        variant: \"outlined\",\n        style: {\n          display: \"none\"\n        },\n        value: formValues.logo,\n        name: \"logo\",\n        type: \"file\",\n        fullWidth: true,\n        disabled: isLoading,\n        accept: \".png, .jpg, .jpeg,\",\n        onChange: handleChange,\n        validators: [\"required\"],\n        errorMessages: [\"Vendor's logo is required\"],\n        helperText: \"Vendor's logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: 144,\n          width: 400,\n          backgroundImage: \"url(\" + previewImage + \")\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          marginBottom: 24\n        },\n        typeof: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            marginTop: \"auto\",\n            marginBottom: -32\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"logo\",\n            style: {\n              zIndex: 1000,\n              display: \"flex\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              variant: \"circular\",\n              alt: \"Author\",\n              src: previewLogo,\n              className: classes.logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"logo\",\n              sx: {\n                ml: -6,\n                mt: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.subRow,\n                children: /*#__PURE__*/_jsxDEV(CameraAlt, {\n                  color: \"primary\",\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            style: {\n              marginBottom: 24,\n              padding: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.subRow,\n              children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n                color: \"primary\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"blue\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 0,\n        marginBottom: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n              className: classes.mb,\n              value: formValues.category,\n              onChange: handleChange,\n              label: \"Category\",\n              name: \"category\",\n              fullWidth: true,\n              variant: \"outlined\",\n              size: \"small\",\n              validators: [\"required\"],\n              errorMessages: [\"Vendor's category is required\"],\n              children: (_ref = categoriesList !== null && categoriesList !== void 0 ? categoriesList : []) === null || _ref === void 0 ? void 0 : _ref.map((item, index) => {\n                var _item$title, _item$title2;\n\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: (_item$title = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title !== void 0 ? _item$title : \"\",\n                  children: (_item$title2 = item === null || item === void 0 ? void 0 : item.title) !== null && _item$title2 !== void 0 ? _item$title2 : \"\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"name\",\n              label: \"Vendor name\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.name,\n              onChange: handleChange,\n              name: \"name\",\n              required: true,\n              fullWidth: true,\n              validators: [\"required\"],\n              errorMessages: [\"Vendor's name is required\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        id: \"address\",\n        label: \"Vendor address\",\n        size: \"small\",\n        variant: \"outlined\",\n        required: true,\n        value: formValues.address,\n        onChange: handleChange,\n        name: \"address\",\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: [\"Vendor's address is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        padding: 0,\n        marginBottom: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"phone\",\n              label: \"Phone number\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.phone,\n              onChange: handleChange,\n              name: \"phone\",\n              fullWidth: true,\n              required: true,\n              type: \"phone\",\n              validators: [\"required\"],\n              errorMessages: [\"Vendor's phone number is required\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextValidator, {\n              className: classes.mb,\n              id: \"website\",\n              label: \"Website (Optional)\",\n              size: \"small\",\n              variant: \"outlined\",\n              value: formValues.website,\n              onChange: handleChange,\n              name: \"website\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.mb,\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        rowsMax: 5,\n        placeholder: \"Briefly describe vendor\",\n        name: \"description\",\n        label: \"Description\",\n        value: formValues.description,\n        onChange: handleChange,\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [\"Vendor's description is required\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.row,\n        children: [!is24Hrs && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          padding: 0,\n          marginBottom: 0,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n                className: classes.mb,\n                value: formValues.opensAt,\n                onChange: handleChange,\n                label: \"Opens By\",\n                name: \"opensAt\",\n                fullWidth: true,\n                variant: \"outlined\",\n                size: \"small\",\n                validators: [\"required\"],\n                errorMessages: [\"Opening time is required\"],\n                children: (_ref2 = timesOpen !== null && timesOpen !== void 0 ? timesOpen : []) === null || _ref2 === void 0 ? void 0 : _ref2.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: item !== null && item !== void 0 ? item : \"\",\n                  children: item !== null && item !== void 0 ? item : \"\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n                className: classes.mb,\n                value: formValues.closesAt,\n                onChange: handleChange,\n                label: \"Closes By\",\n                name: \"closesAt\",\n                fullWidth: true,\n                variant: \"outlined\",\n                size: \"small\",\n                validators: [\"required\"],\n                errorMessages: [\"Closing time is required\"],\n                children: (_ref3 = timesClosed !== null && timesClosed !== void 0 ? timesClosed : []) === null || _ref3 === void 0 ? void 0 : _ref3.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: item !== null && item !== void 0 ? item : \"\",\n                  children: item !== null && item !== void 0 ? item : \"\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: is24Hrs,\n          onChange: val => setIs24Hrs(val)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: isLoading || isUploading,\n        fullWidth: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddVendorForm, \"jOjtehVHgzFXtdOeNjzNEKIwrlg=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c2 = AddVendorForm;\nexport default AddVendorForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"AddVendorForm\");","map":{"version":3,"sources":["/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_vendor.js"],"names":["React","ValidatorForm","TextValidator","SelectValidator","Avatar","makeStyles","Button","db","ref","storage","setDoc","doc","uploadBytesResumable","getDownloadURL","query","collection","updateDoc","onSnapshot","useSnackbar","Backdrop","Box","Checkbox","CircularProgress","Grid","IconButton","MenuItem","Typography","EditIcon","CameraAlt","placeholder","useStyles","theme","image","margin","width","height","logo","mb","marginBottom","row","display","flexDirection","justifyContent","alignItems","subRow","timesOpen","timesClosed","CircularProgressWithLabel","props","color","fontFamily","Math","round","value","AddVendorForm","classes","setOpen","formValues","setFormValues","useState","name","category","address","description","phone","website","opensAt","closesAt","is24Hrs","file","setFile","logoFile","setLogoFile","isUploading","setIsUploading","isLoading","setIsLoading","progress","setProgress","previewImage","setPreviewImage","previewLogo","setPreviewLogo","enqueueSnackbar","categoriesList","setCategoriesList","coverRef","useRef","setIs24Hrs","useEffect","q","unsubscribe","querySnapshot","categories","forEach","push","data","handleChange","e","id","target","files","URL","createObjectURL","prevData","createVendor","timeNow","Date","storageRef","getTime","storageRef2","uploadTask","uploadTask2","on","snapshot","uprogress","bytesTransferred","totalBytes","error","console","log","message","variant","then","downloadURL","is24Hours","blocked","createdAt","updatedAt","res","tmn","snapshot2","prog","download","mRef","catch","zIndex","backgroundImage","backgroundRepeat","backgroundSize","marginTop","ml","mt","padding","map","item","index","title","val"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,eAHF,QAIO,kCAJP;AAKA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACEC,EADF,EAEEC,GAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,oBANF,EAOEC,cAPF,EAQEC,KARF,EASEC,UATF,EAUEC,SAVF,EAWEC,UAXF,QAYO,wBAZP;AAaA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SACEC,QADF,EAEEC,gBAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,QALF,QAMO,eANP;AAOA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;;AAEA,MAAMC,SAAS,GAAGzB,UAAU,CAAE0B,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,oBADH;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,MAAM,EAAE;AAHH,GADgC;AAMvCC,EAAAA,IAAI,EAAE;AACJH,IAAAA,MAAM,EAAE,oBADJ;AAEJC,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,MAAM,EAAE;AAHJ,GANiC;AAWvCE,EAAAA,EAAE,EAAE;AACFC,IAAAA,YAAY,EAAE;AADZ,GAXmC;AAcvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,aAAa,EAAE,KAFZ;AAGHC,IAAAA,cAAc,EAAE,eAHb;AAIHC,IAAAA,UAAU,EAAE;AAJT,GAdkC;AAoBvCC,EAAAA,MAAM,EAAE;AACNJ,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,aAAa,EAAE,KAFT;AAGNC,IAAAA,cAAc,EAAE,KAHV;AAINC,IAAAA,UAAU,EAAE;AAJN;AApB+B,CAAZ,CAAD,CAA5B;AA4BA,MAAME,SAAS,GAAG,CAChB,UADgB,EAEhB,UAFgB,EAGhB,UAHgB,EAIhB,UAJgB,EAKhB,UALgB,EAMhB,UANgB,EAOhB,UAPgB,EAQhB,UARgB,CAAlB;AAWA,MAAMC,WAAW,GAAG,CAClB,UADkB,EAElB,UAFkB,EAGlB,UAHkB,EAIlB,UAJkB,EAKlB,UALkB,EAMlB,UANkB,EAOlB,UAPkB,EAQlB,UARkB,EASlB,UATkB,EAUlB,UAVkB,EAWlB,UAXkB,CAApB;;AAcA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAC3C,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAC,aAAjC;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,EAAC,aADV;AAAA,SAEMA,KAFN;AAGE,MAAA,IAAI,EAAE,EAHR;AAIE,MAAA,SAAS,EAAE,GAJb;AAKE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AALT;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,GAAD;AACE,MAAA,GAAG,EAAE,CADP;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,MAAM,EAAE,CAHV;AAIE,MAAA,KAAK,EAAE,CAJT;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,OAAO,EAAC,MANV;AAOE,MAAA,UAAU,EAAC,QAPb;AAQE,MAAA,cAAc,EAAC,QARjB;AAAA,6BAUE,QAAC,UAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,UAAU,EAAE;AAA9B,SAHT;AAAA,kBAIG,GAAEC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,KAAjB,CAAwB;AAJ7B;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5BD;;KAAMN,yB;;AA8BN,MAAMO,aAAa,GAAIN,KAAD,IAAW;AAAA;;AAAA;;AAC/B,QAAMO,OAAO,GAAGzB,SAAS,EAAzB;AACA,MAAI;AAAE0B,IAAAA;AAAF,MAAcR,KAAlB;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8B1D,KAAK,CAAC2D,QAAN,CAAe;AACjDC,IAAAA,IAAI,EAAE,EAD2C;AAEjD5B,IAAAA,KAAK,EAAE,EAF0C;AAGjDI,IAAAA,IAAI,EAAE,EAH2C;AAIjDyB,IAAAA,QAAQ,EAAE,EAJuC;AAKjDC,IAAAA,OAAO,EAAE,EALwC;AAMjDC,IAAAA,WAAW,EAAE,EANoC;AAOjDC,IAAAA,KAAK,EAAE,EAP0C;AAQjDC,IAAAA,OAAO,EAAE,EARwC;AASjDC,IAAAA,OAAO,EAAE,EATwC;AAUjDC,IAAAA,QAAQ,EAAE,EAVuC;AAWjDC,IAAAA,OAAO,EAAE;AAXwC,GAAf,CAApC;AAaA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtE,KAAK,CAAC2D,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BxE,KAAK,CAAC2D,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgC1E,KAAK,CAAC2D,QAAN,CAAe,KAAf,CAAtC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4B5E,KAAK,CAAC2D,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0B9E,KAAK,CAAC2D,QAAN,CAAe,CAAf,CAAhC;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkChF,KAAK,CAAC2D,QAAN,CAAe9B,WAAf,CAAxC;AACA,QAAM,CAACoD,WAAD,EAAcC,cAAd,IAAgClF,KAAK,CAAC2D,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAsBjE,WAAW,EAAvC;AACA,QAAM,CAACkE,cAAD,EAAiBC,iBAAjB,IAAsCrF,KAAK,CAAC2D,QAAN,CAAe,IAAf,CAA5C;AACA,QAAM2B,QAAQ,GAAGtF,KAAK,CAACuF,MAAN,EAAjB;AACA,QAAM,CAACnB,OAAD,EAAUoB,UAAV,IAAwBxF,KAAK,CAAC2D,QAAN,CAAe,KAAf,CAA9B;AAEA3D,EAAAA,KAAK,CAACyF,SAAN,CAAgB,MAAM;AACpB,UAAMC,CAAC,GAAG5E,KAAK,CAACC,UAAU,CAACR,EAAD,EAAK,wBAAL,CAAX,CAAf;AACA,UAAMoF,WAAW,GAAG1E,UAAU,CAACyE,CAAD,EAAKE,aAAD,IAAmB;AACnD,YAAMC,UAAU,GAAG,EAAnB;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBnF,GAAD,IAAS;AAC7BkF,QAAAA,UAAU,CAACE,IAAX,CAAgBpF,GAAG,CAACqF,IAAJ,EAAhB;AACD,OAFD;AAGAX,MAAAA,iBAAiB,CAACQ,UAAD,CAAjB;AACD,KAN6B,CAA9B;AAOD,GATD,EASG,EATH;;AAWA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,EAAF;AAAMvC,MAAAA,IAAN;AAAYP,MAAAA;AAAZ,QAAsB6C,CAAC,CAACE,MAA9B;;AAEA,QAAID,EAAE,KAAK,OAAX,EAAoB;AAClB7B,MAAAA,OAAO,CAAC4B,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACArB,MAAAA,eAAe,CAACsB,GAAG,CAACC,eAAJ,CAAoBL,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAf;AACA3C,MAAAA,aAAa,CAAE8C,QAAD,KAAe,EAC3B,GAAGA,QADwB;AAE3BxE,QAAAA,KAAK,EAAEkE,CAAC,CAACE,MAAF,CAAS/C;AAFW,OAAf,CAAD,CAAb;AAID,KAPD,MAOO,IAAI8C,EAAE,KAAK,MAAX,EAAmB;AACxB3B,MAAAA,WAAW,CAAC0B,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAX;AACAnB,MAAAA,cAAc,CAACoB,GAAG,CAACC,eAAJ,CAAoBL,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAd;AACA3C,MAAAA,aAAa,CAAE8C,QAAD,KAAe,EAC3B,GAAGA,QADwB;AAE3BpE,QAAAA,IAAI,EAAE8D,CAAC,CAACE,MAAF,CAAS/C;AAFY,OAAf,CAAD,CAAb;AAID,KAPM,MAOA;AACLK,MAAAA,aAAa,CAAE8C,QAAD,KAAe,EAAE,GAAGA,QAAL;AAAe,SAAC5C,IAAD,GAAQP;AAAvB,OAAf,CAAD,CAAb;AACD;AACF,GApBD;;AAsBA,QAAMoD,YAAY,GAAIP,CAAD,IAAO;AAC1BxB,IAAAA,cAAc,CAAC,IAAD,CAAd,CAD0B,CAG1B;;AACA,UAAMgC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,QAAIC,UAAU,GAAGpG,GAAG,CAACC,OAAD,EAAU,aAAaiG,OAAO,CAACG,OAAR,EAAvB,CAApB;AACA,QAAIC,WAAW,GAAGtG,GAAG,CAACC,OAAD,EAAU,iBAAiBiG,OAAO,CAACG,OAAR,EAA3B,CAArB;AACA,QAAIE,UAAU,GAAGnG,oBAAoB,CAACgG,UAAD,EAAavC,IAAb,CAArC;AACA,QAAI2C,WAAW,GAAGpG,oBAAoB,CAACkG,WAAD,EAAcvC,QAAd,CAAtC;AACAwC,IAAAA,UAAU,CAACE,EAAX,CACE,eADF,EAEGC,QAAD,IAAc;AACZ,YAAMC,SAAS,GACZD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GADtD;AAEAvC,MAAAA,WAAW,CAACqC,SAAD,CAAX;AACD,KANH,EAOGG,KAAD,IAAW;AACT5C,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA6C,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAnC,MAAAA,eAAe,CAAE,GAAEmC,KAAK,CAACG,OAAQ,EAAlB,EAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAf;AACD,KAXH,EAYE,MAAM;AACJ7G,MAAAA,cAAc,CAACkG,UAAU,CAACG,QAAX,CAAoB1G,GAArB,CAAd,CAAwCmH,IAAxC,CAA8CC,WAAD,IAAiB;AAC5DlD,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAlE,QAAAA,MAAM,CAACC,GAAG,CAACJ,EAAD,EAAK,qBAAL,EAA6B,GAAEmG,OAAO,CAACG,OAAR,EAAkB,EAAjD,CAAJ,EAAyD;AAC7DV,UAAAA,EAAE,EAAEO,OAAO,CAACG,OAAR,EADyD;AAE7DjD,UAAAA,IAAI,EAAEH,UAAU,CAACG,IAF4C;AAG7D5B,UAAAA,KAAK,EAAE4F,WAHsD;AAI7D/D,UAAAA,QAAQ,EAAEJ,UAAU,CAACI,QAJwC;AAK7DC,UAAAA,OAAO,EAAEL,UAAU,CAACK,OALyC;AAM7DE,UAAAA,KAAK,EAAEP,UAAU,CAACO,KAN2C;AAO7DC,UAAAA,OAAO,EAAER,UAAU,CAACQ,OAPyC;AAQ7DF,UAAAA,WAAW,EAAEN,UAAU,CAACM,WARqC;AAS7DG,UAAAA,OAAO,EAAET,UAAU,CAACS,OATyC;AAU7DC,UAAAA,QAAQ,EAAEV,UAAU,CAACU,QAVwC;AAW7D0D,UAAAA,SAAS,EAAEpE,UAAU,CAACW,OAXuC;AAY7DhC,UAAAA,IAAI,EAAE,GAZuD;AAa7D0F,UAAAA,OAAO,EAAE,KAboD;AAc7DC,UAAAA,SAAS,EAAErB,OAdkD;AAe7DsB,UAAAA,SAAS,EAAEtB;AAfkD,SAAzD,CAAN,CAiBGiB,IAjBH,CAiBSM,GAAD,IAAS;AACb;AACA,gBAAMC,GAAG,GAAGxB,OAAO,CAACG,OAAR,EAAZ;AACAnC,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAoC,UAAAA,WAAW,CAACC,EAAZ,CACE,eADF,EAEGkB,SAAD,IAAe;AACb,kBAAMC,IAAI,GACPD,SAAS,CAACf,gBAAV,GAA6Be,SAAS,CAACd,UAAxC,GAAsD,GADxD;AAEAvC,YAAAA,WAAW,CAACsD,IAAD,CAAX;AACD,WANH,EAOGd,KAAD,IAAW;AACT5C,YAAAA,cAAc,CAAC,KAAD,CAAd;AACA6C,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAnC,YAAAA,eAAe,CAAE,GAAEmC,KAAK,CAACG,OAAQ,EAAlB,EAAqB;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAArB,CAAf;AACD,WAXH,EAYE,MAAM;AACJ7G,YAAAA,cAAc,CAACmG,WAAW,CAACE,QAAZ,CAAqB1G,GAAtB,CAAd,CAAyCmH,IAAzC,CACE,MAAOU,QAAP,IAAoB;AAClB3D,cAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,cAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,kBAAI;AACF,sBAAM0D,IAAI,GAAG3H,GAAG,CAACJ,EAAD,EAAK,qBAAL,EAA4B,KAAK2H,GAAjC,CAAhB;AACA,sBAAMlH,SAAS,CAACsH,IAAD,EAAO;AACpBlG,kBAAAA,IAAI,EAAEiG;AADc,iBAAP,CAAf;AAGA7E,gBAAAA,OAAO,CAAC,KAAD,CAAP;AACAoB,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAO,gBAAAA,eAAe,CAAE,+BAAF,EAAkC;AAC/CuC,kBAAAA,OAAO,EAAE;AADsC,iBAAlC,CAAf;AAGD,eAVD,CAUE,OAAOJ,KAAP,EAAc;AACd1C,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAO,gBAAAA,eAAe,CAAE,GAAEmC,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEG,OAAQ,EAAnB,EAAsB;AACnCC,kBAAAA,OAAO,EAAE;AAD0B,iBAAtB,CAAf;AAGD;AACF,aApBH;AAsBD,WAnCH;AAqCD,SA3DH,EA4DGa,KA5DH,CA4DUjB,KAAD,IAAW;AAChB1C,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SA9DH;AA+DD,OAlED;AAmED,KAhFH;AAkFD,GA3FD;;AA6FA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAE4D,QAAAA,MAAM,EAAE;AAAV,OAAjB;AAAmC,MAAA,IAAI,EAAE/D,WAAW,IAAIE,SAAxD;AAAA,iBACGF,WAAW,gBAAG,QAAC,yBAAD;AAA2B,QAAA,KAAK,EAAEI;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAoD;AAAA;AAAA;AAAA;AAAA,cADlE,EAEGF,SAAS,gBACR,QAAC,gBAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAE,GAFb;AAGE,QAAA,KAAK,EAAE;AAAE1B,UAAAA,KAAK,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA,cADQ,gBAOR;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEwD,YAAzB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,GAAG,EAAEnB,QADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAE;AAAE9C,UAAAA,OAAO,EAAE;AAAX,SAJT;AAKE,QAAA,OAAO,EAAC,UALV;AAME,QAAA,KAAK,EAAEiB,UAAU,CAACzB,KANpB;AAOE,QAAA,IAAI,EAAC,OAPP;AAQE,QAAA,IAAI,EAAC,MARP;AASE,QAAA,SAAS,MATX;AAUE,QAAA,QAAQ,EAAE2C,SAVZ;AAWE,QAAA,MAAM,EAAC,mBAXT;AAYE,QAAA,QAAQ,EAAEsB,YAZZ;AAaE,QAAA,UAAU,EAAE,CAAC,UAAD,CAbd;AAcE,QAAA,aAAa,EAAE,CAAC,4BAAD,CAdjB;AAeE,QAAA,UAAU,EAAC;AAfb;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE,QAAC,aAAD;AACE,QAAA,SAAS,EAAE1C,OAAO,CAAClB,EADrB;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,OAAO,EAAC,UAJV;AAKE,QAAA,KAAK,EAAE;AAAEG,UAAAA,OAAO,EAAE;AAAX,SALT;AAME,QAAA,KAAK,EAAEiB,UAAU,CAACrB,IANpB;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,IAAI,EAAC,MARP;AASE,QAAA,SAAS,MATX;AAUE,QAAA,QAAQ,EAAEuC,SAVZ;AAWE,QAAA,MAAM,EAAC,oBAXT;AAYE,QAAA,QAAQ,EAAEsB,YAZZ;AAaE,QAAA,UAAU,EAAE,CAAC,UAAD,CAbd;AAcE,QAAA,aAAa,EAAE,CAAC,2BAAD,CAdjB;AAeE,QAAA,UAAU,EAAC;AAfb;AAAA;AAAA;AAAA;AAAA,cAnBF,eAqCE;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,KAAK,EAAE;AACLzD,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,aAAa,EAAE,QAFV;AAGLN,UAAAA,MAAM,EAAE,GAHH;AAILD,UAAAA,KAAK,EAAE,GAJF;AAKLuG,UAAAA,eAAe,EAAE,SAAS1D,YAAT,GAAwB,GALpC;AAML2D,UAAAA,gBAAgB,EAAE,WANb;AAOLC,UAAAA,cAAc,EAAE,OAPX;AAQLrG,UAAAA,YAAY,EAAE;AART,SAFT;AAYE,QAAA,MAAM,EAAC,MAZT;AAAA,+BAcE;AACE,UAAA,KAAK,EAAE;AACLE,YAAAA,OAAO,EAAE,MADJ;AAELC,YAAAA,aAAa,EAAE,KAFV;AAGLC,YAAAA,cAAc,EAAE,eAHX;AAILC,YAAAA,UAAU,EAAE,QAJP;AAKLiG,YAAAA,SAAS,EAAE,MALN;AAMLtG,YAAAA,YAAY,EAAE,CAAC;AANV,WADT;AAAA,kCAUE;AACE,YAAA,OAAO,EAAC,MADV;AAEE,YAAA,KAAK,EAAE;AAAEkG,cAAAA,MAAM,EAAE,IAAV;AAAgBhG,cAAAA,OAAO,EAAE,MAAzB;AAAiCC,cAAAA,aAAa,EAAE;AAAhD,aAFT;AAAA,oCAIE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,GAAG,EAAC,QAFN;AAGE,cAAA,GAAG,EAAEwC,WAHP;AAIE,cAAA,SAAS,EAAE1B,OAAO,CAACnB;AAJrB;AAAA;AAAA;AAAA;AAAA,oBAJF,eAUE;AAAO,cAAA,OAAO,EAAC,MAAf;AAAsB,cAAA,EAAE,EAAE;AAAEyG,gBAAAA,EAAE,EAAE,CAAC,CAAP;AAAUC,gBAAAA,EAAE,EAAE;AAAd,eAA1B;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAEvF,OAAO,CAACX,MAAxB;AAAA,uCACE,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,SAAjB;AAA2B,kBAAA,QAAQ,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eA0BE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAuB,YAAA,KAAK,EAAE;AAAEN,cAAAA,YAAY,EAAE,EAAhB;AAAoByG,cAAAA,OAAO,EAAE;AAA7B,aAA9B;AAAA,mCACE;AAAK,cAAA,SAAS,EAAExF,OAAO,CAACX,MAAxB;AAAA,sCACE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,SAAhB;AAA0B,gBAAA,QAAQ,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,cArCF,eAsFE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAE,CAArC;AAAwC,QAAA,YAAY,EAAE,CAAtD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACE;AAAA,mCACE,QAAC,eAAD;AACE,cAAA,SAAS,EAAEW,OAAO,CAAClB,EADrB;AAEE,cAAA,KAAK,EAAEoB,UAAU,CAACI,QAFpB;AAGE,cAAA,QAAQ,EAAEoC,YAHZ;AAIE,cAAA,KAAK,EAAC,UAJR;AAKE,cAAA,IAAI,EAAC,UALP;AAME,cAAA,SAAS,MANX;AAOE,cAAA,OAAO,EAAC,UAPV;AAQE,cAAA,IAAI,EAAC,OARP;AASE,cAAA,UAAU,EAAE,CAAC,UAAD,CATd;AAUE,cAAA,aAAa,EAAE,CAAC,+BAAD,CAVjB;AAAA,gCAYIb,cAZJ,aAYIA,cAZJ,cAYIA,cAZJ,GAYsB,EAZtB,yCAYG,KAAwB4D,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP;AAAA;;AAAA,oCAC3B,QAAC,QAAD;AAAsB,kBAAA,KAAK,iBAAED,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,KAAR,qDAAiB,EAA5C;AAAA,4CACGF,IADH,aACGA,IADH,uBACGA,IAAI,CAAEE,KADT,uDACkB;AADlB,mBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA,wBAD2B;AAAA,eAA5B;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAwBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACE;AAAA,mCACE,QAAC,aAAD;AACE,cAAA,SAAS,EAAE3F,OAAO,CAAClB,EADrB;AAEE,cAAA,EAAE,EAAC,MAFL;AAGE,cAAA,KAAK,EAAC,aAHR;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,OAAO,EAAC,UALV;AAME,cAAA,KAAK,EAAEoB,UAAU,CAACG,IANpB;AAOE,cAAA,QAAQ,EAAEqC,YAPZ;AAQE,cAAA,IAAI,EAAC,MARP;AASE,cAAA,QAAQ,MATV;AAUE,cAAA,SAAS,MAVX;AAWE,cAAA,UAAU,EAAE,CAAC,UAAD,CAXd;AAYE,cAAA,aAAa,EAAE,CAAC,2BAAD;AAZjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtFF,eAkIE,QAAC,aAAD;AACE,QAAA,SAAS,EAAE1C,OAAO,CAAClB,EADrB;AAEE,QAAA,EAAE,EAAC,SAFL;AAGE,QAAA,KAAK,EAAC,gBAHR;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,OAAO,EAAC,UALV;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,KAAK,EAAEoB,UAAU,CAACK,OAPpB;AAQE,QAAA,QAAQ,EAAEmC,YARZ;AASE,QAAA,IAAI,EAAC,SATP;AAUE,QAAA,SAAS,MAVX;AAWE,QAAA,UAAU,EAAE,CAAC,UAAD,CAXd;AAYE,QAAA,aAAa,EAAE,CAAC,8BAAD;AAZjB;AAAA;AAAA;AAAA;AAAA,cAlIF,eAiJE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAA4B,QAAA,OAAO,EAAE,CAArC;AAAwC,QAAA,YAAY,EAAE,CAAtD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACE;AAAA,mCACE,QAAC,aAAD;AACE,cAAA,SAAS,EAAE1C,OAAO,CAAClB,EADrB;AAEE,cAAA,EAAE,EAAC,OAFL;AAGE,cAAA,KAAK,EAAC,cAHR;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,OAAO,EAAC,UALV;AAME,cAAA,KAAK,EAAEoB,UAAU,CAACO,KANpB;AAOE,cAAA,QAAQ,EAAEiC,YAPZ;AAQE,cAAA,IAAI,EAAC,OARP;AASE,cAAA,SAAS,MATX;AAUE,cAAA,QAAQ,MAVV;AAWE,cAAA,IAAI,EAAC,OAXP;AAYE,cAAA,UAAU,EAAE,CAAC,UAAD,CAZd;AAaE,cAAA,aAAa,EAAE,CAAC,mCAAD;AAbjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAqBE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACE;AAAA,mCACE,QAAC,aAAD;AACE,cAAA,SAAS,EAAE1C,OAAO,CAAClB,EADrB;AAEE,cAAA,EAAE,EAAC,SAFL;AAGE,cAAA,KAAK,EAAC,oBAHR;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,OAAO,EAAC,UALV;AAME,cAAA,KAAK,EAAEoB,UAAU,CAACQ,OANpB;AAOE,cAAA,QAAQ,EAAEgC,YAPZ;AAQE,cAAA,IAAI,EAAC,SARP;AASE,cAAA,SAAS;AATX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjJF,eAuLE,QAAC,aAAD;AACE,QAAA,SAAS,EAAE1C,OAAO,CAAClB,EADrB;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,IAAI,EAAE,CAJR;AAKE,QAAA,OAAO,EAAE,CALX;AAME,QAAA,WAAW,EAAC,yBANd;AAOE,QAAA,IAAI,EAAC,aAPP;AAQE,QAAA,KAAK,EAAC,aARR;AASE,QAAA,KAAK,EAAEoB,UAAU,CAACM,WATpB;AAUE,QAAA,QAAQ,EAAEkC,YAVZ;AAWE,QAAA,OAAO,EAAC,UAXV;AAYE,QAAA,UAAU,EAAE,CAAC,UAAD,CAZd;AAaE,QAAA,aAAa,EAAE,CAAC,kCAAD;AAbjB;AAAA;AAAA;AAAA;AAAA,cAvLF,eAuME;AAAK,QAAA,SAAS,EAAE1C,OAAO,CAAChB,GAAxB;AAAA,mBACG,CAAC6B,OAAD,iBACC,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAA4B,UAAA,OAAO,EAAE,CAArC;AAAwC,UAAA,YAAY,EAAE,CAAtD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAA0B,YAAA,EAAE,EAAE,CAA9B;AAAA,mCACE;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,SAAS,EAAEb,OAAO,CAAClB,EADrB;AAEE,gBAAA,KAAK,EAAEoB,UAAU,CAACS,OAFpB;AAGE,gBAAA,QAAQ,EAAE+B,YAHZ;AAIE,gBAAA,KAAK,EAAC,UAJR;AAKE,gBAAA,IAAI,EAAC,SALP;AAME,gBAAA,SAAS,MANX;AAOE,gBAAA,OAAO,EAAC,UAPV;AAQE,gBAAA,IAAI,EAAC,OARP;AASE,gBAAA,UAAU,EAAE,CAAC,UAAD,CATd;AAUE,gBAAA,aAAa,EAAE,CAAC,0BAAD,CAVjB;AAAA,mCAYIpD,SAZJ,aAYIA,SAZJ,cAYIA,SAZJ,GAYiB,EAZjB,0CAYG,MAAmBmG,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,kBACtB,QAAC,QAAD;AAAsB,kBAAA,KAAK,EAAED,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAU,EAArC;AAAA,4BACGA,IADH,aACGA,IADH,cACGA,IADH,GACW;AADX,mBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,wBADD;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAwBE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAA0B,YAAA,EAAE,EAAE,CAA9B;AAAA,mCACE;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,SAAS,EAAE3F,OAAO,CAAClB,EADrB;AAEE,gBAAA,KAAK,EAAEoB,UAAU,CAACU,QAFpB;AAGE,gBAAA,QAAQ,EAAE8B,YAHZ;AAIE,gBAAA,KAAK,EAAC,WAJR;AAKE,gBAAA,IAAI,EAAC,UALP;AAME,gBAAA,SAAS,MANX;AAOE,gBAAA,OAAO,EAAC,UAPV;AAQE,gBAAA,IAAI,EAAC,OARP;AASE,gBAAA,UAAU,EAAE,CAAC,UAAD,CATd;AAUE,gBAAA,aAAa,EAAE,CAAC,0BAAD,CAVjB;AAAA,mCAYInD,WAZJ,aAYIA,WAZJ,cAYIA,WAZJ,GAYmB,EAZnB,0CAYG,MAAqBkG,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,kBACxB,QAAC,QAAD;AAAsB,kBAAA,KAAK,EAAED,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAU,EAArC;AAAA,4BACGA,IADH,aACGA,IADH,cACGA,IADH,GACW;AADX,mBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,wBADD;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAkDE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE9E,OAAjB;AAA0B,UAAA,QAAQ,EAAGgF,GAAD,IAAS5D,UAAU,CAAC4D,GAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAlDF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvMF,eA4PE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,QAAQ,EAAEzE,SAAS,IAAIF,WAHzB;AAIE,QAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5PF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqRD,CA/aD;;GAAMnB,a;UACYxB,S,EAsBYZ,W;;;MAvBxBoC,a;AAibN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  updateDoc,\n  onSnapshot,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport {\n  Checkbox,\n  CircularProgress,\n  Grid,\n  IconButton,\n  MenuItem,\n} from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { CameraAlt } from \"@mui/icons-material\";\nimport placeholder from \"../../../assets/images/placeholder.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: \"100%\",\n    height: 156,\n  },\n  logo: {\n    margin: \"0px auto 15px auto\",\n    width: 48,\n    height: 48,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n}));\n\nconst timesOpen = [\n  \"05:00 AM\",\n  \"06:00 AM\",\n  \"07:00 AM\",\n  \"08:00 AM\",\n  \"09:00 AM\",\n  \"10:00 AM\",\n  \"11:00 AM\",\n  \"12:00 PM\",\n];\n\nconst timesClosed = [\n  \"02:00 PM\",\n  \"03:00 PM\",\n  \"04:00 PM\",\n  \"05:00 PM\",\n  \"06:00 PM\",\n  \"07:00 PM\",\n  \"08:00 PM\",\n  \"09:00 PM\",\n  \"10:00 PM\",\n  \"11:00 PM\",\n  \"12:00 AM\",\n];\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddVendorForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: \"\",\n    image: \"\",\n    logo: \"\",\n    category: \"\",\n    address: \"\",\n    description: \"\",\n    phone: \"\",\n    website: \"\",\n    opensAt: \"\",\n    closesAt: \"\",\n    is24Hrs: false,\n  });\n  const [file, setFile] = React.useState(null);\n  const [logoFile, setLogoFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(placeholder);\n  const [previewLogo, setPreviewLogo] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  const coverRef = React.useRef();\n  const [is24Hrs, setIs24Hrs] = React.useState(false);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"directories-categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"logo\") {\n      setLogoFile(e.target.files[0]);\n      setPreviewLogo(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        logo: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createVendor = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n    let storageRef2 = ref(storage, \"vendors/img_\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    let uploadTask2 = uploadBytesResumable(storageRef2, logoFile);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"directories-vendors\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            name: formValues.name,\n            image: downloadURL,\n            category: formValues.category,\n            address: formValues.address,\n            phone: formValues.phone,\n            website: formValues.website,\n            description: formValues.description,\n            opensAt: formValues.opensAt,\n            closesAt: formValues.closesAt,\n            is24Hours: formValues.is24Hrs,\n            logo: \" \",\n            blocked: false,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              //Now upload author image\n              const tmn = timeNow.getTime();\n              setIsUploading(true);\n              setIsLoading(false);\n              uploadTask2.on(\n                \"state_changed\",\n                (snapshot2) => {\n                  const prog =\n                    (snapshot2.bytesTransferred / snapshot2.totalBytes) * 100;\n                  setProgress(prog);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask2.snapshot.ref).then(\n                    async (download) => {\n                      setIsUploading(false);\n                      setIsLoading(true);\n                      try {\n                        const mRef = doc(db, \"directories-vendors\", \"\" + tmn);\n                        await updateDoc(mRef, {\n                          logo: download,\n                        });\n                        setOpen(false);\n                        setIsLoading(false);\n                        enqueueSnackbar(`New vendor added successfully`, {\n                          variant: \"success\",\n                        });\n                      } catch (error) {\n                        setIsLoading(false);\n                        enqueueSnackbar(`${error?.message}`, {\n                          variant: \"error\",\n                        });\n                      }\n                    }\n                  );\n                }\n              );\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createVendor}>\n        <TextValidator\n          ref={coverRef}\n          id=\"image\"\n          size=\"small\"\n          style={{ display: \"none\" }}\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Featured image is required\"]}\n          helperText=\"Featured image\"\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"logo\"\n          size=\"small\"\n          variant=\"outlined\"\n          style={{ display: \"none\" }}\n          value={formValues.logo}\n          name=\"logo\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg,\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's logo is required\"]}\n          helperText=\"Vendor's logo\"\n        />\n\n        <label\n          htmlFor=\"image\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: 144,\n            width: 400,\n            backgroundImage: \"url(\" + previewImage + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            marginBottom: 24,\n          }}\n          typeof=\"file\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginTop: \"auto\",\n              marginBottom: -32,\n            }}\n          >\n            <label\n              htmlFor=\"logo\"\n              style={{ zIndex: 1000, display: \"flex\", flexDirection: \"row\" }}\n            >\n              <Avatar\n                variant=\"circular\"\n                alt=\"Author\"\n                src={previewLogo}\n                className={classes.logo}\n              />\n              <label htmlFor=\"logo\" sx={{ ml: -6, mt: 0 }}>\n                <div className={classes.subRow}>\n                  <CameraAlt color=\"primary\" fontSize=\"small\" />\n                </div>\n              </label>\n            </label>\n            <label htmlFor=\"image\" style={{ marginBottom: 24, padding: 8 }}>\n              <div className={classes.subRow}>\n                <EditIcon color=\"primary\" fontSize=\"small\" />\n                <Typography color=\"blue\">Edit</Typography>\n              </div>\n            </label>\n          </div>\n        </label>\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <SelectValidator\n                className={classes.mb}\n                value={formValues.category}\n                onChange={handleChange}\n                label=\"Category\"\n                name=\"category\"\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's category is required\"]}\n              >\n                {(categoriesList ?? [])?.map((item, index) => (\n                  <MenuItem key={index} value={item?.title ?? \"\"}>\n                    {item?.title ?? \"\"}\n                  </MenuItem>\n                ))}\n              </SelectValidator>\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"name\"\n                label=\"Vendor name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.name}\n                onChange={handleChange}\n                name=\"name\"\n                required\n                fullWidth\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's name is required\"]}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"address\"\n          label=\"Vendor address\"\n          size=\"small\"\n          variant=\"outlined\"\n          required\n          value={formValues.address}\n          onChange={handleChange}\n          name=\"address\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's address is required\"]}\n        />\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"phone\"\n                label=\"Phone number\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.phone}\n                onChange={handleChange}\n                name=\"phone\"\n                fullWidth\n                required\n                type=\"phone\"\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's phone number is required\"]}\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"website\"\n                label=\"Website (Optional)\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.website}\n                onChange={handleChange}\n                name=\"website\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={4}\n          rowsMax={5}\n          placeholder=\"Briefly describe vendor\"\n          name=\"description\"\n          label=\"Description\"\n          value={formValues.description}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's description is required\"]}\n        />\n\n        <div className={classes.row}>\n          {!is24Hrs && (\n            <Grid container spacing={1} padding={0} marginBottom={0}>\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <SelectValidator\n                    className={classes.mb}\n                    value={formValues.opensAt}\n                    onChange={handleChange}\n                    label=\"Opens By\"\n                    name=\"opensAt\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Opening time is required\"]}\n                  >\n                    {(timesOpen ?? [])?.map((item, index) => (\n                      <MenuItem key={index} value={item ?? \"\"}>\n                        {item ?? \"\"}\n                      </MenuItem>\n                    ))}\n                  </SelectValidator>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <SelectValidator\n                    className={classes.mb}\n                    value={formValues.closesAt}\n                    onChange={handleChange}\n                    label=\"Closes By\"\n                    name=\"closesAt\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Closing time is required\"]}\n                  >\n                    {(timesClosed ?? [])?.map((item, index) => (\n                      <MenuItem key={index} value={item ?? \"\"}>\n                        {item ?? \"\"}\n                      </MenuItem>\n                    ))}\n                  </SelectValidator>\n                </div>\n              </Grid>\n            </Grid>\n          )}\n          <Checkbox value={is24Hrs} onChange={(val) => setIs24Hrs(val)} />\n        </div>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddVendorForm;\n"]},"metadata":{},"sourceType":"module"}