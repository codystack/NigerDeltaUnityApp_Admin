[{"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/index.js":"1","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/reportWebVitals.js":"2","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/App.js":"3","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/domain/helper/themes.js":"4","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/data/store/index.js":"5","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/data/firebase/index.js":"6","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/domain/helper/private-routes.js":"7","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/data/store/slice/user.js":"8","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/login/index.js":"9","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/register/index.js":"10","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/index.js":"11","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/notfound/index.js":"12","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/history/history_detail.js":"13","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/product_detail.js":"14","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/vendor_detail.js":"15","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/login/index.js":"16","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/history/index.js":"17","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/index.js":"18","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js":"19","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/states/index.js":"20","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/education/index.js":"21","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/contact-us/index.js":"22","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/terms-of-service/index.js":"23","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/privacy-policy/index.js":"24","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/products.js":"25","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/products/add_product.js":"26","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js":"27","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/dialogs/custom-dialog.js":"28","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/history/update_history_form.js":"29","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js":"30","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/privacy-policy/update_policy_form.js":"31","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/add_project_form.js":"32","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/update_project_form.js":"33","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/richtext/index.js":"34","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/terms-of-service/index.js":"35","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/contact-us/index.js":"36","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/domain/service/index.js":"37","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/add_news_form.js":"38","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_vendor.js":"39","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js":"40","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_category.js":"41","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/edit_education.js":"42","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/add_education.js":"43","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/edit_category.js":"44","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/add_category.js":"45","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/states/edit_state.js":"46","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/states/add_state.js":"47","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/history/add_history_form.js":"48","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/project_item.js":"49","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/news_item.js":"50","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/newsfeeds.js":"51","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/categories/categories.js":"52","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer2.js":"53","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer1.js":"54","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/index.js":"55","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/index.js":"56","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_users/index.js":"57","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/profile/index.js":"58","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/home/index.js":"59","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js":"60","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/update_category.js":"61","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/placeholder/custom_no_data.js":"62","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/admin/create_admin_form.js":"63","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js":"64","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/action_button.js":"65","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/richtext/quill.js":"66","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/richtext/edit_quill.js":"67","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/ads/index.js":"68","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/ads/add_advert_form.js":"69","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/datepicker/index.js":"70","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/switch/index.js":"71"},{"size":1457,"mtime":1656172586081,"results":"72","hashOfConfig":"73"},{"size":362,"mtime":1655537696193,"results":"74","hashOfConfig":"73"},{"size":2119,"mtime":1656800221518,"results":"75","hashOfConfig":"73"},{"size":3690,"mtime":1655537696175,"results":"76","hashOfConfig":"73"},{"size":595,"mtime":1655537696174,"results":"77","hashOfConfig":"73"},{"size":1739,"mtime":1655537834710,"results":"78","hashOfConfig":"73"},{"size":1513,"mtime":1655537696174,"results":"79","hashOfConfig":"73"},{"size":443,"mtime":1655537696174,"results":"80","hashOfConfig":"73"},{"size":3181,"mtime":1655537696193,"results":"81","hashOfConfig":"73"},{"size":2783,"mtime":1655537696193,"results":"82","hashOfConfig":"73"},{"size":13623,"mtime":1656785783311,"results":"83","hashOfConfig":"73"},{"size":474,"mtime":1655537696193,"results":"84","hashOfConfig":"73"},{"size":5230,"mtime":1655537696190,"results":"85","hashOfConfig":"73"},{"size":6008,"mtime":1656178162008,"results":"86","hashOfConfig":"73"},{"size":6113,"mtime":1656175404854,"results":"87","hashOfConfig":"73"},{"size":5260,"mtime":1655973787248,"results":"88","hashOfConfig":"73"},{"size":8173,"mtime":1655537696190,"results":"89","hashOfConfig":"73"},{"size":16439,"mtime":1655721297916,"results":"90","hashOfConfig":"73"},{"size":7396,"mtime":1655895389604,"results":"91","hashOfConfig":"73"},{"size":7727,"mtime":1655537696192,"results":"92","hashOfConfig":"73"},{"size":14520,"mtime":1655537696190,"results":"93","hashOfConfig":"73"},{"size":4494,"mtime":1655537696188,"results":"94","hashOfConfig":"73"},{"size":2921,"mtime":1655537696192,"results":"95","hashOfConfig":"73"},{"size":2914,"mtime":1655537696191,"results":"96","hashOfConfig":"73"},{"size":8598,"mtime":1656177742226,"results":"97","hashOfConfig":"73"},{"size":7358,"mtime":1656175882597,"results":"98","hashOfConfig":"73"},{"size":17929,"mtime":1658190238638,"results":"99","hashOfConfig":"73"},{"size":2213,"mtime":1655537696177,"results":"100","hashOfConfig":"73"},{"size":8040,"mtime":1655537696184,"results":"101","hashOfConfig":"73"},{"size":24104,"mtime":1655537696183,"results":"102","hashOfConfig":"73"},{"size":7442,"mtime":1655537696185,"results":"103","hashOfConfig":"73"},{"size":11928,"mtime":1655895617160,"results":"104","hashOfConfig":"73"},{"size":9860,"mtime":1655896759372,"results":"105","hashOfConfig":"73"},{"size":4100,"mtime":1655664761319,"results":"106","hashOfConfig":"73"},{"size":7504,"mtime":1655537696187,"results":"107","hashOfConfig":"73"},{"size":9826,"mtime":1655537696181,"results":"108","hashOfConfig":"73"},{"size":1027,"mtime":1655973550549,"results":"109","hashOfConfig":"73"},{"size":12142,"mtime":1656263808998,"results":"110","hashOfConfig":"73"},{"size":17557,"mtime":1655940198874,"results":"111","hashOfConfig":"73"},{"size":6209,"mtime":1655823568001,"results":"112","hashOfConfig":"73"},{"size":2801,"mtime":1655537696182,"results":"113","hashOfConfig":"73"},{"size":10322,"mtime":1655537696183,"results":"114","hashOfConfig":"73"},{"size":9349,"mtime":1655821729075,"results":"115","hashOfConfig":"73"},{"size":2697,"mtime":1655537696183,"results":"116","hashOfConfig":"73"},{"size":5725,"mtime":1655537696183,"results":"117","hashOfConfig":"73"},{"size":7676,"mtime":1655537696186,"results":"118","hashOfConfig":"73"},{"size":6346,"mtime":1655537696186,"results":"119","hashOfConfig":"73"},{"size":6673,"mtime":1656263886748,"results":"120","hashOfConfig":"73"},{"size":6049,"mtime":1655896965482,"results":"121","hashOfConfig":"73"},{"size":6787,"mtime":1655894551915,"results":"122","hashOfConfig":"73"},{"size":9519,"mtime":1655824764742,"results":"123","hashOfConfig":"73"},{"size":6492,"mtime":1655823946910,"results":"124","hashOfConfig":"73"},{"size":6628,"mtime":1655537696178,"results":"125","hashOfConfig":"73"},{"size":6457,"mtime":1655537696178,"results":"126","hashOfConfig":"73"},{"size":4445,"mtime":1655943928193,"results":"127","hashOfConfig":"73"},{"size":9148,"mtime":1655944329867,"results":"128","hashOfConfig":"73"},{"size":3061,"mtime":1655537696192,"results":"129","hashOfConfig":"73"},{"size":102,"mtime":1655537696192,"results":"130","hashOfConfig":"73"},{"size":6162,"mtime":1655537696187,"results":"131","hashOfConfig":"73"},{"size":5527,"mtime":1655823507887,"results":"132","hashOfConfig":"73"},{"size":6778,"mtime":1655537696181,"results":"133","hashOfConfig":"73"},{"size":3153,"mtime":1655537696179,"results":"134","hashOfConfig":"73"},{"size":6410,"mtime":1655537696180,"results":"135","hashOfConfig":"73"},{"size":3036,"mtime":1655537696179,"results":"136","hashOfConfig":"73"},{"size":5523,"mtime":1655537696178,"results":"137","hashOfConfig":"73"},{"size":3005,"mtime":1655821631483,"results":"138","hashOfConfig":"73"},{"size":3020,"mtime":1658191521590,"results":"139","hashOfConfig":"73"},{"size":10594,"mtime":1656171797459,"results":"140","hashOfConfig":"73"},{"size":11149,"mtime":1656424724354,"results":"141","hashOfConfig":"73"},{"size":1551,"mtime":1655947294776,"results":"142","hashOfConfig":"73"},{"size":2004,"mtime":1656015141333,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"f2cke9",{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"146"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"146"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"146"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"146"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"146"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"146"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"146"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"146"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"146"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"146"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"146"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"146"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"146"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"146"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"146"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"146"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"146"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"146"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"146"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"146"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"146"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"146"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"146"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"146"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/index.js",[],["313","314"],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/reportWebVitals.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/App.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/domain/helper/themes.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/data/store/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/data/firebase/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/domain/helper/private-routes.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/data/store/slice/user.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/login/index.js",["315","316"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport LoginForm from \"../../forms/login\";\nimport pattern from \"../../../assets/images/pattern.png\";\nimport logo from \"../../../assets/images/logo_white.png\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst Login = () => {\n  let history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n    history.push(\"/dashboard\");\n  };\n\n  return (\n    <Grid\n      container\n      component=\"main\"\n      sx={{\n        height: \"100vh\",\n        backgroundColor: (t) =>\n          t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundPosition: \"center\",\n      }}\n    >\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component=\"div\">\n        <Box\n          component=\"div\"\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            my: \"auto\",\n            height: \"100%\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <LoginForm />\n        </Box>\n      </Grid>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={6}\n        sx={{\n          height: \"100vh\",\n          backgroundColor: \"#0C0C77\",\n        }}\n      >\n        <div\n          // className=\"login-glass\"\n          style={{\n            height: \"100vh\",\n            backgroundImage: \"url(\" + pattern + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            zIndex: 1000,\n          }}\n        >\n          <Box\n            component=\"div\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              my: \"auto\",\n              height: \"100%\",\n            }}\n          >\n            <img src={logo} alt=\"img\" width={156} />\n            <Typography variant=\"h6\" align=\"center\" color=\"white\">\n              Niger Delta Unity App (NDUA)\n            </Typography>\n          </Box>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/register/index.js",["317","318"],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/notfound/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/history/history_detail.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/product_detail.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/vendor_detail.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/login/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/history/index.js",["319"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport AddHistoryForm from \"../../../../../forms/history/add_history_form\";\nimport EditHistoryForm from \"../../../../../forms/history/update_history_form\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 275,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst HistoryItemCard = (props) => {\n  const { image, title, id, body, summary, item } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteNews = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"history/\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        try {\n          await deleteDoc(doc(db, \"history\", \"\" + id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          enqueueSnackbar(\n            `${error?.message || \"Item not deleted. Try again\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n        }\n      })\n      .catch((error) => {\n        enqueueSnackbar(`${error?.message || \"Item not deleted. Try again\"}`, {\n          variant: \"error\",\n        });\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteNews}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update History\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditHistoryForm\n            setOpen={setOpen}\n            img={image}\n            title={title}\n            id={id}\n            body={body}\n            summary={summary}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete History\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/admin/dashboard/manage-app/history:\" + item?.id,\n              state: {\n                title: item?.title,\n                image: item?.image,\n                body: item?.body,\n                summary: item?.summary,\n                date: item?.createdAt,\n                id: item?.id,\n              },\n            })\n          }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {title?.length > 75 ? title?.substring(0, 75) + \"...\" : title}\n            </Typography>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst History = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [historyList, setHistoryList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"history\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const hist = [];\n      querySnapshot.forEach((doc) => {\n        let dat = doc.data();\n        hist?.push(dat);\n      });\n      setHistoryList(hist);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add History\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddHistoryForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            History\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add History\n        </Button>\n      </div>\n      <br />\n      <div>\n        {historyList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {historyList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <HistoryItemCard\n                  item={item}\n                  id={historyList[index]?.id}\n                  image={historyList[index]?.image}\n                  title={historyList[index]?.title}\n                  body={historyList[index]?.body}\n                  summary={historyList[index]?.summary}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {historyList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/index.js",["320","321","322","323"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport CategoryDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport AddNewsForm from \"../../../../../forms/news/add_news_form\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport Paper from \"@mui/material/Paper\";\nimport DirEditCategoryForm from \"../../../../../forms/directories/edit_category\";\nimport DirAddCategoryForm from \"../../../../../forms/directories/add_category\";\nimport AddVendorForm from \"../../../../../forms/directories/add_vendor\";\nimport EditVendorForm from \"../../../../../forms/directories/edit_vendor\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 386,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst VendorItemCard = (props) => {\n  const {\n    id,\n    image,\n    logo,\n    name,\n    address,\n    category,\n    phone,\n    website,\n    description,\n    opensAt,\n    closesAt,\n    is24hrs,\n    blocked,\n    item,\n  } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteVendor = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"vendor/\" + id);\n    const fileRef2 = ref(storage, \"vendor/img_\" + id);\n\n    deleteObject(fileRef)\n      .then(() => {\n        deleteObject(fileRef2)\n          .then(async () => {\n            // Images deleted now delete from firestore,\n            try {\n              await deleteDoc(doc(db, \"news\", \"\" + id));\n              enqueueSnackbar(`Item deleted successfully`, {\n                variant: \"success\",\n              });\n            } catch (error) {\n              console.log(\"ERR: Del: \", error);\n              enqueueSnackbar(`Item not deleted. Try again`, {\n                variant: \"error\",\n              });\n            }\n          })\n          .catch((err) => {});\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteVendor}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Vendor\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditVendorForm\n            setOpen={setOpen}\n            img={image}\n            id={id}\n            logo={logo}\n            name={name}\n            address={address}\n            phone={phone}\n            website={website}\n            category={category}\n            opensAt={opensAt}\n            closesAt={closesAt}\n            description={description}\n            is24hrs={is24hrs}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete News\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <Avatar alt=\"Passport\" src={logo} className={classes.avatar} />\n            {/* <div className={classes.column}>\n              <Typography variant=\"body2\" fontSize={14}>\n                {authorName}\n              </Typography>\n              <Typography variant=\"body2\" fontSize={13}>\n                {date}\n              </Typography>\n            </div> */}\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/admin/dashboard/manage-app/vendors:\" + item?.id,\n              state: {\n                id: item?.id,\n                name: item?.name,\n                phone: item?.phone,\n                category: item?.category,\n                image: item?.image,\n                description: item?.description,\n                logo: item?.logo,\n                address: item?.address,\n                website: item?.website,\n                blocked: item?.blocked,\n                opensAt: item?.opensAt,\n                closesAt: item?.closesAt,\n                is24hrs: item?.is24hrs,\n                createdAt: item?.createdAt,\n                updatedAt: item?.updatedAt,\n              },\n            })\n          }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {name?.length > 75 ? name?.substring(0, 75) + \"...\" : name}\n            </Typography>\n          </div>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            gutterBottom\n            fontSize={12}\n            color=\"black\"\n            paddingLeft={1}\n            paddingBottom={1}\n          >\n            {category}\n          </Typography>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {description?.length > 150\n              ? description?.substring(0, 150) + \"...\"\n              : description}\n          </Typography>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst VendorCategoryCard = (props) => {\n  const { id, name, updatedAt } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteItem = async () => {\n    setOpenDelete(false);\n    try {\n      await deleteDoc(doc(db, \"directories-categories\", \"\" + id));\n      setOpenDelete(false);\n      enqueueSnackbar(`Item deleted successfully`, { variant: \"success\" });\n    } catch (error) {\n      setOpenDelete(false);\n      enqueueSnackbar(`Item not deleted. Try again`, { variant: \"error\" });\n    }\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteItem}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <DirEditCategoryForm setOpen={setOpen} title={name} id={id} />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Category\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={2}>\n        <CardActionArea\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"body1\" sx={{ marginLeft: 2 }}>\n            {name}\n          </Typography>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Directories = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [openCategory, setOpenCategory] = React.useState(false);\n  const [vendorsList, setVendorsList] = React.useState(null);\n  const [vendorCategories, setVendorCategories] = React.useState([]);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"directories-categories\"));\n    onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setVendorCategories(categories);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"directories-vendors\"));\n    onSnapshot(q, (querySnapshot) => {\n      const vendors = [];\n      querySnapshot.forEach((doc) => {\n        vendors.push(doc.data());\n      });\n      setVendorsList(vendors);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create Vendor\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddVendorForm setOpen={setOpen} />}\n      />\n\n      <CategoryDialog\n        open={openCategory}\n        title=\"Create Category\"\n        handleClose={() => setOpenCategory(false)}\n        bodyComponent={<DirAddCategoryForm setOpen={setOpenCategory} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Directories\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={vendorCategories?.length < 1}\n          // Start vendor page here...\n          onClick={() =>\n            history.push(\"/admin/dashboard/manage-app/vendors/add-new\")\n          }\n        >\n          Vendor\n        </Button>\n      </div>\n      <br />\n      <Paper\n        sx={{\n          padding: 2,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"left\",\n          alignItems: \"stretch\",\n        }}\n      >\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          sx={{ marginRight: 2 }}\n          onClick={() => setOpenCategory(true)}\n        >\n          Category\n        </Button>\n\n        {vendorCategories && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 3 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {vendorCategories?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <VendorCategoryCard\n                  item={item}\n                  id={vendorCategories[index]?.id}\n                  name={vendorCategories[index]?.name}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Paper>\n      <br />\n      <div>\n        {vendorsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {vendorsList?.map((item, index) => (\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                md={6}\n                key={index}\n                onClick={() =>\n                  history.push({\n                    pathname: \"/admin/dashboard/manage-app/vendors:\" + item?.id,\n                    state: {\n                      name: vendorsList[index]?.name,\n                      address: vendorsList[index]?.address,\n                      phone: vendorsList[index]?.phone,\n                      image: vendorsList[index]?.image,\n                      website: vendorsList[index]?.website,\n                      opensAt: vendorsList[index]?.opensAt,\n                      closesAt: vendorsList[index]?.closesAt,\n                      description: vendorsList[index]?.description,\n                      createdAt: vendorsList[index]?.createdAt,\n                      updatedAt: vendorsList[index]?.updatedAt,\n                      category: vendorsList[index]?.category,\n                      logo: vendorsList[index]?.logo,\n                      id: vendorsList[index]?.id,\n                      is24hrs: vendorsList[index]?.is24Hours,\n                    },\n                  })\n                }\n              >\n                <VendorItemCard\n                  item={item}\n                  id={vendorsList[index]?.id}\n                  image={vendorsList[index]?.image}\n                  logo={vendorsList[index]?.logo}\n                  name={vendorsList[index]?.name}\n                  address={vendorsList[index]?.address}\n                  phone={vendorsList[index]?.phone}\n                  website={vendorsList[index]?.website}\n                  opensAt={vendorsList[index]?.opensAt}\n                  closesAt={vendorsList[index]?.closesAt}\n                  description={vendorsList[index]?.description}\n                  createdAt={vendorsList[index]?.createdAt}\n                  updatedAt={vendorsList[index]?.updatedAt}\n                  category={vendorsList[index]?.category}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {vendorsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No vendors found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Directories;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js",["324","325","326","327","328"],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/states/index.js",["329"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport AddStateForm from \"../../../../../forms/states/add_state\";\nimport EditStateForm from \"../../../../../forms/states/edit_state\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 256,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst StateItemCard = (props) => {\n  const { image, name, slogan, id } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  //   const history = useHistory();\n\n  const deleteState = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"states/\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        try {\n          await deleteDoc(doc(db, \"states\", \"\" + id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteState}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update State\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditStateForm\n            setOpen={setOpen}\n            img={image}\n            name={name}\n            id={id}\n            slogan={slogan}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete State\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <CardActionArea>\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={18}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {name?.length > 75 ? name?.substring(0, 75) + \"...\" : name}\n            </Typography>\n            <div className={classes.subRow}>\n              <IconButton\n                aria-label=\"delete\"\n                color=\"primary\"\n                onClick={() => setOpen(true)}\n              >\n                <Edit />\n              </IconButton>\n              <IconButton\n                aria-label=\"delete\"\n                color=\"error\"\n                onClick={() => setOpenDelete(true)}\n              >\n                <Delete />\n              </IconButton>\n            </div>\n          </div>\n\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {slogan?.length > 150 ? slogan?.substring(0, 150) + \"...\" : slogan}\n          </Typography>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst State = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [stateList, setStateList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"states\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const state = [];\n      querySnapshot.forEach((doc) => {\n        state.push(doc.data());\n      });\n      setStateList(state);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Add State\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddStateForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            States\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add State\n        </Button>\n      </div>\n      <br />\n      <div>\n        {stateList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {stateList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <StateItemCard\n                  item={item}\n                  id={stateList[index]?.id}\n                  image={stateList[index]?.image}\n                  name={stateList[index]?.name}\n                  slogan={stateList[index]?.slogan}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {stateList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default State;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/education/index.js",["330","331","332","333","334"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport CategoryDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport Paper from \"@mui/material/Paper\";\nimport EduEditCategoryForm from \"../../../../../forms/education/edit_category\";\nimport AddEducationForm from \"../../../../../forms/education/add_education\";\nimport EduAddCategoryForm from \"../../../../../forms/education/add_category\";\nimport EditEducationForm from \"../../../../../forms/education/edit_education\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 386,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst EducationCard = (props) => {\n  const { id, image, name, category, url, description, item } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteEducation = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"education/\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        try {\n          await deleteDoc(doc(db, \"news\", \"\" + id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((error) => {\n        enqueueSnackbar(`${error?.message || \"Check your internet.\"}`, {\n          variant: \"error\",\n        });\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteEducation}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Education Listing\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditEducationForm\n            setOpen={setOpen}\n            img={image}\n            id={id}\n            name={name}\n            category={category}\n            url={url}\n            description={description}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Education Listing\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n        //   onClick={() =>\n        //     history.push({\n        //       pathname: \"/admin/dashboard/manage-app/education:\" + item?.id,\n        //       state: {\n        //         id: item?.id,\n        //         name: item?.name,\n        //         category: item?.category,\n        //         image: item?.image,\n        //         description: item?.description,\n        //         url: item?.url,\n        //         createdAt: item?.createdAt,\n        //         updatedAt: item?.updatedAt,\n        //       },\n        //     })\n        //   }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {name?.length > 75 ? name?.substring(0, 75) + \"...\" : name}\n            </Typography>\n          </div>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            gutterBottom\n            fontSize={12}\n            color=\"black\"\n            paddingLeft={1}\n            paddingBottom={1}\n          >\n            {category}\n          </Typography>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {description?.length > 150\n              ? description?.substring(0, 150) + \"...\"\n              : description}\n          </Typography>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst CategoryCard = (props) => {\n  const { id, name } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteItem = async () => {\n    setOpenDelete(false);\n    try {\n      await deleteDoc(doc(db, \"education-categories\", \"\" + id));\n      setOpenDelete(false);\n      enqueueSnackbar(`Item deleted successfully`, { variant: \"success\" });\n    } catch (error) {\n      setOpenDelete(false);\n      enqueueSnackbar(`Item not deleted. Try again`, { variant: \"error\" });\n    }\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteItem}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EduEditCategoryForm setOpen={setOpen} title={name} id={id} />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Category\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={2}>\n        <CardActionArea\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"body1\" sx={{ marginLeft: 2 }}>\n            {name}\n          </Typography>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Education = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [openCategory, setOpenCategory] = React.useState(false);\n  const [educationList, setEducationList] = React.useState(null);\n  const [educationCategories, setEducationCategories] = React.useState([]);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"education-categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setEducationCategories(categories);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"education\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const edu = [];\n      querySnapshot.forEach((doc) => {\n        edu.push(doc.data());\n      });\n      setEducationList(edu);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create Education Listing\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddEducationForm setOpen={setOpen} />}\n      />\n\n      <CategoryDialog\n        open={openCategory}\n        title=\"Create Category\"\n        handleClose={() => setOpenCategory(false)}\n        bodyComponent={<EduAddCategoryForm setOpen={setOpenCategory} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Education\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={educationCategories?.length < 1}\n          onClick={() => setOpen(true)}\n        >\n          Education\n        </Button>\n      </div>\n      <br />\n      <Paper\n        sx={{\n          padding: 2,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"left\",\n          alignItems: \"stretch\",\n        }}\n      >\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          sx={{ marginRight: 2 }}\n          onClick={() => setOpenCategory(true)}\n        >\n          Category\n        </Button>\n\n        {educationCategories && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 3 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {educationCategories?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <CategoryCard\n                  item={item}\n                  id={educationCategories[index]?.id}\n                  name={educationCategories[index]?.name}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Paper>\n      <br />\n      <div>\n        {educationList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {educationList?.map((item, index) => (\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                md={6}\n                key={index}\n                onClick={() =>\n                  history.push({\n                    pathname:\n                      \"/admin/dashboard/manage-app/education:\" + item?.id,\n                    state: {\n                      name: educationList[index]?.name,\n                      url: educationList[index]?.url,\n                      image: educationList[index]?.image,\n                      description: educationList[index]?.description,\n                      createdAt: educationList[index]?.createdAt,\n                      updatedAt: educationList[index]?.updatedAt,\n                      category: educationList[index]?.category,\n                      id: educationList[index]?.id,\n                    },\n                  })\n                }\n              >\n                <EducationCard\n                  item={item}\n                  id={educationList[index]?.id}\n                  image={educationList[index]?.image}\n                  name={educationList[index]?.name}\n                  url={educationList[index]?.url}\n                  description={educationList[index]?.description}\n                  createdAt={educationList[index]?.createdAt}\n                  updatedAt={educationList[index]?.updatedAt}\n                  category={educationList[index]?.category}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {educationList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No data found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Education;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/contact-us/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/terms-of-service/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/privacy-policy/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/products.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/products/add_product.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js",["335"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext/\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditNewsForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title,\n    img,\n    category,\n    body,\n    summary,\n    authorName,\n    authorPhoto,\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    category: category,\n    authorName: authorName,\n    authorPhoto: \"\",\n    summary: summary,\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n\n  const [newsBody, setNewsBody] = React.useState(body);\n  const [isError, setIsError] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: newsBody,\n              summary: formValues.summary,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewAuthorPhoto = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: newsBody,\n              summary: formValues.summary,\n              updatedAt: timeNow,\n              authorPhoto: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateNews = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      authorName: formValues.authorName ? formValues.authorName : authorName,\n      category: formValues.category ? formValues.category : category,\n      body: newsBody,\n      summary: formValues.summary ? formValues.summary : summary,\n    });\n    if (!previewImage && !previewAuthor) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"news\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          authorName: formValues.authorName,\n          category: formValues.category,\n          body: newsBody,\n          summary: formValues.summary,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`News title updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else if (!previewImage && previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else {\n      const fileRef = ref(storage, \"news/\" + id);\n      const fileRef2 = ref(storage, \"news/img_\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n              let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"news\", \"\" + id);\n                        await updateDoc(mRef, {\n                          title: formValues.title,\n                          authorName: formValues.authorName,\n                          category: formValues.category,\n                          body: newsBody,\n                          summary: formValues.summary,\n                          updatedAt: timeNow,\n                          image: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"news\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    authorPhoto: download,\n                                  });\n                                  setOpen(false);\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `Newsfeed updated successfully`,\n                                    {\n                                      variant: \"success\",\n                                    }\n                                  );\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(`${error?.message}`, {\n                                    variant: \"error\",\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {}\n                    }\n                  );\n                }\n              );\n            })\n            .catch((err) => {});\n          // setIsLoading(false);\n          // uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category ? formValues.category : category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n        <RichText\n          value={newsBody}\n          setValue={setNewsBody}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n        <br />\n        <TextValidator\n          className={classes.mb}\n          id=\"summary\"\n          multiLine\n          rows={2}\n          rowsMax={2}\n          label=\"News summary\"\n          placeholder=\"Type summary here...\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News summary is required\"]}\n        />\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  formValues.authorName === \" \"\n                    ? authorName\n                    : !formValues.authorName\n                    ? \"\"\n                    : formValues.authorName\n                }\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                alt=\"Author\"\n                src={previewAuthor ? previewAuthor : authorPhoto}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditNewsForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/dialogs/custom-dialog.js",["336","337","338"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Modal from \"@mui/material/Modal\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    //top: `${top}%`,\n    margin: \"auto\",\n    minWidth: 200,\n    //left: `${left}%`,\n    //transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // minWidth: '20%',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    borderRadius: 16,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CustomDialog = (props) => {\n  const { title, open, handleClose, bodyComponent } = props;\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography\n          variant=\"h6\"\n          style={{ fontFamily: \"roboto\", fontWeight: \"600\" }}\n        >\n          {title}\n        </Typography>\n\n        <IconButton onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <br />\n      {bodyComponent}\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        disablePortal={true}\n        disableEscapeKeyDown={true}\n        // disableBackdropClick={false}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default CustomDialog;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/history/update_history_form.js",["339"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport RichText from \"../../components/misc/richtext/\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditHistoryForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title, img, body, summary } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    summary: summary,\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const [content, setContent] = React.useState(body);\n  const [isError, setIsError] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  //   const [categoriesList, setCategoriesList] = React.useState(null);\n  const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"history/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"history\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              body: content,\n              summary: formValues.summary,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`History updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const updateHistory = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      body: content,\n      summary: formValues.summary ? formValues.summary : summary,\n    });\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"history\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          body: content,\n          summary: formValues.summary,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`History updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"history/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          enqueueSnackbar(`${error?.message}`, {\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateHistory}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Title is required\"]}\n        />\n\n        <RichText\n          value={content}\n          setValue={setContent}\n          error={isError}\n          setError={setIsError}\n          setIsStartedFilling={setIsStartedFilling}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          label=\"Summary\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.summary}\n          onChange={handleChange}\n          name=\"summary\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Brief summary is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditHistoryForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js",["340"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { CameraAlt } from \"@mui/icons-material\";\nimport Edit from \"@mui/icons-material/Edit\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst timesOpen = [\n  \"05:00 AM\",\n  \"06:00 AM\",\n  \"07:00 AM\",\n  \"08:00 AM\",\n  \"09:00 AM\",\n  \"10:00 AM\",\n  \"11:00 AM\",\n  \"12:00 PM\",\n];\n\nconst timesClosed = [\n  \"02:00 PM\",\n  \"03:00 PM\",\n  \"04:00 PM\",\n  \"05:00 PM\",\n  \"06:00 PM\",\n  \"07:00 PM\",\n  \"08:00 PM\",\n  \"09:00 PM\",\n  \"10:00 PM\",\n  \"11:00 PM\",\n  \"12:00 AM\",\n];\n\nconst EditVendorForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    name,\n    category,\n    address,\n    description,\n    phone,\n    website,\n    opensAt,\n    closesAt,\n    is24Hours,\n  } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    name: name,\n    image: \"\",\n    logo: \"\",\n    category: category,\n    address: address,\n    description: description,\n    phone: phone,\n    website: website,\n    opensAt: opensAt,\n    closesAt: closesAt,\n  });\n\n  const [file, setFile] = React.useState(null);\n  const [logoFile, setLogoFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewLogo, setPreviewLogo] = React.useState(\"\");\n  const [is24Hrs, setIs24Hrs] = React.useState(is24Hours);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"logo\") {\n      setLogoFile(e.target.files[0]);\n      setPreviewLogo(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        logo: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(`${error.message || \"\"}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"vendors\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              name: formValues.name,\n              address: formValues.address,\n              description: formValues.description,\n              category: formValues.category,\n              phone: formValues.phone,\n              website: formValues.website,\n              opensAt: formValues.opensAt,\n              closesAt: formValues.closesAt,\n              is24Hrs: is24Hrs,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Vendor updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message || \"\"}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewLogo = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"vendors/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(`${error.message || \"Check internet\"}`, {\n          variant: \"error\",\n        });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"vendors\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              name: formValues.name,\n              address: formValues.address,\n              description: formValues.description,\n              category: formValues.category,\n              phone: formValues.phone,\n              website: formValues.website,\n              opensAt: formValues.opensAt,\n              closesAt: formValues.closesAt,\n              is24Hrs: is24Hrs,\n              updatedAt: timeNow,\n              logo: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Vendor updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message || \"Check your network\"}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateVendor = async (e) => {\n    setIsLoading(true);\n    // setFormValues({\n    //   title: formValues.title ? formValues.title : title,\n    //   subTitle: formValues.subTitle ? formValues.subTitle : subTitle,\n    //   authorName: formValues.authorName ? formValues.authorName : authorName,\n    //   category: formValues.category ? formValues.category : category,\n    //   body: formValues.body ? formValues.body : body,\n    // });\n    if (!previewImage && !previewLogo) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"vendors\", \"\" + id);\n        await updateDoc(mRef, {\n          name: formValues.name,\n          address: formValues.address,\n          description: formValues.description,\n          category: formValues.category,\n          phone: formValues.phone,\n          website: formValues.website,\n          opensAt: formValues.opensAt,\n          closesAt: formValues.closesAt,\n          is24Hrs: is24Hrs,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Vendor updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message || \"Check internet connection\"}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    } else if (!previewImage && previewLogo) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"vendors/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewLogo();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n        });\n    } else {\n      const fileRef = ref(storage, \"vendors/\" + id);\n      const fileRef2 = ref(storage, \"vendors/img_\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n              let storageRef2 = ref(\n                storage,\n                \"vendors/img_\" + timeNow.getTime()\n              );\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, logoFile);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  enqueueSnackbar(`${error?.message || \"Check your network\"}`, {\n                    variant: \"error\",\n                  });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"vendors\", \"\" + id);\n                        await updateDoc(mRef, {\n                          name: formValues.name,\n                          address: formValues.address,\n                          description: formValues.description,\n                          category: formValues.category,\n                          phone: formValues.phone,\n                          website: formValues.website,\n                          opensAt: formValues.opensAt,\n                          closesAt: formValues.closesAt,\n                          is24Hrs: is24Hrs,\n                          updatedAt: timeNow,\n                          image: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message || \"\"}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"vendors\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    logo: download,\n                                  });\n                                  setOpen(false);\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `Vendor updated successfully`,\n                                    {\n                                      variant: \"success\",\n                                    }\n                                  );\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `${\n                                      error?.message ||\n                                      \"Check your internet connection\"\n                                    }`,\n                                    {\n                                      variant: \"error\",\n                                    }\n                                  );\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {\n                        setIsLoading(false);\n                        enqueueSnackbar(\n                          `${error?.message || \"Check your internet\"}`,\n                          {\n                            variant: \"error\",\n                          }\n                        );\n                      }\n                    }\n                  );\n                }\n              );\n            })\n            .catch((error) => {\n              setIsLoading(false);\n              enqueueSnackbar(`${error?.message || \"\"}`, {\n                variant: \"error\",\n              });\n            });\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          enqueueSnackbar(`${error?.message || \"\"}`, {\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateVendor}>\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          style={{ display: \"none\" }}\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Featured image is required\"]}\n          helperText=\"Featured image\"\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"logo\"\n          size=\"small\"\n          variant=\"outlined\"\n          style={{ display: \"none\" }}\n          value={formValues.logo}\n          name=\"logo\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg,\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's logo is required\"]}\n          helperText=\"Vendor's logo\"\n        />\n\n        <label\n          htmlFor=\"image\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: 144,\n            width: 420,\n            backgroundImage: \"url(\" + previewImage + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            marginBottom: 24,\n          }}\n          typeof=\"file\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginTop: \"auto\",\n              marginBottom: -32,\n            }}\n          >\n            <label\n              htmlFor=\"logo\"\n              style={{\n                zIndex: 1000,\n                display: \"flex\",\n                flexDirection: \"row\",\n                padding: 5,\n              }}\n            >\n              <Avatar\n                variant=\"circular\"\n                alt=\"Author\"\n                src={previewLogo}\n                className={classes.logo}\n              />\n              <label htmlFor=\"logo\" style={{ marginTop: 16, marginLeft: -10 }}>\n                <div className={classes.subRow}>\n                  <CameraAlt\n                    style={{ color: \"white\", zIndex: 10000 }}\n                    fontSize=\"small\"\n                  />\n                </div>\n              </label>\n            </label>\n            <label htmlFor=\"image\" style={{ marginBottom: 24, padding: 8 }}>\n              <div className={classes.subRow}>\n                <Edit color=\"primary\" fontSize=\"small\" />\n                <Typography color=\"blue\">Edit</Typography>\n              </div>\n            </label>\n          </div>\n        </label>\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <SelectValidator\n                className={classes.mb}\n                value={formValues.category}\n                onChange={handleChange}\n                label=\"Category\"\n                name=\"category\"\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's category is required\"]}\n              >\n                {(categoriesList ?? [])?.map((item, index) => (\n                  <MenuItem key={index} value={item?.name ?? \"\"}>\n                    {item?.name ?? \"\"}\n                  </MenuItem>\n                ))}\n              </SelectValidator>\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"name\"\n                label=\"Vendor name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.name}\n                onChange={handleChange}\n                name=\"name\"\n                required\n                fullWidth\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's name is required\"]}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"address\"\n          label=\"Vendor address\"\n          size=\"small\"\n          variant=\"outlined\"\n          required\n          value={formValues.address}\n          onChange={handleChange}\n          name=\"address\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's address is required\"]}\n        />\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"phone\"\n                label=\"Phone number\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.phone}\n                onChange={handleChange}\n                name=\"phone\"\n                fullWidth\n                required\n                type=\"phone\"\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's phone number is required\"]}\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"website\"\n                label=\"Website (Optional)\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.website}\n                onChange={handleChange}\n                name=\"website\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={4}\n          rowsMax={5}\n          placeholder=\"Briefly describe vendor\"\n          name=\"description\"\n          label=\"Description\"\n          value={formValues.description}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's description is required\"]}\n        />\n\n        <div className={classes.row}>\n          {!is24Hrs ? (\n            <Grid container spacing={1} padding={0} marginBottom={0}>\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <SelectValidator\n                    className={classes.mb}\n                    value={formValues.opensAt}\n                    onChange={handleChange}\n                    label=\"Opens By\"\n                    name=\"opensAt\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Opening time is required\"]}\n                  >\n                    {(timesOpen ?? [])?.map((item, index) => (\n                      <MenuItem key={index} value={item ?? \"\"}>\n                        {item ?? \"\"}\n                      </MenuItem>\n                    ))}\n                  </SelectValidator>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <SelectValidator\n                    className={classes.mb}\n                    value={formValues.closesAt}\n                    onChange={handleChange}\n                    label=\"Closes By\"\n                    name=\"closesAt\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Closing time is required\"]}\n                  >\n                    {(timesClosed ?? [])?.map((item, index) => (\n                      <MenuItem key={index} value={item ?? \"\"}>\n                        {item ?? \"\"}\n                      </MenuItem>\n                    ))}\n                  </SelectValidator>\n                </div>\n              </Grid>\n            </Grid>\n          ) : (\n            <Typography>Always open 24/7</Typography>\n          )}\n          <div className={classes.subRow}>\n            <Typography fontSize={14}>Always open</Typography>\n            <Checkbox value={is24Hrs} onChange={() => setIs24Hrs(!is24Hrs)} />\n          </div>\n        </div>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditVendorForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/privacy-policy/update_policy_form.js",["341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\n// const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdatePolicyForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, body, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    body: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n  const updatePolicy = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      body: formValues.body ? formValues.body : body,\n    });\n    // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"privacy-policy\");\n    try {\n      await updateDoc(mRef, {\n        body: formValues.body,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Privacy policy updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Error updating privacy policy\"}`, {\n        variant: \"error\",\n      });\n    }\n    // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n  };\n\n  return (\n    <div style={{ width: 512 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {/* {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />} */}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updatePolicy}>\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={8}\n          rowsMax={12}\n          placeholder=\"Type policy here\"\n          name=\"body\"\n          label=\"Privacy policy\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Privacy policy is required\"]}\n        />\n        {/* <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        /> */}\n\n        {/* <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div> */}\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdatePolicyForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/add_project_form.js",["358"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  query,\n  onSnapshot,\n  collection,\n  updateDoc,\n  arrayUnion,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport Dropzone from \"react-dropzone\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\n// import RichText from \"../../components/misc/richtext\";\n// import { FormatColorResetRounded } from \"@mui/icons-material\";\nimport QuillEditor from \"../../components/misc/richtext/quill\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddProjectForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    state: \"\",\n    desc: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [statesList, setStatesList] = React.useState(null);\n  const [stateId, setStateId] = React.useState(null);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [files, setFiles] = React.useState([]);\n  const [fileNames, setFileNames] = React.useState([]);\n  const [urls, setUrls] = React.useState([]);\n  const [body, setBody] = React.useState(null);\n  // const [isError, setIsError] = React.useState(false);\n  // const [isStartedFilling, setIsStartedFilling] = React.useState(false);\n  const handleDrop = (acceptedFiles) => {\n    setFileNames(acceptedFiles.map((file) => file.name));\n    setFiles(acceptedFiles);\n  };\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"states\"));\n    onSnapshot(q, (querySnapshot) => {\n      const states = [];\n      querySnapshot.forEach((doc) => {\n        states.push(doc.data());\n      });\n      setStatesList(states);\n    });\n  }, []);\n\n  const fileValidator = (file) => {\n    if (!file || file?.length < 1) {\n      return {\n        code: \"name-too-large\",\n        message: `You must select at least one file!`,\n      };\n    }\n    return null;\n  };\n\n  const handleChange = async (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (name === \"state\") {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n      let item = await statesList?.find((item) => item?.name === value);\n      setStateId(item?.id);\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const handleUpload = (tnw) => {\n    const promises = [];\n    files?.map((image) => {\n      let storageRef = ref(storage, `projects/${image?.name}`);\n      let uploadTask = uploadBytesResumable(storageRef, files);\n      promises.push(uploadTask);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n        },\n        async () => {\n          await getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            setIsUploading(false);\n            setIsLoading(true);\n            setUrls(urls.push(downloadURL));\n          });\n        }\n      );\n    });\n\n    Promise.all(promises)\n      .then(async () => {\n        // Now update the images field\n        console.log(\"URLS\", urls);\n        try {\n          const mRef = doc(db, \"projects\", \"\" + tnw);\n          await updateDoc(mRef, {\n            images: arrayUnion(...urls),\n          });\n\n          setOpen(false);\n          setIsLoading(false);\n          enqueueSnackbar(`New project added successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(\n            `${error?.message || \"Check your internet connection\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const createProject = (e) => {\n    setIsUploading(true);\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n\n    let storageRef = ref(storage, \"projects/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref)\n          .then((downloadURL) => {\n            setIsUploading(false);\n            setIsLoading(true);\n            setDoc(doc(db, \"projects\", `${timeNow.getTime()}`), {\n              id: timeNow.getTime(),\n              title: formValues.title,\n              image: downloadURL,\n              images: [],\n              state: formValues.state,\n              stateId: stateId,\n              description: body,\n              createdAt: timeNow,\n              updatedAt: timeNow,\n            })\n              .then((res) => {\n                //Now upload project progress images here\n                handleUpload(timeNow.getTime());\n              })\n              .catch((error) => {\n                setIsUploading(false);\n                setIsLoading(false);\n                enqueueSnackbar(`${error?.message}`, {\n                  variant: \"error\",\n                });\n              });\n          })\n          .catch((error) => {\n            setIsUploading(false);\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createProject}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          id=\"state\"\n          className={classes.mb}\n          value={formValues.state}\n          onChange={handleChange}\n          label=\"Project state\"\n          name=\"state\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project state is required\"]}\n        >\n          {(statesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.name ?? \"\"}>\n              {item?.name ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Project title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Project title is required\"]}\n        />\n\n        <QuillEditor setValue={setBody} placeholder={\"Type description here\"} />\n\n        {/* <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Project description here\"\n          name=\"desc\"\n          label=\"Project description\"\n          value={formValues.desc}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project description is required\"]}\n        /> */}\n\n        <Dropzone\n          onDrop={handleDrop}\n          validator={fileValidator}\n          accept={\n            \"image/png, image/jpg, image/jpeg, application/pdf, application/mspowerpoint, application/powerpoint, application/vnd.ms-powerpoint, application/x-mspowerpoint\"\n          }\n        >\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps({ className: classes.dropZone })}>\n              <input {...getInputProps()} />\n              {files?.length > 0 ? (\n                <div className={classes.row}>\n                  <div>\n                    <List disablePadding>\n                      {fileNames.map((fileName) => (\n                        <ListItem disableGutters divider key={fileName}>\n                          {fileName}\n                        </ListItem>\n                      ))}\n                    </List>\n                  </div>\n                  <Typography padding={2} color=\"blue\">\n                    Add more files\n                  </Typography>\n                </div>\n              ) : (\n                <p>Add project images, Maximum of 5 images</p>\n              )}\n            </div>\n          )}\n        </Dropzone>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Create Project\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddProjectForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/update_project_form.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/richtext/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/terms-of-service/index.js",["359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\n// const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdateTermsOfServiceForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, body, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    body: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n  const updateTerms = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      body: formValues.body ? formValues.body : body,\n    });\n    // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"terms-of-service\");\n    try {\n      await updateDoc(mRef, {\n        body: formValues.body,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Terms of service updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(\n        `${error?.message || \"Error updating terms of service\"}`,\n        {\n          variant: \"error\",\n        }\n      );\n    }\n    // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n  };\n\n  return (\n    <div style={{ width: 512 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {/* {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />} */}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateTerms}>\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={8}\n          rowsMax={12}\n          placeholder=\"Type terms of service here\"\n          name=\"body\"\n          label=\"Terms of service\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Terms of service is required\"]}\n        />\n        {/* <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        /> */}\n\n        {/* <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div> */}\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateTermsOfServiceForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/contact-us/index.js",["376","377","378","379"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\n// const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdateContactUsForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, phone, email, website, facebook, instagram } = props;\n  const [formValues, setFormValues] = React.useState({\n    phone: \" \",\n    email: \" \",\n    website: \" \",\n    facebook: \" \",\n    instagram: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  //   const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n  const updateContactInfo = async (e) => {\n    setIsLoading(true);\n    // setFormValues({\n    //   phone: formValues.phone === \" \" ? phone : formValues.phone,\n    //   email: formValues.email === \" \" ? email : formValues.email,\n    //   website: formValues.website === \" \" ? website : formValues.website,\n    //   facebook: formValues.facebook === \" \" ? facebook : formValues.facebook,\n    //   instagram:\n    //     formValues.instagram === \" \" ? instagram : formValues.instagram,\n    // });\n    // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"contact-us\");\n    try {\n      await updateDoc(mRef, {\n        phone: formValues.phone === \" \" ? phone : formValues.phone,\n        email: formValues.email === \" \" ? email : formValues.email,\n        website: formValues.website === \" \" ? website : formValues.website,\n        facebook: formValues.facebook === \" \" ? facebook : formValues.facebook,\n        instagram:\n          formValues.instagram === \" \" ? instagram : formValues.instagram,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Contact info updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Error updating Ccntact info\"}`, {\n        variant: \"error\",\n      });\n    }\n    // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n  };\n\n  return (\n    <div style={{ width: 512 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {/* {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />} */}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateContactInfo}>\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"phone\"\n          label=\"Phone\"\n          value={\n            formValues.phone === \" \"\n              ? phone\n              : !formValues.phone\n              ? \"\"\n              : formValues.phone\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Phone number is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"email\"\n          label=\"Email address\"\n          value={\n            formValues.email === \" \"\n              ? email\n              : !formValues.email\n              ? \"\"\n              : formValues.email\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"website\"\n          label=\"Website\"\n          value={\n            formValues.website === \" \"\n              ? website\n              : !formValues.website\n              ? \"\"\n              : formValues.website\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Website is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"facebook\"\n          label=\"Facebook\"\n          value={\n            formValues.facebook === \" \"\n              ? facebook\n              : !formValues.facebook\n              ? \"\"\n              : formValues.facebook\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Facebook is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"instagram\"\n          label=\"Instagram\"\n          value={\n            formValues.instagram === \" \"\n              ? instagram\n              : !formValues.instagram\n              ? \"\"\n              : formValues.instagram\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Instagram is required\"]}\n        />\n\n        {/* <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        /> */}\n\n        {/* <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div> */}\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateContactUsForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/domain/service/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/add_news_form.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_vendor.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js",["380","381","382"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\nimport placeholder from \"../../../assets/images/placeholder.png\";\nimport { Box } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\nimport { Avatar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport QuillEd from \"../../components/misc/richtext/quill\";\nimport Editor from \"../../components/misc/richtext/quill\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst DirAddCategoryForm = (props) => {\n  let { setOpen } = props;\n  const classes = useStyles();\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(placeholder);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const [v, setV] = React.useState(null);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    }\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  React.useEffect(() => {\n    console.log(\"de-value:: \", v);\n  }, [v]);\n\n  const createCategory = (e) => {\n    const timeNow = new Date();\n    let storageRef = ref(\n      storage,\n      \"directories-categories/\" + timeNow.getTime()\n    );\n    let uploadTask = uploadBytesResumable(storageRef, file);\n\n    setIsUploading(true);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(progress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async (download) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"directories-categories\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            name: formValues.title,\n            image: download,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New category added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n              enqueueSnackbar(\n                `${error?.message || \"Check your internet connnection!\"}`,\n                {\n                  variant: \"error\",\n                }\n              );\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createCategory}>\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        />\n\n        <div>\n          {previewImage && (\n            <Avatar\n              variant=\"rounded\"\n              alt=\"Passport\"\n              src={previewImage}\n              className={classes.image}\n            />\n          )}\n        </div>\n\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n\n        <br />\n        {/* <QuillEd value={v} setValue={setV} label=\"Ttype hia...\" /> */}\n        {/* <Editor\n          placeholder={\"Write something or insert a heart ♥\"}\n          setValue={setV}\n        /> */}\n\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default DirAddCategoryForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_category.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/edit_education.js",["383","384","385","386","387"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { Checkbox, CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { CameraAlt } from \"@mui/icons-material\";\nimport Edit from \"@mui/icons-material/Edit\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditEducationForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title, category, url, description, img } = props;\n\n  const [formValues, setFormValues] = React.useState({\n    title: title,\n    image: \"\",\n    category: category,\n    url: url,\n    description: description,\n  });\n\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"education-categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"education/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(\n          `${error.message || \"Check your internet connection\"}`,\n          { variant: \"error\" }\n        );\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"education\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              url: formValues.url,\n              description: formValues.description,\n              category: formValues.category,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Data updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(\n              `${error?.message || \"Check your internet connection\"}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      }\n    );\n  };\n\n  const updateEducation = async (e) => {\n    setIsLoading(true);\n\n    if (!previewImage) {\n      //No image is changed. So update all text\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"education\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          url: formValues.url,\n          description: formValues.description,\n          category: formValues.category,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Data updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message || \"Check internet connection\"}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"education/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          enqueueSnackbar(`${error?.message || \"Check internet connection\"}`, {\n            variant: \"error\",\n          });\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateEducation}>\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          style={{ display: \"none\" }}\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Featured image is required\"]}\n          helperText=\"Featured image\"\n        />\n\n        <label\n          htmlFor=\"image\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: 144,\n            width: 420,\n            backgroundImage: \"url(\" + previewImage + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            marginBottom: 24,\n          }}\n          typeof=\"file\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"end\",\n              alignItems: \"center\",\n              marginTop: \"auto\",\n              marginBottom: -32,\n            }}\n          >\n            <label htmlFor=\"image\" style={{ marginBottom: 24, padding: 8 }}>\n              <div className={classes.subRow}>\n                <Edit color=\"primary\" fontSize=\"small\" />\n                <Typography color=\"blue\">Edit</Typography>\n              </div>\n            </label>\n          </div>\n        </label>\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <SelectValidator\n                className={classes.mb}\n                value={formValues.category}\n                onChange={handleChange}\n                label=\"Category\"\n                name=\"category\"\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                validators={[\"required\"]}\n                errorMessages={[\"Category is required\"]}\n              >\n                {(categoriesList ?? [])?.map((item, index) => (\n                  <MenuItem key={index} value={item?.name ?? \"\"}>\n                    {item?.name ?? \"\"}\n                  </MenuItem>\n                ))}\n              </SelectValidator>\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                label=\"Title\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.title}\n                onChange={handleChange}\n                name=\"title\"\n                required\n                fullWidth\n                validators={[\"required\"]}\n                errorMessages={[\"Title is required\"]}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          label=\"Website link (Optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          required\n          value={formValues.url}\n          onChange={handleChange}\n          name=\"url\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={4}\n          rowsMax={5}\n          placeholder=\"Briefly describe here...\"\n          name=\"description\"\n          label=\"Description\"\n          value={formValues.description}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Description is required\"]}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditEducationForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/add_education.js",["388"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\n// import Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport placeholder from \"../../../assets/images/placeholder.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: \"100%\",\n    height: 156,\n  },\n  logo: {\n    margin: \"0px auto 15px auto\",\n    width: 48,\n    height: 48,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddEducationForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    category: \"\",\n    url: \"\",\n    description: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(placeholder);\n  const { enqueueSnackbar } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"education-categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createEducation = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"education/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        enqueueSnackbar(\n          `${error?.message || \"Check your internet connection\"}`,\n          { variant: \"error\" }\n        );\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"education\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            category: formValues.category,\n            url: formValues.url,\n            description: formValues.description,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`Data added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n              enqueueSnackbar(\n                `${error?.message || \"Check your internet connection\"}`,\n                {\n                  variant: \"error\",\n                }\n              );\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createEducation}>\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          style={{ display: \"none\" }}\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Featured image is required\"]}\n          helperText=\"Featured image\"\n        />\n\n        <label\n          htmlFor=\"image\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: 144,\n            width: 420,\n            backgroundImage: \"url(\" + previewImage + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            marginBottom: 24,\n          }}\n          typeof=\"file\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"end\",\n              alignItems: \"center\",\n              marginTop: \"auto\",\n              marginBottom: -32,\n            }}\n          >\n            <label htmlFor=\"image\" style={{ marginBottom: 24, padding: 8 }}>\n              <div className={classes.subRow}>\n                <EditIcon color=\"primary\" fontSize=\"small\" />\n                <Typography color=\"blue\">Edit</Typography>\n              </div>\n            </label>\n          </div>\n        </label>\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <SelectValidator\n                className={classes.mb}\n                value={formValues.category}\n                onChange={handleChange}\n                label=\"Category\"\n                name=\"category\"\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                validators={[\"required\"]}\n                errorMessages={[\"Education category is required\"]}\n              >\n                {(categoriesList ?? [])?.map((item, index) => (\n                  <MenuItem key={index} value={item?.name ?? \"\"}>\n                    {item?.name ?? \"\"}\n                  </MenuItem>\n                ))}\n              </SelectValidator>\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"title\"\n                label=\"Title\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.title}\n                onChange={handleChange}\n                name=\"title\"\n                required\n                fullWidth\n                validators={[\"required\"]}\n                errorMessages={[\"Title is required\"]}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          label=\"Website link (Optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.url}\n          onChange={handleChange}\n          name=\"url\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={3}\n          rowsMax={4}\n          placeholder=\"Briefly describe here...\"\n          name=\"description\"\n          label=\"Description\"\n          value={formValues.description}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Description is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddEducationForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/edit_category.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/education/add_category.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/states/edit_state.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/states/add_state.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/history/add_history_form.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/project_item.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/news_item.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/newsfeeds.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/categories/categories.js",["389","390","391","392"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport CategoryForm from \"../../../../../forms/category/new_category_form\";\nimport EditCategoryForm from \"../../../../../forms/category/update_category\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { display } from \"@mui/system\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CategoryItem = (props) => {\n  const { image, name, id } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteCategory = () => {\n    const fileRef = ref(storage, \"categories/img_\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // File deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"categories\", \"\" + id));\n          setOpenDelete(false);\n          enqueueSnackbar(`Item deleted successfully`, { variant: \"success\" });\n        } catch (error) {\n          setOpenDelete(false);\n          enqueueSnackbar(`Item not deleted. Try again`, { variant: \"error\" });\n        }\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteCategory}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditCategoryForm setOpen={setOpen} img={image} name={name} id={id} />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Category\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3}>\n        <CardMedia image={image} className={classes.cardMedia} />\n        <Divider />\n        <div className={classes.row}>\n          <Typography fontSize={18} color=\"black\" padding={1}>\n            {name}\n          </Typography>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n      </Card>\n    </>\n  );\n};\n\nconst Categories = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n      console.log(\"Current cities in CA: \", categories);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create New Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<CategoryForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Categories\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Category\n        </Button>\n      </div>\n      <br />\n      <div className={classes.main}>\n        {categoriesList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {categoriesList?.map((_, index) => (\n              <Grid item xs={2} sm={4} md={4} key={index}>\n                <CategoryItem\n                  id={categoriesList[index]?.id}\n                  image={categoriesList[index]?.url}\n                  name={categoriesList[index].title}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer2.js",["393","394","395"],"import React from \"react\";\nimport { Drawer as MUIDrawer } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport DashBoardIcon from \"@mui/icons-material/DashboardOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport logo from \"../../../../assets/images/logo_white.png\";\n\nimport { useSnackbar } from \"notistack\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { auth } from \"../../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../../data/store/slice/user\";\n\nimport pattern from \"../../../../assets/images/pattern.png\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"275px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: \"#0C0C77\",\n  },\n  toolbar: theme.mixins.toolbar,\n  listRoot: {\n    width: \"100%\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Drawer2 = (props) => {\n  const classes = useStyles();\n  const { history } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  // const { userStatus, userData } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const container =\n    props.window !== undefined ? () => window().document.body : undefined;\n\n  const drawerItems = [\n    {\n      text: \"Dashboard\",\n      icon: (\n        <DashBoardIcon\n          style={\n            selectedIndex === 0 ? { color: \"white\" } : { color: \"#4C3992\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/\",\n    },\n    {\n      text: \"Manage App\",\n      icon: (\n        <SchoolOutlinedIcon\n          style={\n            selectedIndex === 1 ? { color: \"white\" } : { color: \"#4C3992\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-app\",\n    },\n    {\n      text: \"Manage Users\",\n      icon: (\n        <PeopleOutlinedIcon\n          style={\n            selectedIndex === 2 ? { color: \"white\" } : { color: \"#4C3992\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-users\",\n    },\n    {\n      text: \"Profile\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"white\" } : { color: \"#4C3992\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/profile\",\n    },\n  ];\n\n  let picSize, cornerSize;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const md = useMediaQuery(theme.breakpoints.only(\"md\"));\n  if (xs) {\n    cornerSize = 76;\n    picSize = 70;\n  } else if (sm) {\n    cornerSize = 96;\n    picSize = 90;\n  } else if (md) {\n    cornerSize = 116;\n    picSize = 110;\n  } else {\n    cornerSize = 136;\n    picSize = 130;\n  }\n\n  const handleListItemClick = (to, index) => {\n    history.push(to);\n    setSelectedIndex(index);\n  };\n\n  const signOut = async () => {\n    props.handleBackdrop(true);\n    try {\n      await auth.signOut();\n      dispatch(setUserData(null));\n      props.handleBackdrop(false);\n      enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n      history.replace({\n        pathname: \"/login\",\n      });\n    } catch (err) {\n      enqueueSnackbar(`${err?.message || \"Check your internet connection.\"}`, {\n        variant: \"error\",\n      });\n    }\n    // finally {\n    //   history.go(0);\n    // }\n  };\n\n  const myDrawer = (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundImage: \"url(\" + pattern + \")\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        zIndex: 100,\n      }}\n    >\n      <br />\n      <div\n        className={classes.toolbar}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <a href=\"/\">\n          <img src={logo} style={{ width: 100 }} alt=\"site logo\" />\n        </a>\n      </div>\n      <Divider />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"white\",\n        }}\n      >\n        <List className={classes.listRoot}>\n          {drawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (4 > 2) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n\n      <div\n        style={{\n          flexDirection: \"column\",\n          marginTop: \"auto\",\n          marginRight: \"auto\",\n          justifyContent: \"left\",\n          alignItems: \"start\",\n          padding: 16,\n          zIndex: 1000,\n        }}\n      >\n        <Button\n          variant=\"text\"\n          color=\"secondary\"\n          startIcon={<PowerSettingsNewIcon />}\n          style={{ textTransform: \"none\", zIndex: 1000 }}\n          onClick={signOut}\n        >\n          Sign Out\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <MUIDrawer\n      variant=\"permanent\"\n      open\n      classes={{ paper: classes.drawerPaper }}\n    >\n      {myDrawer}\n    </MUIDrawer>\n  );\n};\n\nexport default withRouter(Drawer2);\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer1.js",["396","397","398"],"import React from \"react\";\nimport { Drawer as MUIDrawer } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport DashBoardIcon from \"@mui/icons-material/DashboardOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport logo from \"../../../../assets/images/icon_blue.png\";\n\nimport { useSnackbar } from \"notistack\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { auth } from \"../../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../../data/store/slice/user\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"275px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  listRoot: {\n    width: \"100%\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Drawer1 = (props) => {\n  const classes = useStyles();\n  const { history, mobileOpen, setMobileOpen } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const container =\n    props.window !== undefined ? () => window().document.body : undefined;\n\n  const drawerItems = [\n    {\n      text: \"Dashboard\",\n      icon: (\n        <DashBoardIcon\n          style={\n            selectedIndex === 0 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/\",\n    },\n    {\n      text: \"Manage App\",\n      icon: (\n        <SchoolOutlinedIcon\n          style={\n            selectedIndex === 1 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-app\",\n    },\n    {\n      text: \"Manage Users\",\n      icon: (\n        <PeopleOutlinedIcon\n          style={\n            selectedIndex === 2 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-users\",\n    },\n    {\n      text: \"Profile\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/profile\",\n    },\n  ];\n\n  let picSize, cornerSize;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const md = useMediaQuery(theme.breakpoints.only(\"md\"));\n  if (xs) {\n    cornerSize = 76;\n    picSize = 70;\n  } else if (sm) {\n    cornerSize = 96;\n    picSize = 90;\n  } else if (md) {\n    cornerSize = 116;\n    picSize = 110;\n  } else {\n    cornerSize = 136;\n    picSize = 130;\n  }\n\n  const handleListItemClick = (to, index) => {\n    history.push(to);\n    setSelectedIndex(index);\n    setMobileOpen(!mobileOpen);\n  };\n\n  const signOut = async () => {\n    props.handleBackdrop(true);\n    try {\n      await auth.signOut();\n      dispatch(setUserData(null));\n      props.handleBackdrop(false);\n      enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n      history.replace({\n        pathname: \"/login\",\n      });\n    } catch (err) {\n      enqueueSnackbar(`${err?.message || \"Check your internet connection.\"}`, {\n        variant: \"error\",\n      });\n    }\n    // finally {\n    //   history.go(0);\n    // }\n  };\n\n  const myDrawer = (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        className={classes.toolbar}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <a href=\"/\">\n          <img src={logo} style={{ width: 100 }} alt=\"site logo\" />\n        </a>\n      </div>\n      <Divider />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <List className={classes.listRoot}>\n          {drawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (1 === 1) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n\n      <div\n        style={{\n          flexDirection: \"column\",\n          marginTop: \"auto\",\n          marginRight: \"auto\",\n          justifyContent: \"left\",\n          alignItems: \"start\",\n          padding: 16,\n        }}\n      >\n        <Button\n          startIcon={<PowerSettingsNewIcon />}\n          style={{ textTransform: \"none\" }}\n          onClick={signOut}\n        >\n          Sign Out\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <MUIDrawer\n      variant={props.drawerVariant}\n      container={container}\n      className={classes.drawer}\n      anchor={props.anchor}\n      open={mobileOpen}\n      onClose={props.handleDrawerToggle}\n      classes={{ paper: classes.drawerPaper }}\n      ModalProps={{\n        keepMounted: true, // Better open performance on mobile.\n      }}\n    >\n      {myDrawer}\n    </MUIDrawer>\n  );\n};\n\nexport default withRouter(Drawer1);\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/index.js",["399"],"import {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport categoryImage from \"../../../../../assets/images/category_ndua_admin.jpeg\";\nimport directoryImge from \"../../../../../assets/images/directories_ndua_admin.jpeg\";\nimport newsImage from \"../../../../../assets/images/news_ndua_admin.jpeg\";\nimport projectsImage from \"../../../../../assets/images/projects_ndua_admin.jpeg\";\nimport adsImage from \"../../../../../assets/images/ads_ndua_admin.jpeg\";\nimport privacyImage from \"../../../../../assets/images/privacy.jpeg\";\nimport termsImage from \"../../../../../assets/images/terms_of_service.jpeg\";\nimport contactUsImage from \"../../../../../assets/images/handshake.jpeg\";\nimport stateImage from \"../../../../../assets/images/state_logo.jpeg\";\nimport historyImage from \"../../../../../assets/images/history_ndua_logo.jpeg\";\nimport educationImage from \"../../../../../assets/images/education_logo.jpeg\";\n\nimport Grid from \"@mui/material/Grid\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 236,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, title, to } = props;\n  const history = useHistory();\n\n  return (\n    <Card elevation={4} className={classes.root}>\n      <CardContent>\n        <CardMedia image={image} className={classes.image} />\n        <br />\n        <div className={classes.row}>\n          <div className={classes.column}>\n            <Typography variant=\"body1\" color=\"blue\">\n              {title}\n            </Typography>\n          </div>\n          <div>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => history.push(to)}\n            >\n              View\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst ManageApp = () => {\n  let list = [\n    {\n      title: \"Categories\",\n      desc: \"Manage app categories\",\n      to: \"/admin/dashboard/manage-app/categories\",\n      image: categoryImage,\n    },\n    {\n      title: \"News Feeds\",\n      desc: \"Manage app news feeds\",\n      to: \"/admin/dashboard/manage-app/news-feeds\",\n      image: newsImage,\n    },\n    {\n      title: \"Projects\",\n      desc: \"Manage app projects\",\n      to: \"/admin/dashboard/manage-app/projects\",\n      image: projectsImage,\n    },\n    {\n      title: \"States\",\n      desc: \"Manage states\",\n      to: \"/admin/dashboard/manage-app/states\",\n      image: stateImage,\n    },\n    {\n      title: \"History\",\n      desc: \"Manage history\",\n      to: \"/admin/dashboard/manage-app/history\",\n      image: historyImage,\n    },\n    {\n      title: \"Education\",\n      desc: \"Manage education\",\n      to: \"/admin/dashboard/manage-app/education\",\n      image: educationImage,\n    },\n    {\n      title: \"Directories\",\n      desc: \"Manage app directories\",\n      to: \"/admin/dashboard/manage-app/vendors\",\n      image: directoryImge,\n    },\n    {\n      title: \"Ads Center\",\n      desc: \"Manage adverts\",\n      to: \"/admin/dashboard/manage-app/ads\",\n      image: adsImage,\n    },\n    {\n      title: \"Privacy Policy\",\n      desc: \"Manage privacy\",\n      to: \"/admin/dashboard/manage-app/privacy-policy\",\n      image: privacyImage,\n    },\n    {\n      title: \"Terms of Service\",\n      desc: \"Manage terms of service\",\n      to: \"/admin/dashboard/manage-app/terms-of-service\",\n      image: termsImage,\n    },\n    {\n      title: \"Contact Us\",\n      desc: \"Manage contact us\",\n      to: \"/admin/dashboard/manage-app/contact-us\",\n      image: contactUsImage,\n    },\n  ];\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={{ xs: 2, md: 2 }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n      >\n        {list?.map((_, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <CardItem\n              image={list[index].image}\n              title={list[index].title}\n              excerpt={list[index].desc}\n              to={list[index].to}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ManageApp;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_users/index.js",["400","401"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../components/dashboard/dialogs/custom-dialog\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n} from \"../../../../../data/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport UsersTable from \"../../../../components/dashboard/users-table\";\nimport CreateAdminForm from \"../../../../forms/admin/create_admin_form\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 386,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst ManageUsers = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [newsList, setNewsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"news\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const news = [];\n      querySnapshot.forEach((doc) => {\n        news.push(doc.data());\n      });\n      setNewsList(news);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create New Admin\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<CreateAdminForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={18}>\n            All Users\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Create Admin\n        </Button>\n      </div>\n      <br />\n      <Typography>Mobile Application Users</Typography>\n      <div>\n        <UsersTable />\n      </div>\n    </div>\n  );\n};\n\nexport default ManageUsers;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/profile/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/home/index.js",["402","403","404","405","406","407","408","409","410","411"],"import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport { useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  onSnapshot,\n  query,\n  where,\n  collection,\n  db,\n} from \"../../../../../data/firebase\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridHeader,\n  GridFilterToolbarButton,\n  GridToolbarExport,\n} from \"@mui/x-data-grid\";\n// import GridColumnsToolbarButton\nimport Avatar from \"@mui/material/Avatar\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Divider from \"@mui/material/Divider\";\nimport CustomNoRowsOverlay from \"../../../../components/misc/placeholder/custom_no_data\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  button: {\n    textTransform: \"none\",\n    fontSize: 11,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CustomToolbar = () => {\n  const theme = useTheme();\n\n  return (\n    <GridToolbarContainer\n      color=\"secondary\"\n      style={{\n        display: \"flex\",\n        padding: 16,\n      }}\n    >\n      <Paper style={{ padding: 6, borderRadius: 10 }}>\n        <GridHeader />\n      </Paper>\n      {/* <Paper\n        style={{ padding: 6, borderRadius: 10, marginLeft: 5, marginRight: 5 }}\n      >\n        <GridFilterToolbarButton />\n      </Paper> */}\n      <Paper\n        style={{\n          alignSelf: \"flex-end\",\n          padding: 6,\n          marginLeft: \"auto\",\n          borderRadius: 10,\n        }}\n      >\n        <GridToolbarExport />\n      </Paper>\n    </GridToolbarContainer>\n  );\n};\n\nconst HomePage = () => {\n  const classes = useStyles();\n\n  const [projectsList, setProjectsList] = React.useState(null);\n  const [newsList, setNewsList] = React.useState(null);\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  const [usersList, setUsersList] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n    return () => {\n      setCategoriesList(null);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"news\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const news = [];\n      querySnapshot.forEach((doc) => {\n        news.push(doc.data());\n      });\n      setNewsList(news);\n    });\n    return () => {\n      setNewsList(null);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"projects\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const proj = [];\n      querySnapshot.forEach((doc) => {\n        proj.push(doc.data());\n      });\n      setProjectsList(proj);\n    });\n    return () => {\n      setProjectsList(null);\n    };\n  }, []);\n\n  // React.useEffect(() => {\n  //   const q = query(collection(db, \"users\"), where(\"userType\", \"==\", \"public\"));\n  //   const unsubscribe = onSnapshot(q, (querySnapshot) => {\n  //     const usrs = [];\n  //     querySnapshot.forEach((doc) => {\n  //       usrs.push(doc.data());\n  //     });\n  //     setUsersList(usrs.slice(0, 5));\n  //   });\n  //   return () => {\n  //     setUsersList([]);\n  //   };\n  // }, []);\n\n  // if (usersList) {\n  //   console.log(\"Filtered: \", usersList);\n  // }\n\n  const columns = [\n    {\n      field: \"photo\",\n      headerName: \"Image\",\n      width: 75,\n      renderCell: (params) => (\n        <Avatar alt=\"Profile Picture\" src={params.value} />\n      ),\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 180,\n      valueGetter: (params) =>\n        `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`,\n    },\n    {\n      field: \"email\",\n      headerName: \"Email Address\",\n      width: 110,\n      editable: true,\n    },\n    {\n      field: \"phone\",\n      headerName: \"Phone\",\n      width: 110,\n      editable: true,\n    },\n  ];\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={7} md={7}>\n          <div style={{ display: \"flex\", height: \"100%\", padding: 4 }}>\n            <div style={{ flexGrow: 1 }}>\n              {usersList && (\n                <DataGrid\n                  rows={usersList}\n                  columns={columns}\n                  pageSize={5}\n                  rowsPerPageOptions={[5]}\n                  checkboxSelection\n                  disableSelectionOnClick\n                  components={{\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                    Toolbar: CustomToolbar,\n                  }}\n                />\n              )}\n            </div>\n          </div>\n        </Grid>\n\n        <Grid item xs={12} sm={5} md={5}>\n          <Card sx={{ mb: 3, mt: 3 }}>\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total categories</Typography>\n              <Typography>{categoriesList?.length}</Typography>\n            </div>\n            <Divider color=\"primary\" />\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total news feeds</Typography>\n              <Typography>{newsList?.length}</Typography>\n            </div>\n            <Divider color=\"primary\" />\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total projects</Typography>\n              <Typography>{projectsList?.length}</Typography>\n            </div>\n            <Divider color=\"primary\" />\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total vendors</Typography>\n              <Typography>{0}</Typography>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/update_category.js",["412","413"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditCategoryForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, name, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNew = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"categories\", \"img_\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              url: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Category updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`Error updating category`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateCategory = async (e) => {\n    setIsLoading(true);\n    if (!previewPassport) {\n      console.log(\"ID: \", id);\n      const mRef = doc(db, \"categories\", \"img_\" + id);\n      try {\n        await updateDoc(mRef, {\n          title: formValues.title,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Category name updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`Error updating name`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      setFormValues({ title: formValues.title ? formValues.title : name });\n      const fileRef = ref(storage, \"categories/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          // File deleted now upload new file,\n          //get download url and save to firestore\n          setIsLoading(false);\n          uploadNew();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateCategory}>\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? name\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n        <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        />\n\n        <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditCategoryForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/placeholder/custom_no_data.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/admin/create_admin_form.js",["414","415"],"import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { makeStyles } from \"@mui/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { auth, ref, db, doc, setDoc, getDoc } from \"../../../data/firebase\";\nimport { createUser } from \"../../../domain/service\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles((theme) => ({\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CreateAdminForm = (props) => {\n  const { setOpen } = props;\n  const classes = useStyles();\n\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [formValues, setFormValues] = React.useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n  });\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const createAdmin = (e) => {\n    setIsLoading(true);\n    const timeNow = new Date();\n    createUser(formValues.email, formValues.password)\n      .then(async (resp) => {\n        try {\n          setDoc(doc(db, \"users\", resp?.user?.uid), {\n            id: resp?.user?.uid,\n            firstname: formValues.firstname,\n            lastname: formValues.lastname,\n            phone: formValues.phone,\n            email: formValues.email,\n            password: formValues.password,\n            userType: \"admin\",\n            isBlocked: false,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then(async (result) => {\n              setIsLoading(false);\n              setOpen(false);\n              const docRef = doc(db, \"users\", resp?.user?.uid);\n              const docSnap = await getDoc(docRef);\n              if (docSnap.exists()) {\n                enqueueSnackbar(`Admin created successfully`, {\n                  variant: \"success\",\n                });\n              }\n            })\n            .catch((err) => {\n              setIsLoading(false);\n              enqueueSnackbar(\n                `${err?.message || \"Check your internet connection\"}`,\n                {\n                  variant: \"error\",\n                }\n              );\n            });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(\n            `${error?.message || \"Check your internet connection\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n        }\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        enqueueSnackbar(`${err?.message || \"Check your internet connection\"}`, {\n          variant: \"error\",\n        });\n        // console.log(\"ERR: \", err?.message);\n      });\n  };\n\n  return (\n    <div style={{ width: 360 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createAdmin}>\n        <TextValidator\n          className={classes.mb}\n          id=\"firstname\"\n          label=\"First name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.firstname}\n          onChange={handleChange}\n          name=\"firstname\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"First name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"lastname\"\n          label=\"Last name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.lastname}\n          onChange={handleChange}\n          name=\"lastname\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Last name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"email\"\n          label=\"Email address\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.email}\n          onChange={handleChange}\n          name=\"email\"\n          fullWidth\n          required\n          type=\"email\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"phone\"\n          label=\"Phone number\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.phone}\n          onChange={handleChange}\n          name=\"phone\"\n          fullWidth\n          required\n          type=\"phone\"\n          validators={[\"required\"]}\n          errorMessages={[\"Phone number is required\"]}\n        />\n\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default CreateAdminForm;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js",["416","417"],"import * as React from \"react\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarColumnsButton,\n  GridToolbarFilterButton,\n  GridToolbarExport,\n  GridToolbarDensitySelector,\n} from \"@mui/x-data-grid\";\n// import { useDemoData } from \"@mui/x-data-grid-generator\";\nimport {\n  onSnapshot,\n  query,\n  where,\n  collection,\n  db,\n} from \"../../../../data/firebase\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CustomNoRowsOverlay from \"../../misc/placeholder/custom_no_data\";\nimport ActionButton from \"./action_button\";\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarColumnsButton />\n      <GridToolbarFilterButton />\n      <GridToolbarDensitySelector />\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nexport default function UserTable() {\n  const columns = [\n    {\n      field: \"photo\",\n      headerName: \"Image\",\n      width: 75,\n      renderCell: (params) => (\n        <Avatar alt=\"Profile Picture\" src={params.value} />\n      ),\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`,\n    },\n    {\n      field: \"email\",\n      headerName: \"Email Address\",\n      width: 165,\n    },\n    {\n      field: \"phone\",\n      headerName: \"Phone\",\n      width: 128,\n    },\n    {\n      field: \"gender\",\n      headerName: \"Gender\",\n      width: 86,\n    },\n    {\n      field: \"state\",\n      headerName: \"State of Origin\",\n      width: 100,\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 96,\n    },\n    {\n      field: \"id\",\n      headerName: \"ACTIONS\",\n      width: 130,\n      renderCell: (params) => {\n        return (\n          <ActionButton\n            selected={params}\n            type=\"scholars\"\n            // setIsPerforming={setIsPerforming}\n            // handleSetSelectedRow={props.handleSetSelectedRow}\n          />\n        );\n      },\n    },\n  ];\n\n  // const { data } = useDemoData({\n  //   dataSet: \"Commodity\",\n  //   rowLength: 10,\n  //   maxColumns: 6,\n  // });\n\n  const [usersList, setUsersList] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    const usersRef = collection(db, \"users\");\n    const q = query(usersRef, where(\"userType\", \"==\", \"public\"));\n    onSnapshot(q, (querySnapshot) => {\n      const usrs = [];\n      querySnapshot.forEach((doc) => {\n        usrs.push(doc.data());\n      });\n      setUsersList(usrs);\n    });\n    return () => {\n      setUsersList([]);\n    };\n  }, []);\n\n  if (usersList) {\n    console.log(\"Filtered: \", usersList);\n  }\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        // {...data}\n        rows={usersList}\n        columns={columns}\n        components={{\n          Toolbar: CustomToolbar,\n          NoRowsOverlay: CustomNoRowsOverlay,\n        }}\n      />\n    </div>\n  );\n}\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/action_button.js",["418","419","420"],"import React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n// import EmptyModal from \"../modal/EmptyModal\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVertRounded\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport VisibilityIcon from \"@mui/icons-material/VisibilityOutlined\";\nimport Fade from \"@mui/material/Fade\";\n// import DataPreview from \"../miscellaneous/DataPreview\";\nimport { useSnackbar } from \"notistack\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@mui/styles\";\nimport CustomDialog from \"../dialogs/custom-dialog\";\nimport DeleteDialog from \"../dialogs/custom-dialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  awardRoot: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  awardRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginLeft: \"auto\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst ActionButton = ({ selected, setIsPerforming, type }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openPreviewModal, setOpenPreviewModal] = React.useState(false);\n  const [openBlock, setOpenBlock] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n\n  const openAction = Boolean(anchorEl);\n  const { enqueueSnackbar } = useSnackbar();\n  const { userData } = useSelector((state) => state.user);\n  const handleMoreAction = (e) => setAnchorEl(e.currentTarget);\n  const handleCloseMoreAction = () => setAnchorEl(null);\n\n  // const { data: scholarData } = useSWR('/applicants/scholars/' + selected.row._id, APIService.authFetcher);\n\n  React.useEffect(() => {\n    console.log(\"DATS: \", userData);\n    return () => {\n      //   cleanup\n    };\n  }, []);\n\n  const handlePreview = () => {\n    handleCloseMoreAction();\n    setOpenPreviewModal(true);\n  };\n\n  const handleDelete = () => {\n    handleCloseMoreAction();\n    setOpenDelete(true);\n  };\n\n  const handleBlock = () => {\n    setAnchorEl(null);\n    setOpenBlock(true);\n  };\n\n  const performDelete = async () => {};\n\n  const performBlock = async () => {};\n\n  const renderBlockConfirm = (\n    <div className={classes.awardRoot}>\n      <Typography>\n        {`Are you sure you want to block ${selected.row.firstname} ${selected.row.lastname} from using this platform?`}\n      </Typography>\n      <div className={classes.awardRow}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"inherit\"\n          onClick={() => setOpenBlock(false)}\n        >\n          Cancel\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          style={{ backgroundColor: \"red\" }}\n          onClick={performBlock}\n        >\n          Block\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderDeleteConfirm = (\n    <div className={classes.awardRoot}>\n      <Typography>\n        {`Are you sure you want to delete ${selected.row.firstname} ${selected.row.lastname} from this platform?`}\n      </Typography>\n      <div className={classes.awardRow}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"inherit\"\n          onClick={() => setOpenBlock(false)}\n        >\n          Cancel\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          style={{ backgroundColor: \"red\" }}\n          onClick={performDelete}\n        >\n          Block\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"actions\"\n        aria-controls=\"fade-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMoreAction}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={openAction}\n        onClose={handleCloseMoreAction}\n        TransitionComponent={Fade}\n        elevation={1}\n      >\n        <MenuItem onClick={handlePreview}>\n          <ListItemIcon>\n            <VisibilityIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"View Detail\" />\n        </MenuItem>\n        {/* <DataPreview\n          open={openPreviewModal}\n          setOpen={setOpenPreviewModal}\n          data={selected.row}\n        /> */}\n        {userData && userData?.userType === \"super\" && selected?.row ? (\n          <div>\n            <MenuItem onClick={handleBlock}>\n              <ListItemText primary=\"Block user\" />\n            </MenuItem>\n            <CustomDialog\n              title=\"Block User\"\n              bodyComponent={renderBlockConfirm}\n              open={openBlock}\n              handleClose={() => setOpenBlock(false)}\n            />\n\n            {selected?.row?.userType === \"admin\" && (\n              <div>\n                <MenuItem onClick={handleDelete}>\n                  <ListItemText primary=\"Delete user\" />\n                </MenuItem>\n                <DeleteDialog\n                  title=\"Delete Admin\"\n                  bodyComponent={renderDeleteConfirm}\n                  open={openDelete}\n                  handleClose={() => setOpenDelete(false)}\n                />\n              </div>\n            )}\n          </div>\n        ) : null}\n      </Menu>\n    </>\n  );\n};\n\nexport default ActionButton;\n","/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/richtext/quill.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/richtext/edit_quill.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/ads/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/ads/add_advert_form.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/datepicker/index.js",[],"/Users/macintosh/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/switch/index.js",[],{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","severity":1,"message":"426","line":14,"column":10,"nodeType":"427","messageId":"428","endLine":14,"endColumn":19},{"ruleId":"425","severity":1,"message":"429","line":35,"column":9,"nodeType":"427","messageId":"428","endLine":35,"endColumn":21},{"ruleId":"425","severity":1,"message":"430","line":4,"column":8,"nodeType":"427","messageId":"428","endLine":4,"endColumn":12},{"ruleId":"425","severity":1,"message":"429","line":15,"column":9,"nodeType":"427","messageId":"428","endLine":15,"endColumn":21},{"ruleId":"425","severity":1,"message":"431","line":235,"column":11,"nodeType":"427","messageId":"428","endLine":235,"endColumn":22},{"ruleId":"425","severity":1,"message":"432","line":27,"column":8,"nodeType":"427","messageId":"428","endLine":27,"endColumn":19},{"ruleId":"425","severity":1,"message":"433","line":108,"column":5,"nodeType":"427","messageId":"428","endLine":108,"endColumn":12},{"ruleId":"425","severity":1,"message":"434","line":300,"column":21,"nodeType":"427","messageId":"428","endLine":300,"endColumn":30},{"ruleId":"425","severity":1,"message":"435","line":305,"column":9,"nodeType":"427","messageId":"428","endLine":305,"endColumn":16},{"ruleId":"425","severity":1,"message":"426","line":25,"column":10,"nodeType":"427","messageId":"428","endLine":25,"endColumn":19},{"ruleId":"425","severity":1,"message":"436","line":52,"column":10,"nodeType":"427","messageId":"428","endLine":52,"endColumn":19},{"ruleId":"425","severity":1,"message":"437","line":52,"column":21,"nodeType":"427","messageId":"428","endLine":52,"endColumn":33},{"ruleId":"425","severity":1,"message":"438","line":98,"column":15,"nodeType":"427","messageId":"428","endLine":98,"endColumn":24},{"ruleId":"425","severity":1,"message":"439","line":99,"column":15,"nodeType":"427","messageId":"428","endLine":99,"endColumn":27},{"ruleId":"425","severity":1,"message":"431","line":224,"column":11,"nodeType":"427","messageId":"428","endLine":224,"endColumn":22},{"ruleId":"425","severity":1,"message":"440","line":93,"column":56,"nodeType":"427","messageId":"428","endLine":93,"endColumn":60},{"ruleId":"425","severity":1,"message":"435","line":98,"column":9,"nodeType":"427","messageId":"428","endLine":98,"endColumn":16},{"ruleId":"425","severity":1,"message":"435","line":259,"column":9,"nodeType":"427","messageId":"428","endLine":259,"endColumn":16},{"ruleId":"425","severity":1,"message":"431","line":361,"column":11,"nodeType":"427","messageId":"428","endLine":361,"endColumn":22},{"ruleId":"425","severity":1,"message":"431","line":372,"column":11,"nodeType":"427","messageId":"428","endLine":372,"endColumn":22},{"ruleId":"425","severity":1,"message":"441","line":106,"column":10,"nodeType":"427","messageId":"428","endLine":106,"endColumn":26},{"ruleId":"425","severity":1,"message":"442","line":2,"column":22,"nodeType":"427","messageId":"428","endLine":2,"endColumn":30},{"ruleId":"425","severity":1,"message":"443","line":13,"column":9,"nodeType":"427","messageId":"428","endLine":13,"endColumn":12},{"ruleId":"425","severity":1,"message":"444","line":14,"column":9,"nodeType":"427","messageId":"428","endLine":14,"endColumn":13},{"ruleId":"425","severity":1,"message":"441","line":83,"column":10,"nodeType":"427","messageId":"428","endLine":83,"endColumn":26},{"ruleId":"425","severity":1,"message":"431","line":143,"column":11,"nodeType":"427","messageId":"428","endLine":143,"endColumn":22},{"ruleId":"425","severity":1,"message":"445","line":3,"column":8,"nodeType":"427","messageId":"428","endLine":3,"endColumn":14},{"ruleId":"425","severity":1,"message":"446","line":8,"column":3,"nodeType":"427","messageId":"428","endLine":8,"endColumn":6},{"ruleId":"425","severity":1,"message":"447","line":9,"column":3,"nodeType":"427","messageId":"428","endLine":9,"endColumn":10},{"ruleId":"425","severity":1,"message":"448","line":10,"column":3,"nodeType":"427","messageId":"428","endLine":10,"endColumn":9},{"ruleId":"425","severity":1,"message":"449","line":12,"column":3,"nodeType":"427","messageId":"428","endLine":12,"endColumn":15},{"ruleId":"425","severity":1,"message":"450","line":13,"column":3,"nodeType":"427","messageId":"428","endLine":13,"endColumn":23},{"ruleId":"425","severity":1,"message":"451","line":14,"column":3,"nodeType":"427","messageId":"428","endLine":14,"endColumn":17},{"ruleId":"425","severity":1,"message":"452","line":18,"column":10,"nodeType":"427","messageId":"428","endLine":18,"endColumn":21},{"ruleId":"425","severity":1,"message":"453","line":20,"column":10,"nodeType":"427","messageId":"428","endLine":20,"endColumn":13},{"ruleId":"425","severity":1,"message":"454","line":22,"column":10,"nodeType":"427","messageId":"428","endLine":22,"endColumn":20},{"ruleId":"425","severity":1,"message":"455","line":64,"column":18,"nodeType":"427","messageId":"428","endLine":64,"endColumn":21},{"ruleId":"425","severity":1,"message":"456","line":64,"column":29,"nodeType":"427","messageId":"428","endLine":64,"endColumn":31},{"ruleId":"425","severity":1,"message":"457","line":69,"column":10,"nodeType":"427","messageId":"428","endLine":69,"endColumn":14},{"ruleId":"425","severity":1,"message":"458","line":70,"column":23,"nodeType":"427","messageId":"428","endLine":70,"endColumn":37},{"ruleId":"425","severity":1,"message":"459","line":72,"column":10,"nodeType":"427","messageId":"428","endLine":72,"endColumn":18},{"ruleId":"425","severity":1,"message":"460","line":72,"column":20,"nodeType":"427","messageId":"428","endLine":72,"endColumn":31},{"ruleId":"425","severity":1,"message":"461","line":73,"column":10,"nodeType":"427","messageId":"428","endLine":73,"endColumn":25},{"ruleId":"462","severity":1,"message":"463","line":154,"column":24,"nodeType":"464","messageId":"465","endLine":154,"endColumn":26},{"ruleId":"425","severity":1,"message":"445","line":3,"column":8,"nodeType":"427","messageId":"428","endLine":3,"endColumn":14},{"ruleId":"425","severity":1,"message":"446","line":8,"column":3,"nodeType":"427","messageId":"428","endLine":8,"endColumn":6},{"ruleId":"425","severity":1,"message":"447","line":9,"column":3,"nodeType":"427","messageId":"428","endLine":9,"endColumn":10},{"ruleId":"425","severity":1,"message":"448","line":10,"column":3,"nodeType":"427","messageId":"428","endLine":10,"endColumn":9},{"ruleId":"425","severity":1,"message":"449","line":12,"column":3,"nodeType":"427","messageId":"428","endLine":12,"endColumn":15},{"ruleId":"425","severity":1,"message":"450","line":13,"column":3,"nodeType":"427","messageId":"428","endLine":13,"endColumn":23},{"ruleId":"425","severity":1,"message":"451","line":14,"column":3,"nodeType":"427","messageId":"428","endLine":14,"endColumn":17},{"ruleId":"425","severity":1,"message":"452","line":18,"column":10,"nodeType":"427","messageId":"428","endLine":18,"endColumn":21},{"ruleId":"425","severity":1,"message":"453","line":20,"column":10,"nodeType":"427","messageId":"428","endLine":20,"endColumn":13},{"ruleId":"425","severity":1,"message":"454","line":22,"column":10,"nodeType":"427","messageId":"428","endLine":22,"endColumn":20},{"ruleId":"425","severity":1,"message":"455","line":64,"column":18,"nodeType":"427","messageId":"428","endLine":64,"endColumn":21},{"ruleId":"425","severity":1,"message":"456","line":64,"column":29,"nodeType":"427","messageId":"428","endLine":64,"endColumn":31},{"ruleId":"425","severity":1,"message":"457","line":69,"column":10,"nodeType":"427","messageId":"428","endLine":69,"endColumn":14},{"ruleId":"425","severity":1,"message":"458","line":70,"column":23,"nodeType":"427","messageId":"428","endLine":70,"endColumn":37},{"ruleId":"425","severity":1,"message":"459","line":72,"column":10,"nodeType":"427","messageId":"428","endLine":72,"endColumn":18},{"ruleId":"425","severity":1,"message":"460","line":72,"column":20,"nodeType":"427","messageId":"428","endLine":72,"endColumn":31},{"ruleId":"425","severity":1,"message":"461","line":73,"column":10,"nodeType":"427","messageId":"428","endLine":73,"endColumn":25},{"ruleId":"425","severity":1,"message":"455","line":53,"column":18,"nodeType":"427","messageId":"428","endLine":53,"endColumn":21},{"ruleId":"425","severity":1,"message":"457","line":62,"column":10,"nodeType":"427","messageId":"428","endLine":62,"endColumn":14},{"ruleId":"425","severity":1,"message":"458","line":63,"column":23,"nodeType":"427","messageId":"428","endLine":63,"endColumn":37},{"ruleId":"425","severity":1,"message":"461","line":66,"column":10,"nodeType":"427","messageId":"428","endLine":66,"endColumn":25},{"ruleId":"425","severity":1,"message":"466","line":21,"column":8,"nodeType":"427","messageId":"428","endLine":21,"endColumn":15},{"ruleId":"425","severity":1,"message":"467","line":22,"column":8,"nodeType":"427","messageId":"428","endLine":22,"endColumn":14},{"ruleId":"425","severity":1,"message":"468","line":75,"column":13,"nodeType":"427","messageId":"428","endLine":75,"endColumn":17},{"ruleId":"425","severity":1,"message":"445","line":7,"column":8,"nodeType":"427","messageId":"428","endLine":7,"endColumn":14},{"ruleId":"425","severity":1,"message":"469","line":26,"column":10,"nodeType":"427","messageId":"428","endLine":26,"endColumn":18},{"ruleId":"425","severity":1,"message":"470","line":30,"column":10,"nodeType":"427","messageId":"428","endLine":30,"endColumn":19},{"ruleId":"425","severity":1,"message":"455","line":76,"column":57,"nodeType":"427","messageId":"428","endLine":76,"endColumn":60},{"ruleId":"425","severity":1,"message":"431","line":98,"column":11,"nodeType":"427","messageId":"428","endLine":98,"endColumn":22},{"ruleId":"425","severity":1,"message":"431","line":108,"column":11,"nodeType":"427","messageId":"428","endLine":108,"endColumn":22},{"ruleId":"425","severity":1,"message":"442","line":2,"column":22,"nodeType":"427","messageId":"428","endLine":2,"endColumn":30},{"ruleId":"425","severity":1,"message":"471","line":12,"column":8,"nodeType":"427","messageId":"428","endLine":12,"endColumn":19},{"ruleId":"425","severity":1,"message":"472","line":16,"column":10,"nodeType":"427","messageId":"428","endLine":16,"endColumn":17},{"ruleId":"425","severity":1,"message":"431","line":174,"column":11,"nodeType":"427","messageId":"428","endLine":174,"endColumn":22},{"ruleId":"425","severity":1,"message":"473","line":56,"column":9,"nodeType":"427","messageId":"428","endLine":56,"endColumn":18},{"ruleId":"425","severity":1,"message":"474","line":121,"column":5,"nodeType":"427","messageId":"428","endLine":121,"endColumn":15},{"ruleId":"425","severity":1,"message":"475","line":122,"column":5,"nodeType":"427","messageId":"428","endLine":122,"endColumn":12},{"ruleId":"425","severity":1,"message":"474","line":117,"column":5,"nodeType":"427","messageId":"428","endLine":117,"endColumn":15},{"ruleId":"425","severity":1,"message":"475","line":118,"column":5,"nodeType":"427","messageId":"428","endLine":118,"endColumn":12},{"ruleId":"476","severity":1,"message":"477","line":181,"column":17,"nodeType":"478","messageId":"479","endLine":181,"endColumn":24},{"ruleId":"425","severity":1,"message":"480","line":48,"column":25,"nodeType":"427","messageId":"428","endLine":48,"endColumn":32},{"ruleId":"425","severity":1,"message":"481","line":78,"column":10,"nodeType":"427","messageId":"428","endLine":78,"endColumn":18},{"ruleId":"425","severity":1,"message":"431","line":82,"column":11,"nodeType":"427","messageId":"428","endLine":82,"endColumn":22},{"ruleId":"425","severity":1,"message":"482","line":3,"column":10,"nodeType":"427","messageId":"428","endLine":3,"endColumn":23},{"ruleId":"425","severity":1,"message":"483","line":9,"column":3,"nodeType":"427","messageId":"428","endLine":9,"endColumn":8},{"ruleId":"425","severity":1,"message":"484","line":17,"column":3,"nodeType":"427","messageId":"428","endLine":17,"endColumn":26},{"ruleId":"425","severity":1,"message":"485","line":46,"column":9,"nodeType":"427","messageId":"428","endLine":46,"endColumn":14},{"ruleId":"425","severity":1,"message":"486","line":84,"column":21,"nodeType":"427","messageId":"428","endLine":84,"endColumn":33},{"ruleId":"425","severity":1,"message":"436","line":85,"column":10,"nodeType":"427","messageId":"428","endLine":85,"endColumn":19},{"ruleId":"425","severity":1,"message":"437","line":85,"column":21,"nodeType":"427","messageId":"428","endLine":85,"endColumn":33},{"ruleId":"425","severity":1,"message":"431","line":89,"column":11,"nodeType":"427","messageId":"428","endLine":89,"endColumn":22},{"ruleId":"425","severity":1,"message":"431","line":103,"column":11,"nodeType":"427","messageId":"428","endLine":103,"endColumn":22},{"ruleId":"425","severity":1,"message":"431","line":117,"column":11,"nodeType":"427","messageId":"428","endLine":117,"endColumn":22},{"ruleId":"425","severity":1,"message":"448","line":10,"column":3,"nodeType":"427","messageId":"428","endLine":10,"endColumn":9},{"ruleId":"425","severity":1,"message":"452","line":18,"column":10,"nodeType":"427","messageId":"428","endLine":18,"endColumn":21},{"ruleId":"425","severity":1,"message":"487","line":11,"column":10,"nodeType":"427","messageId":"428","endLine":11,"endColumn":14},{"ruleId":"425","severity":1,"message":"446","line":11,"column":16,"nodeType":"427","messageId":"428","endLine":11,"endColumn":19},{"ruleId":"425","severity":1,"message":"436","line":101,"column":10,"nodeType":"427","messageId":"428","endLine":101,"endColumn":19},{"ruleId":"425","severity":1,"message":"437","line":101,"column":21,"nodeType":"427","messageId":"428","endLine":101,"endColumn":33},{"ruleId":"425","severity":1,"message":"488","line":39,"column":10,"nodeType":"427","messageId":"428","endLine":39,"endColumn":26},{"ruleId":"425","severity":1,"message":"489","line":44,"column":11,"nodeType":"427","messageId":"428","endLine":44,"endColumn":26},{"ruleId":"490","severity":1,"message":"491","line":56,"column":6,"nodeType":"492","endLine":56,"endColumn":8,"suggestions":"493"},"no-native-reassign",["494"],"no-negated-in-lhs",["495"],"no-unused-vars","'Copyright' is defined but never used.","Identifier","unusedVar","'handleSubmit' is assigned a value but never used.","'Link' is defined but never used.","'unsubscribe' is assigned a value but never used.","'AddNewsForm' is defined but never used.","'blocked' is assigned a value but never used.","'updatedAt' is assigned a value but never used.","'history' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'item' is assigned a value but never used.","'isStartedFilling' is assigned a value but never used.","'useTheme' is defined but never used.","'top' is assigned a value but never used.","'left' is assigned a value but never used.","'Avatar' is defined but never used.","'ref' is defined but never used.","'storage' is defined but never used.","'setDoc' is defined but never used.","'deleteObject' is defined but never used.","'uploadBytesResumable' is defined but never used.","'getDownloadURL' is defined but never used.","'addCategory' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'img' is assigned a value but never used.","'id' is assigned a value but never used.","'file' is assigned a value but never used.","'setIsUploading' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'previewPassport' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'QuillEd' is defined but never used.","'Editor' is defined but never used.","'setV' is assigned a value but never used.","'Checkbox' is defined but never used.","'CameraAlt' is defined but never used.","'CardContent' is defined but never used.","'display' is defined but never used.","'container' is assigned a value but never used.","'cornerSize' is assigned a value but never used.","'picSize' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'excerpt' is assigned a value but never used.","'newsList' is assigned a value but never used.","'useMediaQuery' is defined but never used.","'where' is defined but never used.","'GridFilterToolbarButton' is defined but never used.","'theme' is assigned a value but never used.","'setUsersList' is assigned a value but never used.","'auth' is defined but never used.","'openPreviewModal' is assigned a value but never used.","'enqueueSnackbar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["496"],"no-global-assign","no-unsafe-negation",{"desc":"497","fix":"498"},"Update the dependencies array to be: [userData]",{"range":"499","text":"500"},[1974,1976],"[userData]"]