[{"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/index.js":"1","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/reportWebVitals.js":"2","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/App.js":"3","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/firebase/index.js":"4","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/login/index.js":"5","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/index.js":"6","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/register/index.js":"7","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/login/index.js":"8","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js":"9","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/profile/index.js":"10","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/index.js":"11","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/home/index.js":"12","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_users/index.js":"13","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/store/slice/user.js":"14","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/store/index.js":"15","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/domain/service/index.js":"16","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/domain/helper/private-routes.js":"17","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer2.js":"18","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer1.js":"19","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/dialogs/custom-dialog.js":"20","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js":"21","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/update_category.js":"22","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js":"23","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/add_news_form.js":"24","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/categories/categories.js":"25","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/newsfeeds.js":"26","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/news_item.js":"27","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/index.js":"28","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/project_item.js":"29","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/update_project_form.js":"30","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/add_project_form.js":"31","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/placeholder/custom_no_data.js":"32","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/index.js":"33","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_category.js":"34","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_vendor.js":"35","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js":"36","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js":"37"},{"size":1405,"mtime":1638947189872,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1638747541727,"results":"40","hashOfConfig":"39"},{"size":1986,"mtime":1639784337592,"results":"41","hashOfConfig":"39"},{"size":1365,"mtime":1639102455121,"results":"42","hashOfConfig":"39"},{"size":2653,"mtime":1639784333412,"results":"43","hashOfConfig":"39"},{"size":12628,"mtime":1639787207101,"results":"44","hashOfConfig":"39"},{"size":1848,"mtime":1638987317129,"results":"45","hashOfConfig":"39"},{"size":5404,"mtime":1639784567223,"results":"46","hashOfConfig":"39"},{"size":7464,"mtime":1639029451028,"results":"47","hashOfConfig":"39"},{"size":102,"mtime":1638860925879,"results":"48","hashOfConfig":"39"},{"size":3179,"mtime":1639787207172,"results":"49","hashOfConfig":"39"},{"size":6162,"mtime":1639786929343,"results":"50","hashOfConfig":"39"},{"size":110,"mtime":1638860925854,"results":"51","hashOfConfig":"39"},{"size":443,"mtime":1638893948979,"results":"52","hashOfConfig":"39"},{"size":595,"mtime":1639782754627,"results":"53","hashOfConfig":"39"},{"size":932,"mtime":1639087214801,"results":"54","hashOfConfig":"39"},{"size":1513,"mtime":1639777329433,"results":"55","hashOfConfig":"39"},{"size":6067,"mtime":1638974738666,"results":"56","hashOfConfig":"39"},{"size":6648,"mtime":1638974738730,"results":"57","hashOfConfig":"39"},{"size":2213,"mtime":1639108163997,"results":"58","hashOfConfig":"39"},{"size":5607,"mtime":1639093247686,"results":"59","hashOfConfig":"39"},{"size":6664,"mtime":1639098991119,"results":"60","hashOfConfig":"39"},{"size":18254,"mtime":1639780069896,"results":"61","hashOfConfig":"39"},{"size":11215,"mtime":1639780069883,"results":"62","hashOfConfig":"39"},{"size":6496,"mtime":1639392639914,"results":"63","hashOfConfig":"39"},{"size":9902,"mtime":1639392639914,"results":"64","hashOfConfig":"39"},{"size":6363,"mtime":1639392639909,"results":"65","hashOfConfig":"39"},{"size":9353,"mtime":1639445255772,"results":"66","hashOfConfig":"39"},{"size":5926,"mtime":1639445459984,"results":"67","hashOfConfig":"39"},{"size":10362,"mtime":1639780069902,"results":"68","hashOfConfig":"39"},{"size":8615,"mtime":1639782601426,"results":"69","hashOfConfig":"39"},{"size":3153,"mtime":1639539688145,"results":"70","hashOfConfig":"39"},{"size":15141,"mtime":1639794925696,"results":"71","hashOfConfig":"39"},{"size":2840,"mtime":1639789552958,"results":"72","hashOfConfig":"39"},{"size":13808,"mtime":1639869707593,"results":"73","hashOfConfig":"39"},{"size":2319,"mtime":1639793976954,"results":"74","hashOfConfig":"39"},{"size":18258,"mtime":1639792703720,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"qkdhak",{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"79"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"79"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"79"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"79"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"79"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"79"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"79"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"79"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"79"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"79"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"79"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"79"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"79"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"79"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"79"},"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/index.js",["176","177","178"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Store from \"./data/store\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { Provider } from \"react-redux\";\nimport { SnackbarProvider } from \"notistack\";\nimport Button from \"@mui/material/Button\";\nimport { app, analytics, auth } from \"./data/firebase\";\n\nconst theme = createTheme();\nconst notistackRef = React.createRef();\nconst onClickDismiss = (key) => () => {\n  notistackRef.current.closeSnackbar(key);\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={Store}>\n        <SnackbarProvider\n          ref={notistackRef}\n          action={(key) => (\n            <Button\n              onClick={onClickDismiss(key)}\n              style={{\n                textTransform: \"none\",\n                color: \"white\",\n                fontFamily: \"roboto\",\n              }}\n            >\n              Dismiss\n            </Button>\n          )}\n          maxSnack={2}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          autoHideDuration={5000}\n        >\n          <App />\n        </SnackbarProvider>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n",["179","180"],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/reportWebVitals.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/App.js",["181","182"],"import \"./App.css\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Login from \"./presentation/screens/login\";\nimport Signup from \"./presentation/screens/register\";\nimport Dashboard from \"./presentation/screens/dashboard\";\nimport {\n  PrivateRouteDashboard,\n  PrivateRouteLogin,\n  PrivateRouteSignup,\n} from \"./domain/helper/private-routes\";\nimport React from \"react\";\nimport { auth } from \"./data/firebase\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setUserData } from \"./data/store/slice/user\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        console.log(\"User Data: \", user);\n        dispatch(setUserData(user));\n      }\n      // auth().onAuthStateChanged((user) => {\n      //   if (user) {\n      //     //User is signed in. Save to redux store\n      //     console.log(\"USER: \", user);\n      //     dispatch(setUserData(user));\n      //     // var uid = user.uid;\n      //   } else {\n      //     //Not signed in\n      //     dispatch(setUserData(null));\n      //   }\n      // });\n    } catch (err) {\n      console.log(err);\n    }\n    // return () => {};\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          {/* <Route path=\"about\" render={() => <Redirect to=\"about-us\" />} /> */}\n          {/* <Navigate to=\"/login\" replace  /> */}\n          {/* <Route path=\"/\" element={<Navigate replace to=\"/login\" />} /> */}\n          <Redirect exact from=\"/\" to=\"/login\" />\n          <PrivateRouteLogin path=\"/login\" exact={true}>\n            <Login />\n          </PrivateRouteLogin>\n\n          <PrivateRouteSignup exact={true} path=\"/signup\">\n            <Signup />\n          </PrivateRouteSignup>\n\n          <PrivateRouteDashboard path=\"/admin/dashboard\">\n            <Dashboard />\n          </PrivateRouteDashboard>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/firebase/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/login/index.js",["183","184"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport LoginForm from \"../../forms/login\";\nimport pattern from \"../../../assets/images/pattern.png\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst Login = () => {\n  let history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n    history.push(\"/dashboard\");\n  };\n\n  return (\n    <Grid\n      container\n      component=\"main\"\n      sx={{\n        height: \"100vh\",\n        backgroundImage: \"url(https://source.unsplash.com/random)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor: (t) =>\n          t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n      }}\n    >\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component=\"div\">\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <LoginForm />\n        </Box>\n      </Grid>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={6}\n        sx={{\n          height: \"100vh\",\n          backgroundColor: \"#0C0C77\",\n        }}\n      >\n        <div\n          className=\"login-glass\"\n          style={{\n            height: \"100vh\",\n            backgroundImage: \"url(\" + pattern + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        ></div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/index.js",["185","186","187","188","189","190"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@mui/material/AppBar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Hidden from \"@mui/material/Hidden\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { Switch, Route, withRouter, Redirect } from \"react-router-dom\";\n\nimport Drawer1 from \"../../components/dashboard/drawer/Drawer1\";\nimport Drawer2 from \"../../components/dashboard/drawer/Drawer2\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { useSnackbar } from \"notistack\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Typography from \"@mui/material/Typography\";\nimport HomePage from \"./tabs/home\";\nimport ManageApp from \"./tabs/manage_app\";\nimport ManageUsers from \"./tabs/manage_users\";\nimport Profile from \"./tabs/profile\";\n\nimport Categories from \"./tabs/manage_app/categories/categories\";\nimport NewsFeeds from \"./tabs/manage_app/news/newsfeeds\";\nimport NewsItem from \"./tabs/manage_app/news/news_item\";\nimport Projects from \"./tabs/manage_app/projects\";\nimport ProjectItem from \"./tabs/manage_app/projects/project_item\";\nimport Directories from \"./tabs/manage_app/directories\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  drawer: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    background: \"white\",\n    color: \"black\",\n    boxShadow: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(3),\n    backgroundColor: \"#F8F9FA\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  contentPadding: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    fontSize: 15,\n    margin: \"auto\",\n  },\n}));\n\nfunction Dashboard(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  // let { path, url } = useRouteMatch();\n  // const { enqueueSnackbar } = useSnackbar();\n  // const { notifications, userData } = useSelector((state) => state.user);\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [openSignoutBackDrop, setOpenSignoutBackDrop] = React.useState(false);\n  const [openNotiModal, setOpenNotiModal] = React.useState(false);\n  // const dispatch = useDispatch();\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleBackdrop = (value) => {\n    setOpenSignoutBackDrop(value);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const openMobileNotificationModal = (event) => {\n    handleMenuClose();\n    setOpenNotiModal(true);\n  };\n\n  const closeMobileNotificationModal = (event) => {\n    setOpenNotiModal(false);\n  };\n\n  // const renderMobileNotification = (\n  //   <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n  //     <List>\n  //       {notifications?.map((item, index) => (\n  //         <ListItem\n  //           divider\n  //           button\n  //           key={index}\n  //           onClick={() => handleMenuClose(item)}\n  //           style={{ display: \"flex\", flexDirection: \"column\" }}\n  //         >\n  //           <Typography>{item?.Body}</Typography>\n  //           {/* <span style={{ fontSize: 12 }} > {item.date} </span> */}\n  //         </ListItem>\n  //       ))}\n  //     </List>\n  //   </div>\n  // );\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem\n        style={{ alignItems: \"center\" }}\n        onClick={openMobileNotificationModal}\n      >\n        <IconButton aria-label=\"show new notifications\" color=\"inherit\">\n          <Badge badgeContent={notifications?.length} color=\"error\">\n            <NotificationsNoneIcon color=\"secondary\" />\n          </Badge>\n        </IconButton>\n        <Typography style={{ marginLeft: 3 }}>Notifications</Typography>\n      </MenuItem> */}\n    </Menu>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n  let resultTrail;\n  // const initials = userData?.First_Name?.slice(0, 1).toUpperCase() + userData?.Surname?.slice(0, 1).toUpperCase();\n  // const trailName = userData?.First_Name + \" \" + userData?.Surname;\n\n  // if (trailName?.length > 12) {\n  //     resultTrail = trailName?.slice(0, 12) + \"...\";\n  // }\n  // else {\n  //     resultTrail = trailName?.slice(0, 12);\n  // }\n\n  return (\n    <div className={classes.root}>\n      <Backdrop style={{ zIndex: 5000 }} open={openSignoutBackDrop}>\n        <CircularProgress\n          size={90}\n          thickness={3.0}\n          style={{ color: \"white\" }}\n        />\n      </Backdrop>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {1 > 2 && (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  style={{ margin: \"auto\", paddingRight: 3 }}\n                >\n                  {/* {resultTrail} */}\n                </Typography>\n                {/* <Avatar className={classes.avatar}\n                                    src={userData?.Display_Image !== ''\n                                        ? userData?.Display_Image : ''}>\n                                    {userData?.Display_Image !== ''\n                                        ? '' : initials}\n                                </Avatar> */}\n              </div>\n            )}\n            <IconButton\n              aria-label=\"show 17 new notifications\"\n              color=\"inherit\"\n              edge=\"end\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              //onClick={handleNotificationMenuOpen}\n            >\n              {/* <Badge\n                badgeContent={notifications?.length}\n                color=\"error\"\n                style={{ color: \"red\" }}\n              >\n                <NotificationsNoneIcon\n                  style={{ color: theme.palette.secondary.main }}\n                />\n              </Badge> */}\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <SearchIcon style={{ color: theme.palette.secondary.main }} />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer1\n            setMobileOpen={setMobileOpen}\n            mobileOpen={mobileOpen}\n            handleBackdrop={handleBackdrop}\n            drawerVariant=\"temporary\"\n            anchor=\"left\"\n            handleDrawerToggle={handleDrawerToggle}\n            window={window}\n          />\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer2 handleBackdrop={handleBackdrop} />\n        </Hidden>\n      </nav>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* Main switch routing here */}\n        <div className={classes.contentPadding}>\n          <Switch>\n            <Redirect\n              exact\n              from=\"/admin/dashboard\"\n              to=\"/admin/dashboard/home\"\n            />\n            <Route path=\"/admin/dashboard/home\" exact={true}>\n              <HomePage />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app\" exact={true}>\n              <ManageApp />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-users\" exact={true}>\n              <ManageUsers />\n            </Route>\n\n            <Route path=\"/admin/dashboard/profile\" exact={true}>\n              <Profile />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/categories\" exact={true}>\n              <Categories />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/news-feeds\" exact={true}>\n              <NewsFeeds />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/projects\" exact={true}>\n              <Projects />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/vendors\" exact={true}>\n              <Directories />\n            </Route>\n\n            <Route\n              path=\"/admin/dashboard/manage-app/news-feeds:id\"\n              exact={true}\n            >\n              <NewsItem />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/projects:id\" exact={true}>\n              <ProjectItem />\n            </Route>\n          </Switch>\n        </div>\n        {/* <div style={{\n                    flexDirection: 'column', marginTop: 'auto', justifyContent: 'flex-start',\n                    alignItems: 'center', paddingTop: 10, paddingBottom: 10, paddingLeft: theme.spacing(1),\n                    backgroundColor: theme.palette.background.paper, marginRight: 2, marginLeft: 2\n                }}>\n                    <FooterBottom />\n                </div> */}\n      </main>\n    </div>\n  );\n}\n\nDashboard.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default withRouter(Dashboard);\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/register/index.js",["191","192"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport SignupForm from \"../../forms/register\";\n\nconst Signup = () => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n  };\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n      <CssBaseline />\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={6}\n        sx={{\n          backgroundImage: \"url(https://source.unsplash.com/random)\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6}>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" gutterBottom>\n            Sign Up\n          </Typography>\n          <SignupForm />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/login/index.js",["193"],"import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { signInUser } from \"../../../domain/service\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n// import { addDoc, collection } from \"firebase/firestore\";\nimport {\n  db,\n  doc,\n  getDoc,\n  setPersistence,\n  browserSessionPersistence,\n  auth,\n  onSnapshot,\n} from \"../../../data/firebase\";\n\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { RefreshOutlined } from \"@mui/icons-material\";\n\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../data/store/slice/user\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst LoginForm = () => {\n  const [formValues, setFormValues] = React.useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submitForm = async (e) => {\n    setIsLoading(true);\n\n    setPersistence(auth, browserSessionPersistence)\n      .then((re) => {\n        signInUser(formValues.email, formValues.password)\n          .then(async (resp) => {\n            //Now get user data\n            // const docRef = doc(db, \"users\", resp.user.uid);\n            onSnapshot(doc(db, \"users\", resp.user.uid), (doc) => {\n              console.log(\"Current data: \", doc.data());\n              dispatch(setUserData(doc.data()));\n              history.push(\"/admin/dashboard\");\n            });\n            // const docSnap = await getDoc(docRef);\n            // if (docSnap.exists()) {\n\n            // } else {\n            //   console.log(\"No such document!\");\n            // }\n          })\n          .catch((err) => {\n            console.log(\"LOGIN ERR: \", err?.message);\n          });\n        //\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        // const errorCode = error.code;\n        // const errorMessage = error.message;\n        console.log(\"LOGIN CODE: \", error?.code);\n        console.log(\"LOGIN ERR: \", error?.message);\n      });\n  };\n\n  return (\n    <div>\n      <ValidatorForm onSubmit={submitForm} sx={{ mt: 1 }}>\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          value={formValues.email}\n          onChange={handleChange}\n          autoComplete=\"email\"\n          placeholder=\"Email Address\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        {/* <FormControlLabel\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\n          label=\"Remember me\"\n        /> */}\n        <Button\n          disabled={isLoading}\n          endIcon={\n            isLoading && (\n              <CircularProgress>\n                <RefreshOutlined />\n              </CircularProgress>\n            )\n          }\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Log In\n        </Button>\n        <Grid container>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\">\n              Forgot password?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"/signup\" variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n        <Copyright sx={{ mt: 5 }} />\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js",["194","195","196","197","198"],"import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { createUser } from \"../../../domain/service\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  db,\n  doc,\n  getDoc,\n  setDoc,\n  setPersistence,\n  browserSessionPersistence,\n  auth,\n} from \"../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../data/store/slice/user\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst SignupForm = () => {\n  const [formValues, setFormValues] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submitForm = (e) => {\n    setPersistence(auth, browserSessionPersistence)\n      .then(() => {\n        createUser(formValues.email, formValues.password)\n          .then(async (resp) => {\n            try {\n              setDoc(doc(db, \"users\", resp.user.uid), {\n                id: resp.user.uid,\n                firstname: formValues.firstName,\n                lastname: formValues.lastName,\n                phone: formValues.phone,\n                email: formValues.email,\n                userType: \"super\",\n              })\n                .then(async (result) => {\n                  //Fetch user data and save to redux store\n                  const docRef = doc(db, \"users\", resp.user.uid);\n                  const docSnap = await getDoc(docRef);\n                  if (docSnap.exists()) {\n                    dispatch(setUserData(docSnap.data));\n                    history.push(\"/admin/dashboard\");\n                  } else {\n                    console.log(\"No such document!\");\n                  }\n                })\n                .catch((err) => {});\n            } catch (error) {\n              console.log(\"ERR: \", error?.message);\n            }\n          })\n          .catch((err) => {\n            console.log(\"ERR: \", err?.message);\n          });\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n  };\n\n  // const formik = useFormik({\n  //   initialValues: {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     phone: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   },\n  //   validationSchema: validationSchema,\n\n  //   onSubmit: (values) => {\n  //     alert(\"Heergf\");\n  //     // try {\n  //     //   const resp = await createUser(values.email, values.password);\n\n  //     //   if (resp.user) {\n  //     //     // Add a second document with a generated ID.\n  //     //     try {\n  //     //       const docRef = await addDoc(collection(db, \"users\"), {\n  //     //         id: resp.user.uid,\n  //     //         firstname: values.firstName,\n  //     //         lastname: values.lastName,\n  //     //         phone: values.phone,\n  //     //         email: values.email,\n  //     //         userType: \"super\",\n  //     //       });\n  //     //       console.log(\"Document written with ID: \", docRef.id);\n  //     //     } catch (e) {\n  //     //       console.error(\"Error adding document: \", e);\n  //     //     }\n  //     //   }\n  //     // } catch (error) {}\n  //   },\n  // });\n\n  return (\n    <div>\n      <ValidatorForm onSubmit={submitForm} sx={{ mt: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item md={6} xs={12} sm={12}>\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First name\"\n              name=\"firstName\"\n              value={formValues.firstName}\n              onChange={handleChange}\n              type=\"text\"\n              autoFocus\n              placeholder=\"First name\"\n              variant=\"outlined\"\n              validators={[\"required\"]}\n              errorMessages={[\"First name is required\"]}\n            />\n          </Grid>\n\n          <Grid item md={6} xs={12} sm={12}>\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"lastName\"\n              label=\"Last name\"\n              name=\"lastName\"\n              value={formValues.lastName}\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"Last name\"\n              variant=\"outlined\"\n              validators={[\"required\"]}\n              errorMessages={[\"Last name is required\"]}\n            />\n          </Grid>\n        </Grid>\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          value={formValues.email}\n          onChange={handleChange}\n          autoComplete=\"email\"\n          placeholder=\"Email Address\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 2, mb: 2 }}\n        >\n          Sign In\n        </Button>\n        <Typography variant=\"body1\" component=\"h1\">\n          Or\n        </Typography>\n        {/* <Button fullWidth variant=\"contained\" sx={{ mt: 1, mb: 2 }}>\n          Sign In With Google\n        </Button> */}\n        <Link href=\"#\" variant=\"body2\">\n          {\"Already have an account? Login\"}\n        </Link>\n        {/* <Copyright sx={{ mt: 5 }} /> */}\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/profile/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/index.js",["199"],"import {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport categoryImage from \"../../../../../assets/images/category_ndua_admin.jpeg\";\nimport directoryImge from \"../../../../../assets/images/directories_ndua_admin.jpeg\";\nimport newsImage from \"../../../../../assets/images/news_ndua_admin.jpeg\";\n// import vendorsLogo from \"../../../../../assets/images/vendors_ndua_admin.jpeg\";\nimport projectsImage from \"../../../../../assets/images/projects_ndua_admin.jpeg\";\nimport adsImage from \"../../../../../assets/images/ads_ndua_admin.jpeg\";\nimport Grid from \"@mui/material/Grid\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 236,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, title, excerpt, to } = props;\n  const history = useHistory();\n\n  return (\n    <Card elevation={4} className={classes.root}>\n      <CardContent>\n        <CardMedia image={image} className={classes.image} />\n        <br />\n        <div className={classes.row}>\n          <div className={classes.column}>\n            <Typography variant=\"body1\" color=\"blue\">\n              {title}\n            </Typography>\n          </div>\n          <div>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => history.push(to)}\n            >\n              View\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst ManageApp = () => {\n  let list = [\n    {\n      title: \"Categories\",\n      desc: \"View/Manage app categories\",\n      to: \"/admin/dashboard/manage-app/categories\",\n      image: categoryImage,\n    },\n    {\n      title: \"News Feeds\",\n      desc: \"View/Manage app news feeds\",\n      to: \"/admin/dashboard/manage-app/news-feeds\",\n      image: newsImage,\n    },\n    {\n      title: \"Projects\",\n      desc: \"View/Manage app projects\",\n      to: \"/admin/dashboard/manage-app/projects\",\n      image: projectsImage,\n    },\n    {\n      title: \"Directories\",\n      desc: \"View/Manage app directories\",\n      to: \"/admin/dashboard/manage-app/vendors\",\n      image: directoryImge,\n    },\n    {\n      title: \"Ads Center\",\n      desc: \"View/Manage adverts\",\n      to: \"/ads-center\",\n      image: adsImage,\n    },\n  ];\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={{ xs: 2, md: 2 }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n      >\n        {list?.map((_, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <CardItem\n              image={list[index].image}\n              title={list[index].title}\n              excerpt={list[index].desc}\n              to={list[index].to}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ManageApp;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/home/index.js",["200","201","202","203","204","205","206","207","208","209"],"import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport { useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  onSnapshot,\n  query,\n  where,\n  collection,\n  db,\n} from \"../../../../../data/firebase\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridHeader,\n  GridFilterToolbarButton,\n  GridToolbarExport,\n} from \"@mui/x-data-grid\";\n// import GridColumnsToolbarButton\nimport Avatar from \"@mui/material/Avatar\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Divider from \"@mui/material/Divider\";\nimport CustomNoRowsOverlay from \"../../../../components/misc/placeholder/custom_no_data\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  button: {\n    textTransform: \"none\",\n    fontSize: 11,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CustomToolbar = () => {\n  const theme = useTheme();\n\n  return (\n    <GridToolbarContainer\n      color=\"secondary\"\n      style={{\n        display: \"flex\",\n        padding: 16,\n      }}\n    >\n      <Paper style={{ padding: 6, borderRadius: 10 }}>\n        <GridHeader />\n      </Paper>\n      {/* <Paper\n        style={{ padding: 6, borderRadius: 10, marginLeft: 5, marginRight: 5 }}\n      >\n        <GridFilterToolbarButton />\n      </Paper> */}\n      <Paper\n        style={{\n          alignSelf: \"flex-end\",\n          padding: 6,\n          marginLeft: \"auto\",\n          borderRadius: 10,\n        }}\n      >\n        <GridToolbarExport />\n      </Paper>\n    </GridToolbarContainer>\n  );\n};\n\nconst HomePage = () => {\n  const classes = useStyles();\n\n  const [projectsList, setProjectsList] = React.useState(null);\n  const [newsList, setNewsList] = React.useState(null);\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  const [usersList, setUsersList] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n    return () => {\n      setCategoriesList(null);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"news\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const news = [];\n      querySnapshot.forEach((doc) => {\n        news.push(doc.data());\n      });\n      setNewsList(news);\n    });\n    return () => {\n      setNewsList(null);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"projects\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const proj = [];\n      querySnapshot.forEach((doc) => {\n        proj.push(doc.data());\n      });\n      setProjectsList(proj);\n    });\n    return () => {\n      setProjectsList(null);\n    };\n  }, []);\n\n  // React.useEffect(() => {\n  //   const q = query(collection(db, \"users\"), where(\"userType\", \"==\", \"public\"));\n  //   const unsubscribe = onSnapshot(q, (querySnapshot) => {\n  //     const usrs = [];\n  //     querySnapshot.forEach((doc) => {\n  //       usrs.push(doc.data());\n  //     });\n  //     setUsersList(usrs.slice(0, 5));\n  //   });\n  //   return () => {\n  //     setUsersList([]);\n  //   };\n  // }, []);\n\n  // if (usersList) {\n  //   console.log(\"Filtered: \", usersList);\n  // }\n\n  const columns = [\n    {\n      field: \"photo\",\n      headerName: \"Image\",\n      width: 75,\n      renderCell: (params) => (\n        <Avatar alt=\"Profile Picture\" src={params.value} />\n      ),\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 180,\n      valueGetter: (params) =>\n        `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`,\n    },\n    {\n      field: \"email\",\n      headerName: \"Email Address\",\n      width: 110,\n      editable: true,\n    },\n    {\n      field: \"phone\",\n      headerName: \"Phone\",\n      width: 110,\n      editable: true,\n    },\n  ];\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={7} md={7}>\n          <div style={{ display: \"flex\", height: \"100%\", padding: 4 }}>\n            <div style={{ flexGrow: 1 }}>\n              {usersList && (\n                <DataGrid\n                  rows={usersList}\n                  columns={columns}\n                  pageSize={5}\n                  rowsPerPageOptions={[5]}\n                  checkboxSelection\n                  disableSelectionOnClick\n                  components={{\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                    Toolbar: CustomToolbar,\n                  }}\n                />\n              )}\n            </div>\n          </div>\n        </Grid>\n\n        <Grid item xs={12} sm={5} md={5}>\n          <Card sx={{ mb: 3, mt: 3 }}>\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total categories</Typography>\n              <Typography>{categoriesList?.length}</Typography>\n            </div>\n            <Divider color=\"primary\" />\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total news feeds</Typography>\n              <Typography>{newsList?.length}</Typography>\n            </div>\n            <Divider color=\"primary\" />\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total projects</Typography>\n              <Typography>{projectsList?.length}</Typography>\n            </div>\n            <Divider color=\"primary\" />\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total vendors</Typography>\n              <Typography>{0}</Typography>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_users/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/store/slice/user.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/store/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/domain/service/index.js",["210","211"],"import { auth } from \"../../data/firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  setPersistence,\n  browserSessionPersistence,\n  setDoc,\n  doc,\n  db,\n} from \"../../data/firebase/\";\n\nexport const createUser = async (email, pass) => {\n  try {\n    return await createUserWithEmailAndPassword(auth, email, pass);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signInUser = async (email, pass) => {\n  try {\n    return await signInWithEmailAndPassword(auth, email, pass);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addCategory = async (id, name, image) => {\n  // Add a new document in collection \"cities\"\n  return await setDoc(doc(db, \"categories\", id), {\n    id: id,\n    name: name,\n    url: image,\n  });\n  //   db.collection(\"categories\").doc(id).set({\n  //     id: id,\n  //     name: name,\n  //     url: image,\n  //   });\n};\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/domain/helper/private-routes.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer2.js",["212","213","214"],"import React from \"react\";\nimport { Drawer as MUIDrawer } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport DashBoardIcon from \"@mui/icons-material/DashboardOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport logo from \"../../../../assets/images/icon_blue.png\";\n\nimport { useSnackbar } from \"notistack\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"275px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  listRoot: {\n    width: \"100%\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Drawer2 = (props) => {\n  const classes = useStyles();\n  const { history } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  // const { userStatus, userData } = useSelector((state) => state.user);\n  // const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const container =\n    props.window !== undefined ? () => window().document.body : undefined;\n\n  const drawerItems = [\n    {\n      text: \"Dashboard\",\n      icon: (\n        <DashBoardIcon\n          style={\n            selectedIndex === 0 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/\",\n    },\n    {\n      text: \"Manage App\",\n      icon: (\n        <SchoolOutlinedIcon\n          style={\n            selectedIndex === 1 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-app\",\n    },\n    {\n      text: \"Manage Users\",\n      icon: (\n        <PeopleOutlinedIcon\n          style={\n            selectedIndex === 2 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-users\",\n    },\n    {\n      text: \"Profile\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/profile\",\n    },\n  ];\n\n  let picSize, cornerSize;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const md = useMediaQuery(theme.breakpoints.only(\"md\"));\n  if (xs) {\n    cornerSize = 76;\n    picSize = 70;\n  } else if (sm) {\n    cornerSize = 96;\n    picSize = 90;\n  } else if (md) {\n    cornerSize = 116;\n    picSize = 110;\n  } else {\n    cornerSize = 136;\n    picSize = 130;\n  }\n\n  const handleListItemClick = (to, index) => {\n    history.push(to);\n    setSelectedIndex(index);\n  };\n\n  const signOut = async () => {\n    props.handleBackdrop(true);\n    try {\n      props.handleBackdrop(false);\n      enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n      history.replace({\n        pathname: \"/community-rep\",\n      });\n    } catch (err) {\n      enqueueSnackbar(\n        `${\n          err?.response?.data?.error ||\n          err?.response?.statusText ||\n          \"Check your internet connection.\"\n        }`,\n        { variant: \"error\" }\n      );\n    } finally {\n      history.go(0);\n    }\n  };\n\n  const myDrawer = (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        className={classes.toolbar}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <a href=\"/\">\n          <img src={logo} style={{ width: 100 }} alt=\"site logo\" />\n        </a>\n      </div>\n      <Divider />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <List className={classes.listRoot}>\n          {drawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (4 > 2) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n\n      <div\n        style={{\n          flexDirection: \"column\",\n          marginTop: \"auto\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          padding: 24,\n        }}\n      >\n        <Button\n          startIcon={<PowerSettingsNewIcon />}\n          style={{ textTransform: \"none\" }}\n          onClick={signOut}\n        >\n          Sign Out\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <MUIDrawer\n      variant=\"permanent\"\n      open\n      classes={{ paper: classes.drawerPaper }}\n    >\n      {myDrawer}\n    </MUIDrawer>\n  );\n};\n\nexport default withRouter(Drawer2);\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer1.js",["215","216","217"],"import React from \"react\";\nimport { Drawer as MUIDrawer } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport DashBoardIcon from \"@mui/icons-material/DashboardOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport logo from \"../../../../assets/images/icon_blue.png\";\n// import {\n//   setUserRole,\n//   setUserData,\n//   setUserStatus,\n// } from \"../../../../../CAMPUS-web/src/redux/slice/user\";\nimport { useSnackbar } from \"notistack\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"275px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  listRoot: {\n    width: \"100%\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Drawer1 = (props) => {\n  const classes = useStyles();\n  const { history, mobileOpen, setMobileOpen } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  // const { userStatus, userData } = useSelector((state) => state.user);\n  // const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const container =\n    props.window !== undefined ? () => window().document.body : undefined;\n\n  const drawerItems = [\n    {\n      text: \"Dashboard\",\n      icon: (\n        <DashBoardIcon\n          style={\n            selectedIndex === 0 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/\",\n    },\n    {\n      text: \"Manage App\",\n      icon: (\n        <SchoolOutlinedIcon\n          style={\n            selectedIndex === 1 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-app\",\n    },\n    {\n      text: \"Manage Users\",\n      icon: (\n        <PeopleOutlinedIcon\n          style={\n            selectedIndex === 2 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-users\",\n    },\n    {\n      text: \"Profile\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/profile\",\n    },\n  ];\n\n  let picSize, cornerSize;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const md = useMediaQuery(theme.breakpoints.only(\"md\"));\n  if (xs) {\n    cornerSize = 76;\n    picSize = 70;\n  } else if (sm) {\n    cornerSize = 96;\n    picSize = 90;\n  } else if (md) {\n    cornerSize = 116;\n    picSize = 110;\n  } else {\n    cornerSize = 136;\n    picSize = 130;\n  }\n\n  const handleListItemClick = (to, index) => {\n    history.push(to);\n    setSelectedIndex(index);\n    setMobileOpen(!mobileOpen);\n  };\n\n  const signOut = async () => {\n    props.handleBackdrop(true);\n    try {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"userType\");\n      // await axios.post(\"/logout/admins/\" + userData?._id);\n\n      props.handleBackdrop(false);\n      enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n      history.replace({\n        pathname: \"/community-rep\",\n      });\n    } catch (err) {\n      enqueueSnackbar(\n        `${\n          err?.response?.data?.error ||\n          err?.response?.statusText ||\n          \"Check your internet connection.\"\n        }`,\n        { variant: \"error\" }\n      );\n    } finally {\n      history.go(0);\n    }\n  };\n\n  const myDrawer = (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        className={classes.toolbar}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <a href=\"/\">\n          <img src={logo} style={{ width: 100 }} alt=\"site logo\" />\n        </a>\n      </div>\n      <Divider />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <List className={classes.listRoot}>\n          {drawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (1 === 1) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n\n      <div\n        style={{\n          flexDirection: \"column\",\n          marginTop: \"auto\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          padding: 24,\n        }}\n      >\n        <Button\n          startIcon={<PowerSettingsNewIcon />}\n          style={{ textTransform: \"none\" }}\n          onClick={signOut}\n        >\n          Sign Out\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <MUIDrawer\n      variant={props.drawerVariant}\n      container={container}\n      className={classes.drawer}\n      anchor={props.anchor}\n      open={mobileOpen}\n      onClose={props.handleDrawerToggle}\n      classes={{ paper: classes.drawerPaper }}\n      ModalProps={{\n        keepMounted: true, // Better open performance on mobile.\n      }}\n    >\n      {myDrawer}\n    </MUIDrawer>\n  );\n};\n\nexport default withRouter(Drawer1);\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/dialogs/custom-dialog.js",["218","219","220"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Modal from \"@mui/material/Modal\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    //top: `${top}%`,\n    margin: \"auto\",\n    minWidth: 200,\n    //left: `${left}%`,\n    //transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // minWidth: '20%',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    borderRadius: 16,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CustomDialog = (props) => {\n  const { title, open, handleClose, bodyComponent } = props;\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography\n          variant=\"h6\"\n          style={{ fontFamily: \"roboto\", fontWeight: \"600\" }}\n        >\n          {title}\n        </Typography>\n\n        <IconButton onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <br />\n      {bodyComponent}\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        disablePortal={true}\n        disableEscapeKeyDown={true}\n        // disableBackdropClick={false}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default CustomDialog;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js",["221","222"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytes,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst CategoryForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createCategory = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        // console.log(\"Upload is \" + progress + \"% done\");\n        setProgress(uprogress);\n      },\n      (error) => {\n        // Handle unsuccessful uploads\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setDoc(doc(db, \"categories\", `img_${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            url: downloadURL,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New category added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createCategory}>\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n        <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        />\n\n        <div>\n          {previewPassport && (\n            <Avatar\n              variant=\"rounded\"\n              alt=\"Passport\"\n              src={previewPassport}\n              className={classes.image}\n            />\n          )}\n        </div>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default CategoryForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/update_category.js",["223","224"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditCategoryForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, name, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNew = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"categories\", \"img_\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              url: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Category updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`Error updating category`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateCategory = async (e) => {\n    setIsLoading(true);\n    if (!previewPassport) {\n      console.log(\"ID: \", id);\n      const mRef = doc(db, \"categories\", \"img_\" + id);\n      try {\n        await updateDoc(mRef, {\n          title: formValues.title,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Category name updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`Error updating name`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      setFormValues({ title: formValues.title ? formValues.title : name });\n      const fileRef = ref(storage, \"categories/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          // File deleted now upload new file,\n          //get download url and save to firestore\n          setIsLoading(false);\n          uploadNew();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateCategory}>\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title ? formValues.title : name}\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n        <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        />\n\n        <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditCategoryForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js",["225","226"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditNewsForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title,\n    subTitle,\n    img,\n    category,\n    body,\n    authorName,\n    authorPhoto,\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \",\n    image: \"\",\n    category: \"\",\n    subTitle: \" \",\n    body: \" \",\n    createdAt: \"\",\n    authorName: \" \",\n    authorPhoto: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewAuthorPhoto = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              authorPhoto: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateNews = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      subTitle: formValues.subTitle ? formValues.subTitle : subTitle,\n      authorName: formValues.authorName ? formValues.authorName : authorName,\n      category: formValues.category ? formValues.category : category,\n      body: formValues.body ? formValues.body : body,\n    });\n    if (!previewImage && !previewAuthor) {\n      //No image is changed. So update all text\n      console.log(\"ID: \", id);\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"news\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          subTitle: formValues.subTitle,\n          authorName: formValues.authorName,\n          category: formValues.category,\n          body: formValues.body,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`News title updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else if (!previewImage && previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else {\n      const fileRef = ref(storage, \"news/\" + id);\n      const fileRef2 = ref(storage, \"news/img_\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n              let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"news\", \"\" + id);\n                        await updateDoc(mRef, {\n                          title: formValues.title,\n                          subTitle: formValues.subTitle,\n                          authorName: formValues.authorName,\n                          category: formValues.category,\n                          body: formValues.body,\n                          updatedAt: timeNow,\n                          image: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"news\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    authorPhoto: download,\n                                  });\n                                  setOpen(false);\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `Newsfeed updated successfully`,\n                                    {\n                                      variant: \"success\",\n                                    }\n                                  );\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(`${error?.message}`, {\n                                    variant: \"error\",\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {}\n                    }\n                  );\n                }\n              );\n            })\n            .catch((err) => {});\n          // setIsLoading(false);\n          // uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category ? formValues.category : category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"subTitle\"\n          label=\"News subtitle (optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.subTitle === \" \"\n              ? subTitle\n              : !formValues.subTitle\n              ? \"\"\n              : formValues.subTitle\n          }\n          onChange={handleChange}\n          name=\"subTitle\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type news here\"\n          name=\"body\"\n          label=\"News content\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  formValues.authorName === \" \"\n                    ? authorName\n                    : !formValues.authorName\n                    ? \"\"\n                    : formValues.authorName\n                }\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                alt=\"Author\"\n                src={previewAuthor ? previewAuthor : authorPhoto}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditNewsForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/add_news_form.js",["227"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  updateDoc,\n  onSnapshot,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddNewsForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    category: \"\",\n    subTitle: \" \",\n    body: \"\",\n    createdAt: \"\",\n    authorName: \"\",\n    authorPhoto: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createNews = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"news\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            category: formValues.category,\n            subTitle: formValues.subTitle,\n            authorName: formValues.authorName,\n            authorPhoto: \" \",\n            body: formValues.body,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              //Now upload author image\n              const tmn = timeNow.getTime();\n              setIsUploading(true);\n              setIsLoading(false);\n              uploadTask2.on(\n                \"state_changed\",\n                (snapshot2) => {\n                  const prog =\n                    (snapshot2.bytesTransferred / snapshot2.totalBytes) * 100;\n                  setProgress(prog);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask2.snapshot.ref).then(\n                    async (download) => {\n                      setIsUploading(false);\n                      setIsLoading(true);\n                      try {\n                        const mRef = doc(db, \"news\", \"\" + tmn);\n                        await updateDoc(mRef, {\n                          authorPhoto: download,\n                        });\n                        setOpen(false);\n                        setIsLoading(false);\n                        enqueueSnackbar(`News item added successfully`, {\n                          variant: \"success\",\n                        });\n                      } catch (error) {\n                        setIsLoading(false);\n                        enqueueSnackbar(`${error?.message}`, {\n                          variant: \"error\",\n                        });\n                      }\n                    }\n                  );\n                }\n              );\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"subTitle\"\n          label=\"News subtitle (optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.subTitle}\n          onChange={handleChange}\n          name=\"subTitle\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type news here\"\n          name=\"body\"\n          label=\"News content\"\n          value={formValues.body}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.authorPhoto}\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                validators={[\"required\"]}\n                errorMessages={[\"Author's image is required\"]}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.authorName}\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewAuthor && (\n                <Avatar\n                  alt=\"Author\"\n                  src={previewAuthor}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddNewsForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/categories/categories.js",["228","229","230","231"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport CategoryForm from \"../../../../../forms/category/new_category_form\";\nimport EditCategoryForm from \"../../../../../forms/category/update_category\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { display } from \"@mui/system\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CategoryItem = (props) => {\n  const { image, name, id } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteCategory = () => {\n    const fileRef = ref(storage, \"categories/img_\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // File deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"categories\", \"img_\" + id));\n          setOpenDelete(false);\n          enqueueSnackbar(`Item deleted successfully`, { variant: \"success\" });\n        } catch (error) {\n          setOpenDelete(false);\n          enqueueSnackbar(`Item not deleted. Try again`, { variant: \"error\" });\n        }\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteCategory}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditCategoryForm setOpen={setOpen} img={image} name={name} id={id} />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Category\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3}>\n        <CardMedia image={image} className={classes.cardMedia} />\n        <Divider />\n        <div className={classes.row}>\n          <Typography fontSize={18} color=\"black\" padding={1}>\n            {name}\n          </Typography>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n      </Card>\n    </>\n  );\n};\n\nconst Categories = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n      console.log(\"Current cities in CA: \", categories);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create New Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<CategoryForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Categories\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Category\n        </Button>\n      </div>\n      <br />\n      <div className={classes.main}>\n        {categoriesList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {categoriesList?.map((_, index) => (\n              <Grid item xs={2} sm={4} md={4} key={index}>\n                <CategoryItem\n                  id={categoriesList[index]?.id}\n                  image={categoriesList[index]?.url}\n                  name={categoriesList[index].title}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/newsfeeds.js",["232"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport EditNewsForm from \"../../../../../forms/news/update_news_form\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport AddNewsForm from \"../../../../../forms/news/add_news_form\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 386,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst NewsItemCard = (props) => {\n  const {\n    image,\n    title,\n    subTitle,\n    id,\n    authorName,\n    authorPhoto,\n    body,\n    date,\n    category,\n    item,\n  } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteNews = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"news/\" + id);\n    const fileRef2 = ref(storage, \"news/img_\" + id);\n\n    deleteObject(fileRef)\n      .then(() => {\n        deleteObject(fileRef2)\n          .then(async () => {\n            // Images deleted now delete from firestore,\n            try {\n              await deleteDoc(doc(db, \"news\", \"\" + id));\n              enqueueSnackbar(`Item deleted successfully`, {\n                variant: \"success\",\n              });\n            } catch (error) {\n              console.log(\"ERR: Del: \", error);\n              enqueueSnackbar(`Item not deleted. Try again`, {\n                variant: \"error\",\n              });\n            }\n          })\n          .catch((err) => {});\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteNews}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update News\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditNewsForm\n            setOpen={setOpen}\n            img={image}\n            title={title}\n            id={id}\n            subTitle={subTitle}\n            authorName={authorName}\n            authorPhoto={authorPhoto}\n            body={body}\n            category={category}\n            date={date}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete News\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <Avatar\n              alt=\"Passport\"\n              src={authorPhoto}\n              className={classes.avatar}\n            />\n            <div className={classes.column}>\n              <Typography variant=\"body2\" fontSize={14}>\n                {authorName}\n              </Typography>\n              <Typography variant=\"body2\" fontSize={13}>\n                {date}\n              </Typography>\n            </div>\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/admin/dashboard/manage-app/news-feeds:\" + item?.id,\n              state: {\n                title: item?.title,\n                subTitle: item?.subTitle,\n                category: item?.category,\n                image: item?.image,\n                body: item?.body,\n                authorName: item?.authorName,\n                authorPhoto: item?.authorPhoto,\n                date: item?.createdAt,\n                id: item?.id,\n              },\n            })\n          }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {title?.length > 75 ? title?.substring(0, 75) + \"...\" : title}\n            </Typography>\n          </div>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            gutterBottom\n            fontSize={12}\n            color=\"black\"\n            paddingLeft={1}\n            paddingBottom={1}\n          >\n            {category}\n          </Typography>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {body?.length > 150 ? body?.substring(0, 150) + \"...\" : body}\n          </Typography>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst NewsFeeds = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [newsList, setNewsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"news\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const news = [];\n      querySnapshot.forEach((doc) => {\n        news.push(doc.data());\n      });\n      setNewsList(news);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create NewsFeed\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddNewsForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            News Feeds\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add News\n        </Button>\n      </div>\n      <br />\n      <div>\n        {newsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {newsList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <NewsItemCard\n                  item={item}\n                  id={newsList[index]?.id}\n                  image={newsList[index]?.image}\n                  title={newsList[index]?.title}\n                  subTitle={newsList[index]?.subTitle}\n                  authorName={newsList[index]?.authorName}\n                  authorPhoto={newsList[index]?.authorPhoto}\n                  body={newsList[index]?.body}\n                  // date={newsList[index]?.createdAt}\n                  category={newsList[index]?.category}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {newsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NewsFeeds;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/news_item.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/index.js",["233","234","235","236","237","238"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport EditNewsForm from \"../../../../../forms/news/update_news_form\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport AddNewsForm from \"../../../../../forms/news/add_news_form\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport EditProjectForm from \"../../../../../forms/projects/update_project_form\";\nimport AddProjectForm from \"../../../../../forms/projects/add_project_form\";\nimport format from \"date-fns/format\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 360,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst ProjectsItemCard = (props) => {\n  const { image, title, id, createdAt, state, item, updatedAt, desc } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteProject = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"projects/\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        try {\n          await deleteDoc(doc(db, \"projects\", \"\" + id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteProject}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Project\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditProjectForm\n            setOpen={setOpen}\n            img={image}\n            title={title}\n            id={id}\n            state={state}\n            desc={desc}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete News\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <div className={classes.column}>\n              <Typography variant=\"body2\" fontSize={14}>\n                {state}\n              </Typography>\n              <Typography variant=\"body2\" fontSize={13}>\n                {`${new Date(updatedAt?.seconds * 1000).toLocaleDateString(\n                  \"en-US\"\n                )}`}\n              </Typography>\n            </div>\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/admin/dashboard/manage-app/projects:\" + item?.id,\n              state: {\n                id: item?.id,\n                title: item?.title,\n                desc: item?.description,\n                state: item?.state,\n                image: item?.image,\n                createdAt: item?.createdAt,\n                updatedAt: item?.updatedAt,\n              },\n            })\n          }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {title?.length > 75 ? title?.substring(0, 75) + \"...\" : title}\n            </Typography>\n          </div>\n\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {desc?.length > 100 ? desc?.substring(0, 100) + \"...\" : desc}\n          </Typography>\n          <div className={classes.subRow}>\n            <Button variant=\"text\" size=\"small\">\n              View\n            </Button>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Projects = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [projectsList, setProjectsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"projects\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const proj = [];\n      querySnapshot.forEach((doc) => {\n        proj.push(doc.data());\n      });\n      setProjectsList(proj);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create Project\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddProjectForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Projects\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Project\n        </Button>\n      </div>\n      <br />\n      <div>\n        {projectsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {projectsList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <ProjectsItemCard\n                  item={item}\n                  id={projectsList[index]?.id}\n                  image={projectsList[index]?.image}\n                  title={projectsList[index]?.title}\n                  desc={projectsList[index]?.description}\n                  state={projectsList[index]?.state}\n                  createdAt={projectsList[index]?.createdAt}\n                  updatedAt={projectsList[index]?.updatedAt}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {projectsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/project_item.js",["239","240"],"import React from \"react\";\nimport { Avatar, Button, Typography } from \"@mui/material\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport { IconButton } from \"@mui/material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport EditNewsForm from \"../../../../../forms/news/update_news_form\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  deleteDoc,\n  deleteObject,\n  ref,\n  db,\n  doc,\n  storage,\n} from \"../../../../../../data/firebase\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport EditProjectForm from \"../../../../../forms/projects/update_project_form\";\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 48,\n    width: 48,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst ProjectItem = (props) => {\n  const { history, location } = props;\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteNews = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"news/\" + location?.state?.id);\n    const fileRef2 = ref(storage, \"news/img_\" + location?.state?.id);\n\n    deleteObject(fileRef)\n      .then(() => {\n        deleteObject(fileRef2)\n          .then(async () => {\n            // Images deleted now delete from firestore,\n            try {\n              await deleteDoc(doc(db, \"news\", \"\" + location?.state?.id));\n              enqueueSnackbar(`Item deleted successfully`, {\n                variant: \"success\",\n              });\n            } catch (error) {\n              console.log(\"ERR: Del: \", error);\n              enqueueSnackbar(`Item not deleted. Try again`, {\n                variant: \"error\",\n              });\n            }\n          })\n          .catch((err) => {});\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${location?.state?.title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteNews}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Project\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditProjectForm\n            setOpen={setOpen}\n            img={location?.state?.image}\n            title={location?.state?.title}\n            id={location?.state?.id}\n            desc={location?.state?.desc}\n            state={location?.state?.state}\n            createdAt={location?.state?.createdAt}\n            updatedAt={location?.state?.updatedAt}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Project\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <div className={classes.row}>\n        <Button\n          startIcon={<ArrowBackIosNewIcon />}\n          onClick={() => history.goBack()}\n        >\n          Back\n        </Button>\n        <div className={classes.lhsRow}>\n          <Typography\n            fontSize={21}\n            variant=\"h6\"\n            textAlign=\"center\"\n            fontWeight=\"bold\"\n          >\n            {location?.state?.title}\n          </Typography>\n        </div>\n\n        <div className={classes.lhsRow}>\n          <IconButton\n            aria-label=\"delete\"\n            color=\"primary\"\n            onClick={() => setOpen(true)}\n          >\n            <Edit />\n          </IconButton>\n          <IconButton\n            aria-label=\"delete\"\n            color=\"error\"\n            onClick={() => setOpenDelete(true)}\n          >\n            <Delete />\n          </IconButton>\n        </div>\n      </div>\n      <br />\n      {/* Image Section */}\n      <div>\n        <img\n          src={location?.state?.image}\n          alt=\"featured_image\"\n          width=\"100%\"\n          height={400}\n        />\n      </div>\n      <br />\n\n      <Typography fontSize={16} variant=\"h6\" textAlign=\"start\" gutterBottom>\n        {location?.state?.state}\n      </Typography>\n      <Typography fontSize={12} variant=\"h6\" textAlign=\"start\">\n        {` Last updated on ${new Date(\n          location?.state?.updatedAt?.seconds * 1000\n        ).toLocaleDateString(\"en-US\")}`}\n      </Typography>\n      <br />\n\n      <div className={classes.lhsRow}>\n        <Typography fontSize={15} variant=\"h6\" textAlign=\"start\">\n          {location?.state?.desc}\n        </Typography>\n      </div>\n      <br />\n    </>\n  );\n};\n\nexport default withRouter(ProjectItem);\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/update_project_form.js",["241"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditProjectForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title, img, state, desc } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \",\n    image: \"\",\n    state: \" \",\n    desc: \" \",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [statesList, setStatesList] = React.useState([\n    \"Akwa Ibom State\",\n    \"Bayelsa State\",\n    \"Cross River State\",\n    \"Delta State\",\n    \"Edo State\",\n    \"Rivers State\",\n  ]);\n\n  //   React.useEffect(() => {\n  //     const q = query(collection(db, \"categories\"));\n  //     const unsubscribe = onSnapshot(q, (querySnapshot) => {\n  //       const categories = [];\n  //       querySnapshot.forEach((doc) => {\n  //         categories.push(doc.data());\n  //       });\n  //       setCategoriesList(categories);\n  //     });\n  //   }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateProject = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      state: formValues.state ? formValues.state : state,\n      desc: formValues?.desc ? formValues.desc : desc,\n    });\n    if (previewImage) {\n      //Change only the featured image and all texts\n      const fileRef = ref(storage, \"projects/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else {\n      const fileRef = ref(storage, \"projects/\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          const timeNow = new Date();\n          let storageRef = ref(storage, \"projects/\" + timeNow.getTime());\n          let uploadTask = uploadBytesResumable(storageRef, file);\n\n          setIsLoading(false);\n          setIsUploading(true);\n\n          uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n              const uprogress =\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n              setProgress(uprogress);\n            },\n            (error) => {\n              setIsUploading(false);\n              console.log(error);\n              enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n            },\n            () => {\n              setIsUploading(false);\n              setIsLoading(true);\n              getDownloadURL(uploadTask?.snapshot?.ref).then(\n                async (downloadURL) => {\n                  try {\n                    const mRef = doc(db, \"projects\", \"\" + id);\n                    await updateDoc(mRef, {\n                      title: formValues.title,\n                      state: formValues.state,\n                      description: formValues.desc,\n                      updatedAt: timeNow,\n                      image: downloadURL,\n                    });\n                    setOpen(false);\n                    setIsLoading(false);\n                    enqueueSnackbar(`Project updated successfully`, {\n                      variant: \"success\",\n                    });\n                  } catch (error) {}\n                }\n              );\n            }\n          );\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          setIsUploading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateProject}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.state ? formValues.state : state}\n          onChange={handleChange}\n          label=\"Project state\"\n          name=\"state\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project state is required\"]}\n        >\n          {(statesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item ?? \"\"}>\n              {item ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Project title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Project title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type project description here\"\n          name=\"desc\"\n          label=\"Project Description\"\n          value={\n            formValues.desc === \" \"\n              ? desc\n              : !formValues.desc\n              ? \"\"\n              : formValues.desc\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update Project\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditProjectForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/add_project_form.js",["242","243","244"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nimport Dropzone from \"react-dropzone\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddProjectForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    state: \"\",\n    desc: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const [statesList, setStatesList] = React.useState([\n    \"Akwa Ibom State\",\n    \"Bayelsa State\",\n    \"Cross River State\",\n    \"Delta State\",\n    \"Edo State\",\n    \"Rivers State\",\n  ]);\n  const [files, setFiles] = React.useState([]);\n  const [fileNames, setFileNames] = React.useState([]);\n  const [fileError, setFileError] = React.useState(\"\");\n\n  const handleDrop = (acceptedFiles) => {\n    setFileNames(acceptedFiles.map((file) => file.name));\n    setFiles(acceptedFiles);\n  };\n\n  const fileValidator = (file) => {\n    if (!file || file?.length < 1) {\n      return {\n        code: \"name-too-large\",\n        message: `You must select at least one file!`,\n      };\n    }\n    return null;\n  };\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createProject = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"projects/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"projects\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            state: formValues.state,\n            description: formValues.desc,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              //Now upload author image\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New project added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsUploading(false);\n              setIsLoading(false);\n              enqueueSnackbar(`${error?.message}`, {\n                variant: \"error\",\n              });\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createProject}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.state}\n          onChange={handleChange}\n          label=\"Project state\"\n          name=\"state\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project state is required\"]}\n        >\n          {(statesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item ?? \"\"}>\n              {item ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Project title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Project title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Project description here\"\n          name=\"desc\"\n          label=\"Project description\"\n          value={formValues.desc}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project description is required\"]}\n        />\n\n        <Dropzone\n          onDrop={handleDrop}\n          validator={fileValidator}\n          accept={\n            \"image/png, image/jpg, image/jpeg, application/pdf, application/mspowerpoint, application/powerpoint, application/vnd.ms-powerpoint, application/x-mspowerpoint\"\n          }\n        >\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps({ className: classes.dropZone })}>\n              <input {...getInputProps()} />\n              <p>Drag'n'drop files, or click to select files</p>\n            </div>\n          )}\n        </Dropzone>\n        <FormHelperText style={{ color: \"red\" }}>\n          {files?.length < 1 ? fileError : null}\n        </FormHelperText>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Create Project\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddProjectForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/placeholder/custom_no_data.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/index.js",["245","246","247","248","249","250"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport CategoryDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport AddNewsForm from \"../../../../../forms/news/add_news_form\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport Paper from \"@mui/material/Paper\";\nimport DirEditCategoryForm from \"../../../../../forms/directories/edit_category\";\nimport DirAddCategoryForm from \"../../../../../forms/directories/add_category\";\nimport AddVendorForm from \"../../../../../forms/directories/add_vendor\";\nimport EditVendorForm from \"../../../../../forms/directories/edit_vendor\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 386,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst VendorItemCard = (props) => {\n  const {\n    id,\n    image,\n    logo,\n    name,\n    address,\n    category,\n    phone,\n    website,\n    description,\n    opensAt,\n    closesAt,\n    is24hrs,\n    blocked,\n    item,\n  } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteVendor = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"news/\" + id);\n    const fileRef2 = ref(storage, \"news/img_\" + id);\n\n    deleteObject(fileRef)\n      .then(() => {\n        deleteObject(fileRef2)\n          .then(async () => {\n            // Images deleted now delete from firestore,\n            try {\n              await deleteDoc(doc(db, \"news\", \"\" + id));\n              enqueueSnackbar(`Item deleted successfully`, {\n                variant: \"success\",\n              });\n            } catch (error) {\n              console.log(\"ERR: Del: \", error);\n              enqueueSnackbar(`Item not deleted. Try again`, {\n                variant: \"error\",\n              });\n            }\n          })\n          .catch((err) => {});\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteVendor}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Vendor\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditVendorForm\n            setOpen={setOpen}\n            img={image}\n            id={id}\n            logo={logo}\n            name={name}\n            address={address}\n            phone={phone}\n            website={website}\n            category={category}\n            opensAt={opensAt}\n            closesAt={closesAt}\n            description={description}\n            is24hrs={is24hrs}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete News\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <Avatar alt=\"Passport\" src={logo} className={classes.avatar} />\n            {/* <div className={classes.column}>\n              <Typography variant=\"body2\" fontSize={14}>\n                {authorName}\n              </Typography>\n              <Typography variant=\"body2\" fontSize={13}>\n                {date}\n              </Typography>\n            </div> */}\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/admin/dashboard/manage-app/vendors:\" + item?.id,\n              state: {\n                id: item?.id,\n                name: item?.name,\n                phone: item?.phone,\n                category: item?.category,\n                image: item?.image,\n                description: item?.description,\n                logo: item?.logo,\n                address: item?.address,\n                website: item?.website,\n                blocked: item?.blocked,\n                opensAt: item?.opensAt,\n                closesAt: item?.closesAt,\n                is24hrs: item?.is24hrs,\n                createdAt: item?.createdAt,\n                updatedAt: item?.updatedAt,\n              },\n            })\n          }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {name?.length > 75 ? name?.substring(0, 75) + \"...\" : name}\n            </Typography>\n          </div>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            gutterBottom\n            fontSize={12}\n            color=\"black\"\n            paddingLeft={1}\n            paddingBottom={1}\n          >\n            {category}\n          </Typography>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {description?.length > 150\n              ? description?.substring(0, 150) + \"...\"\n              : description}\n          </Typography>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst VendorCategoryCard = (props) => {\n  const { id, name, updatedAt } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteItem = async () => {\n    setOpenDelete(false);\n    try {\n      await deleteDoc(doc(db, \"directories-categories\", \"\" + id));\n      setOpenDelete(false);\n      enqueueSnackbar(`Item deleted successfully`, { variant: \"success\" });\n    } catch (error) {\n      setOpenDelete(false);\n      enqueueSnackbar(`Item not deleted. Try again`, { variant: \"error\" });\n    }\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteItem}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <DirEditCategoryForm setOpen={setOpen} title={name} id={id} />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Category\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={2}>\n        <CardActionArea\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"body1\" sx={{ marginLeft: 2 }}>\n            {name}\n          </Typography>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Directories = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [openCategory, setOpenCategory] = React.useState(false);\n  const [vendorsList, setVendorsList] = React.useState(null);\n  const [vendorCategories, setVendorCategories] = React.useState([]);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"directories-categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setVendorCategories(categories);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"directories-vendors\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const vendors = [];\n      querySnapshot.forEach((doc) => {\n        vendors.push(doc.data());\n      });\n      setVendorsList(vendors);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create Vendor\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddVendorForm setOpen={setOpen} />}\n      />\n\n      <CategoryDialog\n        open={openCategory}\n        title=\"Create Category\"\n        handleClose={() => setOpenCategory(false)}\n        bodyComponent={<DirAddCategoryForm setOpen={setOpenCategory} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Directories\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={vendorCategories?.length < 1}\n          onClick={() => setOpen(true)}\n        >\n          Vendor\n        </Button>\n      </div>\n      <br />\n      <Paper\n        sx={{\n          padding: 2,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"left\",\n          alignItems: \"stretch\",\n        }}\n      >\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          sx={{ marginRight: 2 }}\n          onClick={() => setOpenCategory(true)}\n        >\n          Category\n        </Button>\n\n        {vendorCategories && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 3 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {vendorCategories?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <VendorCategoryCard\n                  item={item}\n                  id={vendorCategories[index]?.id}\n                  name={vendorCategories[index]?.name}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Paper>\n      <div>\n        {vendorsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {vendorsList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <VendorItemCard\n                  item={item}\n                  id={vendorsList[index]?.id}\n                  image={vendorsList[index]?.image}\n                  name={vendorsList[index]?.name}\n                  address={vendorsList[index]?.address}\n                  phone={vendorsList[index]?.phone}\n                  website={vendorsList[index]?.website}\n                  opensAt={vendorsList[index]?.opensAt}\n                  closesAt={vendorsList[index]?.closesAt}\n                  description={vendorsList[index]?.description}\n                  createdAt={vendorsList[index]?.createdAt}\n                  updatedAt={vendorsList[index]?.updatedAt}\n                  category={vendorsList[index]?.category}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {vendorsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No vendors found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Directories;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_category.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_vendor.js",["251","252"],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js",["253","254"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditVendorForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title,\n    subTitle,\n    img,\n    category,\n    body,\n    authorName,\n    authorPhoto,\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \",\n    image: \"\",\n    category: \"\",\n    subTitle: \" \",\n    body: \" \",\n    createdAt: \"\",\n    authorName: \" \",\n    authorPhoto: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewAuthorPhoto = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              authorPhoto: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateNews = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      subTitle: formValues.subTitle ? formValues.subTitle : subTitle,\n      authorName: formValues.authorName ? formValues.authorName : authorName,\n      category: formValues.category ? formValues.category : category,\n      body: formValues.body ? formValues.body : body,\n    });\n    if (!previewImage && !previewAuthor) {\n      //No image is changed. So update all text\n      console.log(\"ID: \", id);\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"news\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          subTitle: formValues.subTitle,\n          authorName: formValues.authorName,\n          category: formValues.category,\n          body: formValues.body,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`News title updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else if (!previewImage && previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else {\n      const fileRef = ref(storage, \"news/\" + id);\n      const fileRef2 = ref(storage, \"news/img_\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n              let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"news\", \"\" + id);\n                        await updateDoc(mRef, {\n                          title: formValues.title,\n                          subTitle: formValues.subTitle,\n                          authorName: formValues.authorName,\n                          category: formValues.category,\n                          body: formValues.body,\n                          updatedAt: timeNow,\n                          image: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"news\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    authorPhoto: download,\n                                  });\n                                  setOpen(false);\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `Newsfeed updated successfully`,\n                                    {\n                                      variant: \"success\",\n                                    }\n                                  );\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(`${error?.message}`, {\n                                    variant: \"error\",\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {}\n                    }\n                  );\n                }\n              );\n            })\n            .catch((err) => {});\n          // setIsLoading(false);\n          // uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category ? formValues.category : category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"subTitle\"\n          label=\"News subtitle (optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.subTitle === \" \"\n              ? subTitle\n              : !formValues.subTitle\n              ? \"\"\n              : formValues.subTitle\n          }\n          onChange={handleChange}\n          name=\"subTitle\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type news here\"\n          name=\"body\"\n          label=\"News content\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  formValues.authorName === \" \"\n                    ? authorName\n                    : !formValues.authorName\n                    ? \"\"\n                    : formValues.authorName\n                }\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                alt=\"Author\"\n                src={previewAuthor ? previewAuthor : authorPhoto}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditVendorForm;\n",{"ruleId":"255","severity":1,"message":"256","line":11,"column":10,"nodeType":"257","messageId":"258","endLine":11,"endColumn":13},{"ruleId":"255","severity":1,"message":"259","line":11,"column":15,"nodeType":"257","messageId":"258","endLine":11,"endColumn":24},{"ruleId":"255","severity":1,"message":"260","line":11,"column":26,"nodeType":"257","messageId":"258","endLine":11,"endColumn":30},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"255","severity":1,"message":"265","line":2,"column":33,"nodeType":"257","messageId":"258","endLine":2,"endColumn":38},{"ruleId":"266","severity":1,"message":"267","line":43,"column":6,"nodeType":"268","endLine":43,"endColumn":8,"suggestions":"269"},{"ruleId":"255","severity":1,"message":"270","line":13,"column":10,"nodeType":"257","messageId":"258","endLine":13,"endColumn":19},{"ruleId":"255","severity":1,"message":"271","line":34,"column":9,"nodeType":"257","messageId":"258","endLine":34,"endColumn":21},{"ruleId":"255","severity":1,"message":"272","line":21,"column":10,"nodeType":"257","messageId":"258","endLine":21,"endColumn":21},{"ruleId":"255","severity":1,"message":"273","line":118,"column":10,"nodeType":"257","messageId":"258","endLine":118,"endColumn":23},{"ruleId":"255","severity":1,"message":"274","line":149,"column":9,"nodeType":"257","messageId":"258","endLine":149,"endColumn":36},{"ruleId":"255","severity":1,"message":"275","line":154,"column":9,"nodeType":"257","messageId":"258","endLine":154,"endColumn":37},{"ruleId":"255","severity":1,"message":"276","line":218,"column":9,"nodeType":"257","messageId":"258","endLine":218,"endColumn":18},{"ruleId":"255","severity":1,"message":"277","line":220,"column":7,"nodeType":"257","messageId":"258","endLine":220,"endColumn":18},{"ruleId":"255","severity":1,"message":"278","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":12},{"ruleId":"255","severity":1,"message":"271","line":13,"column":9,"nodeType":"257","messageId":"258","endLine":13,"endColumn":21},{"ruleId":"255","severity":1,"message":"279","line":13,"column":3,"nodeType":"257","messageId":"258","endLine":13,"endColumn":9},{"ruleId":"255","severity":1,"message":"270","line":25,"column":10,"nodeType":"257","messageId":"258","endLine":25,"endColumn":19},{"ruleId":"255","severity":1,"message":"280","line":52,"column":10,"nodeType":"257","messageId":"258","endLine":52,"endColumn":19},{"ruleId":"255","severity":1,"message":"281","line":52,"column":21,"nodeType":"257","messageId":"258","endLine":52,"endColumn":33},{"ruleId":"255","severity":1,"message":"282","line":98,"column":15,"nodeType":"257","messageId":"258","endLine":98,"endColumn":24},{"ruleId":"255","severity":1,"message":"283","line":99,"column":15,"nodeType":"257","messageId":"258","endLine":99,"endColumn":27},{"ruleId":"255","severity":1,"message":"284","line":42,"column":25,"nodeType":"257","messageId":"258","endLine":42,"endColumn":32},{"ruleId":"255","severity":1,"message":"285","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":23},{"ruleId":"255","severity":1,"message":"286","line":9,"column":3,"nodeType":"257","messageId":"258","endLine":9,"endColumn":8},{"ruleId":"255","severity":1,"message":"287","line":17,"column":3,"nodeType":"257","messageId":"258","endLine":17,"endColumn":26},{"ruleId":"255","severity":1,"message":"288","line":46,"column":9,"nodeType":"257","messageId":"258","endLine":46,"endColumn":14},{"ruleId":"255","severity":1,"message":"289","line":84,"column":21,"nodeType":"257","messageId":"258","endLine":84,"endColumn":33},{"ruleId":"255","severity":1,"message":"280","line":85,"column":10,"nodeType":"257","messageId":"258","endLine":85,"endColumn":19},{"ruleId":"255","severity":1,"message":"281","line":85,"column":21,"nodeType":"257","messageId":"258","endLine":85,"endColumn":33},{"ruleId":"255","severity":1,"message":"290","line":89,"column":11,"nodeType":"257","messageId":"258","endLine":89,"endColumn":22},{"ruleId":"255","severity":1,"message":"290","line":103,"column":11,"nodeType":"257","messageId":"258","endLine":103,"endColumn":22},{"ruleId":"255","severity":1,"message":"290","line":117,"column":11,"nodeType":"257","messageId":"258","endLine":117,"endColumn":22},{"ruleId":"255","severity":1,"message":"291","line":7,"column":3,"nodeType":"257","messageId":"258","endLine":7,"endColumn":17},{"ruleId":"255","severity":1,"message":"292","line":8,"column":3,"nodeType":"257","messageId":"258","endLine":8,"endColumn":28},{"ruleId":"255","severity":1,"message":"276","line":49,"column":9,"nodeType":"257","messageId":"258","endLine":49,"endColumn":18},{"ruleId":"255","severity":1,"message":"293","line":114,"column":5,"nodeType":"257","messageId":"258","endLine":114,"endColumn":15},{"ruleId":"255","severity":1,"message":"294","line":115,"column":5,"nodeType":"257","messageId":"258","endLine":115,"endColumn":12},{"ruleId":"255","severity":1,"message":"293","line":118,"column":5,"nodeType":"257","messageId":"258","endLine":118,"endColumn":15},{"ruleId":"255","severity":1,"message":"294","line":119,"column":5,"nodeType":"257","messageId":"258","endLine":119,"endColumn":12},{"ruleId":"295","severity":1,"message":"296","line":188,"column":17,"nodeType":"297","messageId":"298","endLine":188,"endColumn":24},{"ruleId":"255","severity":1,"message":"299","line":2,"column":22,"nodeType":"257","messageId":"258","endLine":2,"endColumn":30},{"ruleId":"255","severity":1,"message":"300","line":13,"column":9,"nodeType":"257","messageId":"258","endLine":13,"endColumn":12},{"ruleId":"255","severity":1,"message":"301","line":14,"column":9,"nodeType":"257","messageId":"258","endLine":14,"endColumn":13},{"ruleId":"255","severity":1,"message":"302","line":12,"column":3,"nodeType":"257","messageId":"258","endLine":12,"endColumn":14},{"ruleId":"255","severity":1,"message":"303","line":17,"column":10,"nodeType":"257","messageId":"258","endLine":17,"endColumn":21},{"ruleId":"255","severity":1,"message":"304","line":10,"column":3,"nodeType":"257","messageId":"258","endLine":10,"endColumn":9},{"ruleId":"255","severity":1,"message":"303","line":18,"column":10,"nodeType":"257","messageId":"258","endLine":18,"endColumn":21},{"ruleId":"255","severity":1,"message":"303","line":24,"column":10,"nodeType":"257","messageId":"258","endLine":24,"endColumn":21},{"ruleId":"255","severity":1,"message":"290","line":109,"column":11,"nodeType":"257","messageId":"258","endLine":109,"endColumn":22},{"ruleId":"255","severity":1,"message":"290","line":95,"column":11,"nodeType":"257","messageId":"258","endLine":95,"endColumn":22},{"ruleId":"255","severity":1,"message":"299","line":2,"column":22,"nodeType":"257","messageId":"258","endLine":2,"endColumn":30},{"ruleId":"255","severity":1,"message":"305","line":12,"column":8,"nodeType":"257","messageId":"258","endLine":12,"endColumn":19},{"ruleId":"255","severity":1,"message":"306","line":16,"column":10,"nodeType":"257","messageId":"258","endLine":16,"endColumn":17},{"ruleId":"255","severity":1,"message":"290","line":174,"column":11,"nodeType":"257","messageId":"258","endLine":174,"endColumn":22},{"ruleId":"255","severity":1,"message":"290","line":291,"column":11,"nodeType":"257","messageId":"258","endLine":291,"endColumn":22},{"ruleId":"255","severity":1,"message":"307","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":20},{"ruleId":"255","severity":1,"message":"308","line":27,"column":8,"nodeType":"257","messageId":"258","endLine":27,"endColumn":19},{"ruleId":"255","severity":1,"message":"309","line":28,"column":8,"nodeType":"257","messageId":"258","endLine":28,"endColumn":14},{"ruleId":"255","severity":1,"message":"310","line":34,"column":8,"nodeType":"257","messageId":"258","endLine":34,"endColumn":14},{"ruleId":"255","severity":1,"message":"311","line":93,"column":29,"nodeType":"257","messageId":"258","endLine":93,"endColumn":38},{"ruleId":"255","severity":1,"message":"290","line":263,"column":11,"nodeType":"257","messageId":"258","endLine":263,"endColumn":22},{"ruleId":"255","severity":1,"message":"309","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":16},{"ruleId":"255","severity":1,"message":"307","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":20},{"ruleId":"255","severity":1,"message":"312","line":85,"column":22,"nodeType":"257","messageId":"258","endLine":85,"endColumn":35},{"ruleId":"255","severity":1,"message":"312","line":84,"column":22,"nodeType":"257","messageId":"258","endLine":84,"endColumn":35},{"ruleId":"255","severity":1,"message":"313","line":93,"column":10,"nodeType":"257","messageId":"258","endLine":93,"endColumn":19},{"ruleId":"255","severity":1,"message":"314","line":94,"column":21,"nodeType":"257","messageId":"258","endLine":94,"endColumn":33},{"ruleId":"255","severity":1,"message":"308","line":27,"column":8,"nodeType":"257","messageId":"258","endLine":27,"endColumn":19},{"ruleId":"255","severity":1,"message":"315","line":108,"column":5,"nodeType":"257","messageId":"258","endLine":108,"endColumn":12},{"ruleId":"255","severity":1,"message":"316","line":300,"column":21,"nodeType":"257","messageId":"258","endLine":300,"endColumn":30},{"ruleId":"255","severity":1,"message":"317","line":305,"column":9,"nodeType":"257","messageId":"258","endLine":305,"endColumn":16},{"ruleId":"255","severity":1,"message":"290","line":407,"column":11,"nodeType":"257","messageId":"258","endLine":407,"endColumn":22},{"ruleId":"255","severity":1,"message":"290","line":418,"column":11,"nodeType":"257","messageId":"258","endLine":418,"endColumn":22},{"ruleId":"255","severity":1,"message":"318","line":26,"column":34,"nodeType":"257","messageId":"258","endLine":26,"endColumn":44},{"ruleId":"255","severity":1,"message":"290","line":113,"column":11,"nodeType":"257","messageId":"258","endLine":113,"endColumn":22},{"ruleId":"255","severity":1,"message":"303","line":24,"column":10,"nodeType":"257","messageId":"258","endLine":24,"endColumn":21},{"ruleId":"255","severity":1,"message":"290","line":109,"column":11,"nodeType":"257","messageId":"258","endLine":109,"endColumn":22},"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'analytics' is defined but never used.","'auth' is defined but never used.","no-native-reassign",["319"],"no-negated-in-lhs",["320"],"'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["321"],"'Copyright' is defined but never used.","'handleSubmit' is assigned a value but never used.","'useSnackbar' is defined but never used.","'openNotiModal' is assigned a value but never used.","'openMobileNotificationModal' is assigned a value but never used.","'closeMobileNotificationModal' is assigned a value but never used.","'container' is assigned a value but never used.","'resultTrail' is defined but never used.","'Link' is defined but never used.","'getDoc' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'excerpt' is assigned a value but never used.","'useMediaQuery' is defined but never used.","'where' is defined but never used.","'GridFilterToolbarButton' is defined but never used.","'theme' is assigned a value but never used.","'setUsersList' is assigned a value but never used.","'unsubscribe' is assigned a value but never used.","'setPersistence' is defined but never used.","'browserSessionPersistence' is defined but never used.","'cornerSize' is assigned a value but never used.","'picSize' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'useTheme' is defined but never used.","'top' is assigned a value but never used.","'left' is assigned a value but never used.","'uploadBytes' is defined but never used.","'addCategory' is defined but never used.","'setDoc' is defined but never used.","'CardContent' is defined but never used.","'display' is defined but never used.","'EditNewsForm' is defined but never used.","'AddNewsForm' is defined but never used.","'Avatar' is defined but never used.","'format' is defined but never used.","'createdAt' is assigned a value but never used.","'setStatesList' is assigned a value but never used.","'fileNames' is assigned a value but never used.","'setFileError' is assigned a value but never used.","'blocked' is assigned a value but never used.","'updatedAt' is assigned a value but never used.","'history' is assigned a value but never used.","'IconButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"322","fix":"323"},"Update the dependencies array to be: [dispatch]",{"range":"324","text":"325"},[1213,1215],"[dispatch]"]