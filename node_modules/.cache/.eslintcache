[{"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/index.js":"1","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/reportWebVitals.js":"2","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/App.js":"3","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/firebase/index.js":"4","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/login/index.js":"5","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/index.js":"6","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/register/index.js":"7","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/login/index.js":"8","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js":"9","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/profile/index.js":"10","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/index.js":"11","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/home/index.js":"12","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_users/index.js":"13","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/store/slice/user.js":"14","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/store/index.js":"15","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/domain/service/index.js":"16","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/domain/helper/private-routes.js":"17","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer2.js":"18","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer1.js":"19","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/dialogs/custom-dialog.js":"20","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js":"21","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/update_category.js":"22","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js":"23","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/add_news_form.js":"24","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/categories/categories.js":"25","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/newsfeeds.js":"26","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/news_item.js":"27","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/index.js":"28","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/project_item.js":"29","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/update_project_form.js":"30","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/add_project_form.js":"31","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/placeholder/custom_no_data.js":"32","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/index.js":"33","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_category.js":"34","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_vendor.js":"35","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js":"36","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js":"37","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/privacy-policy/index.js":"38","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/terms-of-service/index.js":"39","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/privacy-policy/update_policy_form.js":"40","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/terms-of-service/index.js":"41","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/contact-us/index.js":"42","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/contact-us/index.js":"43","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js":"44","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/admin/create_admin_form.js":"45","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/action_button.js":"46","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/notfound/index.js":"47","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/vendor_detail.js":"48","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/products/add_product.js":"49","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/products.js":"50","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/product_detail.js":"51"},{"size":1405,"mtime":1638947189872,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":1638747541727,"results":"54","hashOfConfig":"53"},{"size":2222,"mtime":1640051297796,"results":"55","hashOfConfig":"53"},{"size":1364,"mtime":1640042240565,"results":"56","hashOfConfig":"53"},{"size":3181,"mtime":1640050196373,"results":"57","hashOfConfig":"53"},{"size":13757,"mtime":1640126079874,"results":"58","hashOfConfig":"53"},{"size":2783,"mtime":1640050173588,"results":"59","hashOfConfig":"53"},{"size":5327,"mtime":1640050318288,"results":"60","hashOfConfig":"53"},{"size":7336,"mtime":1640049873138,"results":"61","hashOfConfig":"53"},{"size":102,"mtime":1638860925879,"results":"62","hashOfConfig":"53"},{"size":3772,"mtime":1640005722987,"results":"63","hashOfConfig":"53"},{"size":6162,"mtime":1639786929343,"results":"64","hashOfConfig":"53"},{"size":3061,"mtime":1640042821406,"results":"65","hashOfConfig":"53"},{"size":443,"mtime":1638893948979,"results":"66","hashOfConfig":"53"},{"size":595,"mtime":1639782754627,"results":"67","hashOfConfig":"53"},{"size":1008,"mtime":1640043566612,"results":"68","hashOfConfig":"53"},{"size":1513,"mtime":1639777329433,"results":"69","hashOfConfig":"53"},{"size":6223,"mtime":1640047782223,"results":"70","hashOfConfig":"53"},{"size":6457,"mtime":1640047782178,"results":"71","hashOfConfig":"53"},{"size":2213,"mtime":1639108163997,"results":"72","hashOfConfig":"53"},{"size":5531,"mtime":1639954064195,"results":"73","hashOfConfig":"53"},{"size":6778,"mtime":1640009141201,"results":"74","hashOfConfig":"53"},{"size":18254,"mtime":1639780069896,"results":"75","hashOfConfig":"53"},{"size":11215,"mtime":1639780069883,"results":"76","hashOfConfig":"53"},{"size":6496,"mtime":1639392639914,"results":"77","hashOfConfig":"53"},{"size":9902,"mtime":1639392639914,"results":"78","hashOfConfig":"53"},{"size":6363,"mtime":1639392639909,"results":"79","hashOfConfig":"53"},{"size":9134,"mtime":1640106919413,"results":"80","hashOfConfig":"53"},{"size":5926,"mtime":1639445459984,"results":"81","hashOfConfig":"53"},{"size":10362,"mtime":1639780069902,"results":"82","hashOfConfig":"53"},{"size":8615,"mtime":1639782601426,"results":"83","hashOfConfig":"53"},{"size":3153,"mtime":1639539688145,"results":"84","hashOfConfig":"53"},{"size":16367,"mtime":1640104004403,"results":"85","hashOfConfig":"53"},{"size":2840,"mtime":1639789552958,"results":"86","hashOfConfig":"53"},{"size":16693,"mtime":1639932426246,"results":"87","hashOfConfig":"53"},{"size":5758,"mtime":1639953996928,"results":"88","hashOfConfig":"53"},{"size":18258,"mtime":1640022922628,"results":"89","hashOfConfig":"53"},{"size":2914,"mtime":1640017741713,"results":"90","hashOfConfig":"53"},{"size":2921,"mtime":1640020251625,"results":"91","hashOfConfig":"53"},{"size":7442,"mtime":1640022884847,"results":"92","hashOfConfig":"53"},{"size":7504,"mtime":1640022870344,"results":"93","hashOfConfig":"53"},{"size":4494,"mtime":1640022402558,"results":"94","hashOfConfig":"53"},{"size":9826,"mtime":1640023663964,"results":"95","hashOfConfig":"53"},{"size":3036,"mtime":1640046365642,"results":"96","hashOfConfig":"53"},{"size":6410,"mtime":1640046365642,"results":"97","hashOfConfig":"53"},{"size":5523,"mtime":1640085531087,"results":"98","hashOfConfig":"53"},{"size":474,"mtime":1640051117980,"results":"99","hashOfConfig":"53"},{"size":8271,"mtime":1640124628432,"results":"100","hashOfConfig":"53"},{"size":7664,"mtime":1640124033771,"results":"101","hashOfConfig":"53"},{"size":8932,"mtime":1640124739139,"results":"102","hashOfConfig":"53"},{"size":6334,"mtime":1640126133597,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},"qkdhak",{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"107"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"107"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"107"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"107"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"107"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"107"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"107"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"107"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"107"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"107"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"107"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"107"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"107"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"107"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"107"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"107"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"107"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"107"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"107"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"107"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"107"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"107"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"107"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"107"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"107"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/index.js",["243","244","245"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Store from \"./data/store\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { Provider } from \"react-redux\";\nimport { SnackbarProvider } from \"notistack\";\nimport Button from \"@mui/material/Button\";\nimport { app, analytics, auth } from \"./data/firebase\";\n\nconst theme = createTheme();\nconst notistackRef = React.createRef();\nconst onClickDismiss = (key) => () => {\n  notistackRef.current.closeSnackbar(key);\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={Store}>\n        <SnackbarProvider\n          ref={notistackRef}\n          action={(key) => (\n            <Button\n              onClick={onClickDismiss(key)}\n              style={{\n                textTransform: \"none\",\n                color: \"white\",\n                fontFamily: \"roboto\",\n              }}\n            >\n              Dismiss\n            </Button>\n          )}\n          maxSnack={2}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n          }}\n          autoHideDuration={5000}\n        >\n          <App />\n        </SnackbarProvider>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n",["246","247"],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/reportWebVitals.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/App.js",["248","249","250"],"import \"./App.css\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Login from \"./presentation/screens/login\";\nimport Signup from \"./presentation/screens/register\";\nimport Dashboard from \"./presentation/screens/dashboard\";\nimport {\n  PrivateRouteDashboard,\n  PrivateRouteLogin,\n  PrivateRouteSignup,\n} from \"./domain/helper/private-routes\";\nimport React from \"react\";\nimport { auth } from \"./data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { db, doc, onSnapshot } from \"./data/firebase\";\nimport { setUserData } from \"./data/store/slice/user\";\nimport NotFound from \"./presentation/screens/notfound\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        onSnapshot(doc(db, \"users\", \"\" + user.uid), (doc) => {\n          // userData(doc.data());\n          dispatch(setUserData(doc.data()));\n          console.log(doc.data());\n        });\n      }\n\n      // auth().onAuthStateChanged((user) => {\n      //   if (user) {\n      //     onSnapshot(doc(db, \"users\", \"\" + user.uid), (doc) => {\n      //       dispatch(setUserData(doc.data()));\n      //     });\n      //   } else {\n      //     dispatch(setUserData(null));\n      //   }\n      // });\n    } catch (err) {\n      // console.log(err);\n    }\n    // return () => {};\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          {/* <Route path=\"about\" render={() => <Redirect to=\"about-us\" />} /> */}\n          {/* <Navigate to=\"/login\" replace  /> */}\n          {/* <Route path=\"/\" element={<Navigate replace to=\"/login\" />} /> */}\n          <Redirect exact from=\"/\" to=\"/login\" />\n          <PrivateRouteLogin path=\"/login\" exact={true}>\n            <Login />\n          </PrivateRouteLogin>\n\n          {/* <PrivateRouteSignup exact={true} path=\"/signup\">\n            <Signup />\n          </PrivateRouteSignup> */}\n\n          <PrivateRouteDashboard path=\"/admin/dashboard\">\n            <Dashboard />\n          </PrivateRouteDashboard>\n\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/firebase/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/login/index.js",["251","252"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport LoginForm from \"../../forms/login\";\nimport pattern from \"../../../assets/images/pattern.png\";\nimport logo from \"../../../assets/images/logo_white.png\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst Login = () => {\n  let history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n    history.push(\"/dashboard\");\n  };\n\n  return (\n    <Grid\n      container\n      component=\"main\"\n      sx={{\n        height: \"100vh\",\n        backgroundColor: (t) =>\n          t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundPosition: \"center\",\n      }}\n    >\n      <CssBaseline />\n\n      <Grid item xs={12} sm={8} md={6} component=\"div\">\n        <Box\n          component=\"div\"\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            my: \"auto\",\n            height: \"100%\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <LoginForm />\n        </Box>\n      </Grid>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={6}\n        sx={{\n          height: \"100vh\",\n          backgroundColor: \"#0C0C77\",\n        }}\n      >\n        <div\n          // className=\"login-glass\"\n          style={{\n            height: \"100vh\",\n            backgroundImage: \"url(\" + pattern + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            zIndex: 1000,\n          }}\n        >\n          <Box\n            component=\"div\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              my: \"auto\",\n              height: \"100%\",\n            }}\n          >\n            <img src={logo} alt=\"img\" width={156} />\n            <Typography variant=\"h6\" align=\"center\" color=\"white\">\n              Niger Delta Unity App (NDUA)\n            </Typography>\n          </Box>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/index.js",["253","254","255","256","257","258"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@mui/material/AppBar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Hidden from \"@mui/material/Hidden\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { Switch, Route, withRouter, Redirect } from \"react-router-dom\";\n\nimport Drawer1 from \"../../components/dashboard/drawer/Drawer1\";\nimport Drawer2 from \"../../components/dashboard/drawer/Drawer2\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { useSnackbar } from \"notistack\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Typography from \"@mui/material/Typography\";\nimport HomePage from \"./tabs/home\";\nimport ManageApp from \"./tabs/manage_app\";\nimport ManageUsers from \"./tabs/manage_users\";\nimport Profile from \"./tabs/profile\";\n\nimport Categories from \"./tabs/manage_app/categories/categories\";\nimport NewsFeeds from \"./tabs/manage_app/news/newsfeeds\";\nimport NewsItem from \"./tabs/manage_app/news/news_item\";\nimport Projects from \"./tabs/manage_app/projects\";\nimport ProjectItem from \"./tabs/manage_app/projects/project_item\";\nimport Directories from \"./tabs/manage_app/directories\";\nimport PrivacyPolicy from \"./tabs/manage_app/privacy-policy\";\nimport TermsOfService from \"./tabs/manage_app/terms-of-service\";\nimport ContactUs from \"./tabs/manage_app/contact-us\";\nimport VendorItem from \"./tabs/manage_app/directories/vendor_detail\";\nimport ProductDetail from \"./tabs/manage_app/directories/product_detail\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  drawer: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    background: \"white\",\n    color: \"black\",\n    boxShadow: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    paddingTop: theme.spacing(3),\n    backgroundColor: \"#F8F9FA\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  contentPadding: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    fontSize: 15,\n    margin: \"auto\",\n  },\n}));\n\nfunction Dashboard(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  // let { path, url } = useRouteMatch();\n  // const { enqueueSnackbar } = useSnackbar();\n  // const { notifications, userData } = useSelector((state) => state.user);\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [openSignoutBackDrop, setOpenSignoutBackDrop] = React.useState(false);\n  const [openNotiModal, setOpenNotiModal] = React.useState(false);\n  // const dispatch = useDispatch();\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleBackdrop = (value) => {\n    setOpenSignoutBackDrop(value);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const openMobileNotificationModal = (event) => {\n    handleMenuClose();\n    setOpenNotiModal(true);\n  };\n\n  const closeMobileNotificationModal = (event) => {\n    setOpenNotiModal(false);\n  };\n\n  // const renderMobileNotification = (\n  //   <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n  //     <List>\n  //       {notifications?.map((item, index) => (\n  //         <ListItem\n  //           divider\n  //           button\n  //           key={index}\n  //           onClick={() => handleMenuClose(item)}\n  //           style={{ display: \"flex\", flexDirection: \"column\" }}\n  //         >\n  //           <Typography>{item?.Body}</Typography>\n  //           {/* <span style={{ fontSize: 12 }} > {item.date} </span> */}\n  //         </ListItem>\n  //       ))}\n  //     </List>\n  //   </div>\n  // );\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem\n        style={{ alignItems: \"center\" }}\n        onClick={openMobileNotificationModal}\n      >\n        <IconButton aria-label=\"show new notifications\" color=\"inherit\">\n          <Badge badgeContent={notifications?.length} color=\"error\">\n            <NotificationsNoneIcon color=\"secondary\" />\n          </Badge>\n        </IconButton>\n        <Typography style={{ marginLeft: 3 }}>Notifications</Typography>\n      </MenuItem> */}\n    </Menu>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n  let resultTrail;\n  // const initials = userData?.First_Name?.slice(0, 1).toUpperCase() + userData?.Surname?.slice(0, 1).toUpperCase();\n  // const trailName = userData?.First_Name + \" \" + userData?.Surname;\n\n  // if (trailName?.length > 12) {\n  //     resultTrail = trailName?.slice(0, 12) + \"...\";\n  // }\n  // else {\n  //     resultTrail = trailName?.slice(0, 12);\n  // }\n\n  return (\n    <div className={classes.root}>\n      <Backdrop style={{ zIndex: 5000 }} open={openSignoutBackDrop}>\n        <CircularProgress\n          size={90}\n          thickness={3.0}\n          style={{ color: \"white\" }}\n        />\n      </Backdrop>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {1 > 2 && (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  style={{ margin: \"auto\", paddingRight: 3 }}\n                >\n                  {/* {resultTrail} */}\n                </Typography>\n                {/* <Avatar className={classes.avatar}\n                                    src={userData?.Display_Image !== ''\n                                        ? userData?.Display_Image : ''}>\n                                    {userData?.Display_Image !== ''\n                                        ? '' : initials}\n                                </Avatar> */}\n              </div>\n            )}\n            <IconButton\n              aria-label=\"show 17 new notifications\"\n              color=\"inherit\"\n              edge=\"end\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              //onClick={handleNotificationMenuOpen}\n            >\n              {/* <Badge\n                badgeContent={notifications?.length}\n                color=\"error\"\n                style={{ color: \"red\" }}\n              >\n                <NotificationsNoneIcon\n                  style={{ color: theme.palette.secondary.main }}\n                />\n              </Badge> */}\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <SearchIcon style={{ color: theme.palette.secondary.main }} />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer1\n            setMobileOpen={setMobileOpen}\n            mobileOpen={mobileOpen}\n            handleBackdrop={handleBackdrop}\n            drawerVariant=\"temporary\"\n            anchor=\"left\"\n            handleDrawerToggle={handleDrawerToggle}\n            window={window}\n          />\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer2 handleBackdrop={handleBackdrop} />\n        </Hidden>\n      </nav>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* Main switch routing here */}\n        <div className={classes.contentPadding}>\n          <Switch>\n            <Redirect\n              exact\n              from=\"/admin/dashboard\"\n              to=\"/admin/dashboard/home\"\n            />\n            <Route path=\"/admin/dashboard/home\" exact={true}>\n              <HomePage />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app\" exact={true}>\n              <ManageApp />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-users\" exact={true}>\n              <ManageUsers />\n            </Route>\n\n            <Route path=\"/admin/dashboard/profile\" exact={true}>\n              <Profile />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/categories\" exact={true}>\n              <Categories />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/news-feeds\" exact={true}>\n              <NewsFeeds />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/projects\" exact={true}>\n              <Projects />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/vendors\" exact={true}>\n              <Directories />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/vendors:id\" exact={true}>\n              <VendorItem />\n            </Route>\n\n            <Route\n              path=\"/admin/dashboard/manage-app/vendors:id/products:de\"\n              exact={true}\n            >\n              <ProductDetail />\n            </Route>\n\n            <Route\n              path=\"/admin/dashboard/manage-app/privacy-policy\"\n              exact={true}\n            >\n              <PrivacyPolicy />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/contact-us\" exact={true}>\n              <ContactUs />\n            </Route>\n\n            <Route\n              path=\"/admin/dashboard/manage-app/terms-of-service\"\n              exact={true}\n            >\n              <TermsOfService />\n            </Route>\n\n            <Route\n              path=\"/admin/dashboard/manage-app/news-feeds:id\"\n              exact={true}\n            >\n              <NewsItem />\n            </Route>\n\n            <Route path=\"/admin/dashboard/manage-app/projects:id\" exact={true}>\n              <ProjectItem />\n            </Route>\n          </Switch>\n        </div>\n        {/* <div style={{\n                    flexDirection: 'column', marginTop: 'auto', justifyContent: 'flex-start',\n                    alignItems: 'center', paddingTop: 10, paddingBottom: 10, paddingLeft: theme.spacing(1),\n                    backgroundColor: theme.palette.background.paper, marginRight: 2, marginLeft: 2\n                }}>\n                    <FooterBottom />\n                </div> */}\n      </main>\n    </div>\n  );\n}\n\nDashboard.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default withRouter(Dashboard);\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/register/index.js",["259","260"],"import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport SignupForm from \"../../forms/register\";\nimport pattern from \"../../../assets/images/pattern.png\";\nimport logo from \"../../../assets/images/logo_white.png\";\n\nconst Signup = () => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n  };\n\n  return (\n    <Grid\n      container\n      component=\"main\"\n      sx={{\n        height: \"100vh\",\n        backgroundColor: (t) =>\n          t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundPosition: \"center\",\n      }}\n    >\n      <CssBaseline />\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={6}\n        sx={{\n          height: \"100vh\",\n          backgroundColor: \"#0C0C77\",\n        }}\n      >\n        <div\n          // className=\"login-glass\"\n          style={{\n            height: \"100vh\",\n            backgroundImage: \"url(\" + pattern + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            zIndex: 1000,\n          }}\n        >\n          <Box\n            component=\"div\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              my: \"auto\",\n              height: \"100%\",\n            }}\n          >\n            <img src={logo} alt=\"img\" width={156} />\n            <Typography variant=\"h6\" align=\"center\" color=\"white\">\n              Niger Delta Unity App (NDUA)\n            </Typography>\n          </Box>\n        </div>\n      </Grid>\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6}>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            my: \"auto\",\n            height: \"100%\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" gutterBottom>\n            Sign Up\n          </Typography>\n          <SignupForm />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/login/index.js",["261","262","263"],"import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { signInUser } from \"../../../domain/service\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n// import { addDoc, collection } from \"firebase/firestore\";\nimport {\n  db,\n  doc,\n  getDoc,\n  setPersistence,\n  browserSessionPersistence,\n  auth,\n  onSnapshot,\n} from \"../../../data/firebase\";\n\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\n\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { RefreshOutlined } from \"@mui/icons-material\";\n\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../data/store/slice/user\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst LoginForm = () => {\n  const [formValues, setFormValues] = React.useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submitForm = async (e) => {\n    setIsLoading(true);\n\n    setPersistence(auth, browserSessionPersistence)\n      .then((re) => {\n        signInUser(formValues.email, formValues.password)\n          .then(async (resp) => {\n            //Now get user data\n            // const docRef = doc(db, \"users\", resp.user.uid);\n            onSnapshot(doc(db, \"users\", resp.user.uid), (doc) => {\n              console.log(\"Current data: \", doc.data());\n              dispatch(setUserData(doc.data()));\n              history.push(\"/admin/dashboard\");\n            });\n            // const docSnap = await getDoc(docRef);\n            // if (docSnap.exists()) {\n\n            // } else {\n            //   console.log(\"No such document!\");\n            // }\n          })\n          .catch((err) => {\n            console.log(\"LOGIN ERR: \", err?.message);\n          });\n        //\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        // const errorCode = error.code;\n        // const errorMessage = error.message;\n        console.log(\"LOGIN CODE: \", error?.code);\n        console.log(\"LOGIN ERR: \", error?.message);\n      });\n  };\n\n  return (\n    <div>\n      <ValidatorForm onSubmit={submitForm} sx={{ mt: 1 }}>\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          value={formValues.email}\n          onChange={handleChange}\n          autoComplete=\"email\"\n          placeholder=\"Email Address\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        {/* <FormControlLabel\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\n          label=\"Remember me\"\n        /> */}\n        <Button\n          disabled={isLoading}\n          endIcon={\n            isLoading && (\n              <CircularProgress>\n                <RefreshOutlined />\n              </CircularProgress>\n            )\n          }\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Log In\n        </Button>\n        <div>\n          <div>Forgot password?</div>\n\n          {/* <div>\n            <Link variant=\"body2\" onClick={() => history.push(\"/signup\")}>\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </div> */}\n        </div>\n        {/* <Copyright sx={{ mt: 5 }} /> */}\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/register/index.js",["264","265","266","267","268"],"import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { createUser } from \"../../../domain/service\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  db,\n  doc,\n  getDoc,\n  setDoc,\n  setPersistence,\n  browserSessionPersistence,\n  auth,\n} from \"../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../data/store/slice/user\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst SignupForm = () => {\n  const [formValues, setFormValues] = React.useState({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const submitForm = (e) => {\n    setPersistence(auth, browserSessionPersistence)\n      .then(() => {\n        createUser(formValues.email, formValues.password)\n          .then(async (resp) => {\n            try {\n              setDoc(doc(db, \"users\", resp.user.uid), {\n                id: resp.user.uid,\n                firstname: formValues.firstName,\n                lastname: formValues.lastName,\n                phone: formValues.phone,\n                email: formValues.email,\n                userType: \"super\",\n              })\n                .then(async (result) => {\n                  //Fetch user data and save to redux store\n                  const docRef = doc(db, \"users\", resp.user.uid);\n                  const docSnap = await getDoc(docRef);\n                  if (docSnap.exists()) {\n                    dispatch(setUserData(docSnap.data));\n                    history.push(\"/admin/dashboard\");\n                  } else {\n                    console.log(\"No such document!\");\n                  }\n                })\n                .catch((err) => {});\n            } catch (error) {\n              console.log(\"ERR: \", error?.message);\n            }\n          })\n          .catch((err) => {\n            console.log(\"ERR: \", err?.message);\n          });\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n      });\n  };\n\n  // const formik = useFormik({\n  //   initialValues: {\n  //     firstName: \"\",\n  //     lastName: \"\",\n  //     phone: \"\",\n  //     email: \"\",\n  //     password: \"\",\n  //   },\n  //   validationSchema: validationSchema,\n\n  //   onSubmit: (values) => {\n  //     alert(\"Heergf\");\n  //     // try {\n  //     //   const resp = await createUser(values.email, values.password);\n\n  //     //   if (resp.user) {\n  //     //     // Add a second document with a generated ID.\n  //     //     try {\n  //     //       const docRef = await addDoc(collection(db, \"users\"), {\n  //     //         id: resp.user.uid,\n  //     //         firstname: values.firstName,\n  //     //         lastname: values.lastName,\n  //     //         phone: values.phone,\n  //     //         email: values.email,\n  //     //         userType: \"super\",\n  //     //       });\n  //     //       console.log(\"Document written with ID: \", docRef.id);\n  //     //     } catch (e) {\n  //     //       console.error(\"Error adding document: \", e);\n  //     //     }\n  //     //   }\n  //     // } catch (error) {}\n  //   },\n  // });\n\n  return (\n    <div>\n      <ValidatorForm onSubmit={submitForm} sx={{ mt: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item md={6} xs={12} sm={12}>\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First name\"\n              name=\"firstName\"\n              value={formValues.firstName}\n              onChange={handleChange}\n              type=\"text\"\n              autoFocus\n              placeholder=\"First name\"\n              variant=\"outlined\"\n              validators={[\"required\"]}\n              errorMessages={[\"First name is required\"]}\n            />\n          </Grid>\n\n          <Grid item md={6} xs={12} sm={12}>\n            <TextValidator\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"lastName\"\n              label=\"Last name\"\n              name=\"lastName\"\n              value={formValues.lastName}\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"Last name\"\n              variant=\"outlined\"\n              validators={[\"required\"]}\n              errorMessages={[\"Last name is required\"]}\n            />\n          </Grid>\n        </Grid>\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          value={formValues.email}\n          onChange={handleChange}\n          autoComplete=\"email\"\n          placeholder=\"Email Address\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 2, mb: 2 }}\n        >\n          Sign In\n        </Button>\n        <Typography variant=\"body1\" component=\"h1\" />\n        <Link onClick={() => history.push(\"/login\")} variant=\"body2\">\n          {\"Already have an account? Login\"}\n        </Link>\n        {/* <Copyright sx={{ mt: 5 }} /> */}\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default SignupForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/profile/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/index.js",["269"],"import {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport categoryImage from \"../../../../../assets/images/category_ndua_admin.jpeg\";\nimport directoryImge from \"../../../../../assets/images/directories_ndua_admin.jpeg\";\nimport newsImage from \"../../../../../assets/images/news_ndua_admin.jpeg\";\nimport projectsImage from \"../../../../../assets/images/projects_ndua_admin.jpeg\";\nimport adsImage from \"../../../../../assets/images/ads_ndua_admin.jpeg\";\nimport privacyImage from \"../../../../../assets/images/privacy.jpeg\";\nimport termsImage from \"../../../../../assets/images/terms_of_service.jpeg\";\nimport contactUsImage from \"../../../../../assets/images/handshake.jpeg\";\n\nimport Grid from \"@mui/material/Grid\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 236,\n  },\n  image: {\n    height: 144,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n  },\n}));\n\nconst CardItem = (props) => {\n  const classes = useStyles();\n  const { image, title, excerpt, to } = props;\n  const history = useHistory();\n\n  return (\n    <Card elevation={4} className={classes.root}>\n      <CardContent>\n        <CardMedia image={image} className={classes.image} />\n        <br />\n        <div className={classes.row}>\n          <div className={classes.column}>\n            <Typography variant=\"body1\" color=\"blue\">\n              {title}\n            </Typography>\n          </div>\n          <div>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => history.push(to)}\n            >\n              View\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst ManageApp = () => {\n  let list = [\n    {\n      title: \"Categories\",\n      desc: \"Manage app categories\",\n      to: \"/admin/dashboard/manage-app/categories\",\n      image: categoryImage,\n    },\n    {\n      title: \"News Feeds\",\n      desc: \"Manage app news feeds\",\n      to: \"/admin/dashboard/manage-app/news-feeds\",\n      image: newsImage,\n    },\n    {\n      title: \"Projects\",\n      desc: \"Manage app projects\",\n      to: \"/admin/dashboard/manage-app/projects\",\n      image: projectsImage,\n    },\n    {\n      title: \"Directories\",\n      desc: \"Manage app directories\",\n      to: \"/admin/dashboard/manage-app/vendors\",\n      image: directoryImge,\n    },\n    {\n      title: \"Ads Center\",\n      desc: \"Manage adverts\",\n      to: \"/ads-center\",\n      image: adsImage,\n    },\n    {\n      title: \"Privacy Policy\",\n      desc: \"Manage privacy\",\n      to: \"/admin/dashboard/manage-app/privacy-policy\",\n      image: privacyImage,\n    },\n    {\n      title: \"Terms of Service\",\n      desc: \"Manage terms of service\",\n      to: \"/admin/dashboard/manage-app/terms-of-service\",\n      image: termsImage,\n    },\n    {\n      title: \"Contact Us\",\n      desc: \"Manage contact us\",\n      to: \"/admin/dashboard/manage-app/contact-us\",\n      image: contactUsImage,\n    },\n  ];\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={{ xs: 2, md: 2 }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n      >\n        {list?.map((_, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <CardItem\n              image={list[index].image}\n              title={list[index].title}\n              excerpt={list[index].desc}\n              to={list[index].to}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ManageApp;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/home/index.js",["270","271","272","273","274","275","276","277","278","279"],"import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport { useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  onSnapshot,\n  query,\n  where,\n  collection,\n  db,\n} from \"../../../../../data/firebase\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridHeader,\n  GridFilterToolbarButton,\n  GridToolbarExport,\n} from \"@mui/x-data-grid\";\n// import GridColumnsToolbarButton\nimport Avatar from \"@mui/material/Avatar\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Divider from \"@mui/material/Divider\";\nimport CustomNoRowsOverlay from \"../../../../components/misc/placeholder/custom_no_data\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  button: {\n    textTransform: \"none\",\n    fontSize: 11,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CustomToolbar = () => {\n  const theme = useTheme();\n\n  return (\n    <GridToolbarContainer\n      color=\"secondary\"\n      style={{\n        display: \"flex\",\n        padding: 16,\n      }}\n    >\n      <Paper style={{ padding: 6, borderRadius: 10 }}>\n        <GridHeader />\n      </Paper>\n      {/* <Paper\n        style={{ padding: 6, borderRadius: 10, marginLeft: 5, marginRight: 5 }}\n      >\n        <GridFilterToolbarButton />\n      </Paper> */}\n      <Paper\n        style={{\n          alignSelf: \"flex-end\",\n          padding: 6,\n          marginLeft: \"auto\",\n          borderRadius: 10,\n        }}\n      >\n        <GridToolbarExport />\n      </Paper>\n    </GridToolbarContainer>\n  );\n};\n\nconst HomePage = () => {\n  const classes = useStyles();\n\n  const [projectsList, setProjectsList] = React.useState(null);\n  const [newsList, setNewsList] = React.useState(null);\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  const [usersList, setUsersList] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n    return () => {\n      setCategoriesList(null);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"news\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const news = [];\n      querySnapshot.forEach((doc) => {\n        news.push(doc.data());\n      });\n      setNewsList(news);\n    });\n    return () => {\n      setNewsList(null);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"projects\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const proj = [];\n      querySnapshot.forEach((doc) => {\n        proj.push(doc.data());\n      });\n      setProjectsList(proj);\n    });\n    return () => {\n      setProjectsList(null);\n    };\n  }, []);\n\n  // React.useEffect(() => {\n  //   const q = query(collection(db, \"users\"), where(\"userType\", \"==\", \"public\"));\n  //   const unsubscribe = onSnapshot(q, (querySnapshot) => {\n  //     const usrs = [];\n  //     querySnapshot.forEach((doc) => {\n  //       usrs.push(doc.data());\n  //     });\n  //     setUsersList(usrs.slice(0, 5));\n  //   });\n  //   return () => {\n  //     setUsersList([]);\n  //   };\n  // }, []);\n\n  // if (usersList) {\n  //   console.log(\"Filtered: \", usersList);\n  // }\n\n  const columns = [\n    {\n      field: \"photo\",\n      headerName: \"Image\",\n      width: 75,\n      renderCell: (params) => (\n        <Avatar alt=\"Profile Picture\" src={params.value} />\n      ),\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 180,\n      valueGetter: (params) =>\n        `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`,\n    },\n    {\n      field: \"email\",\n      headerName: \"Email Address\",\n      width: 110,\n      editable: true,\n    },\n    {\n      field: \"phone\",\n      headerName: \"Phone\",\n      width: 110,\n      editable: true,\n    },\n  ];\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={7} md={7}>\n          <div style={{ display: \"flex\", height: \"100%\", padding: 4 }}>\n            <div style={{ flexGrow: 1 }}>\n              {usersList && (\n                <DataGrid\n                  rows={usersList}\n                  columns={columns}\n                  pageSize={5}\n                  rowsPerPageOptions={[5]}\n                  checkboxSelection\n                  disableSelectionOnClick\n                  components={{\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                    Toolbar: CustomToolbar,\n                  }}\n                />\n              )}\n            </div>\n          </div>\n        </Grid>\n\n        <Grid item xs={12} sm={5} md={5}>\n          <Card sx={{ mb: 3, mt: 3 }}>\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total categories</Typography>\n              <Typography>{categoriesList?.length}</Typography>\n            </div>\n            <Divider color=\"primary\" />\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total news feeds</Typography>\n              <Typography>{newsList?.length}</Typography>\n            </div>\n            <Divider color=\"primary\" />\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total projects</Typography>\n              <Typography>{projectsList?.length}</Typography>\n            </div>\n            <Divider color=\"primary\" />\n            <div className={classes.row} style={{ padding: 10 }}>\n              <Typography>Total vendors</Typography>\n              <Typography>{0}</Typography>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_users/index.js",["280","281"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../components/dashboard/dialogs/custom-dialog\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n} from \"../../../../../data/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport UsersTable from \"../../../../components/dashboard/users-table\";\nimport CreateAdminForm from \"../../../../forms/admin/create_admin_form\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 386,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst ManageUsers = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [newsList, setNewsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"news\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const news = [];\n      querySnapshot.forEach((doc) => {\n        news.push(doc.data());\n      });\n      setNewsList(news);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create New Admin\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<CreateAdminForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={18}>\n            All Users\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Create Admin\n        </Button>\n      </div>\n      <br />\n      <Typography>Mobile Application Users</Typography>\n      <div>\n        <UsersTable />\n      </div>\n    </div>\n  );\n};\n\nexport default ManageUsers;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/store/slice/user.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/data/store/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/domain/service/index.js",["282","283","284"],"import { auth } from \"../../data/firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  setPersistence,\n  browserSessionPersistence,\n  setDoc,\n  doc,\n  db,\n} from \"../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\n\n// export default function Service() {\n//   const { enqueueSnackbar } = useSnackbar();\n// }\n\nexport const createUser = async (email, pass) => {\n  return await createUserWithEmailAndPassword(auth, email, pass);\n};\n\nexport const signInUser = async (email, pass) => {\n  try {\n    return await signInWithEmailAndPassword(auth, email, pass);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addCategory = async (id, name, image) => {\n  // Add a new document in collection \"cities\"\n  return await setDoc(doc(db, \"categories\", id), {\n    id: id,\n    name: name,\n    url: image,\n  });\n  //   db.collection(\"categories\").doc(id).set({\n  //     id: id,\n  //     name: name,\n  //     url: image,\n  //   });\n};\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/domain/helper/private-routes.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer2.js",["285","286","287"],"import React from \"react\";\nimport { Drawer as MUIDrawer } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport DashBoardIcon from \"@mui/icons-material/DashboardOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport logo from \"../../../../assets/images/icon_blue.png\";\n\nimport { useSnackbar } from \"notistack\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { auth } from \"../../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../../data/store/slice/user\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"275px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  listRoot: {\n    width: \"100%\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Drawer2 = (props) => {\n  const classes = useStyles();\n  const { history } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  // const { userStatus, userData } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const container =\n    props.window !== undefined ? () => window().document.body : undefined;\n\n  const drawerItems = [\n    {\n      text: \"Dashboard\",\n      icon: (\n        <DashBoardIcon\n          style={\n            selectedIndex === 0 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/\",\n    },\n    {\n      text: \"Manage App\",\n      icon: (\n        <SchoolOutlinedIcon\n          style={\n            selectedIndex === 1 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-app\",\n    },\n    {\n      text: \"Manage Users\",\n      icon: (\n        <PeopleOutlinedIcon\n          style={\n            selectedIndex === 2 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-users\",\n    },\n    {\n      text: \"Profile\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/profile\",\n    },\n  ];\n\n  let picSize, cornerSize;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const md = useMediaQuery(theme.breakpoints.only(\"md\"));\n  if (xs) {\n    cornerSize = 76;\n    picSize = 70;\n  } else if (sm) {\n    cornerSize = 96;\n    picSize = 90;\n  } else if (md) {\n    cornerSize = 116;\n    picSize = 110;\n  } else {\n    cornerSize = 136;\n    picSize = 130;\n  }\n\n  const handleListItemClick = (to, index) => {\n    history.push(to);\n    setSelectedIndex(index);\n  };\n\n  const signOut = async () => {\n    props.handleBackdrop(true);\n    try {\n      await auth.signOut();\n      dispatch(setUserData(null));\n      props.handleBackdrop(false);\n      enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n      history.replace({\n        pathname: \"/login\",\n      });\n    } catch (err) {\n      enqueueSnackbar(`${err?.message || \"Check your internet connection.\"}`, {\n        variant: \"error\",\n      });\n    }\n    // finally {\n    //   history.go(0);\n    // }\n  };\n\n  const myDrawer = (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        className={classes.toolbar}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <a href=\"/\">\n          <img src={logo} style={{ width: 100 }} alt=\"site logo\" />\n        </a>\n      </div>\n      <Divider />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <List className={classes.listRoot}>\n          {drawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (4 > 2) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n\n      <div\n        style={{\n          flexDirection: \"column\",\n          marginTop: \"auto\",\n          marginRight: \"auto\",\n          justifyContent: \"left\",\n          alignItems: \"start\",\n          padding: 16,\n        }}\n      >\n        <Button\n          startIcon={<PowerSettingsNewIcon />}\n          style={{ textTransform: \"none\" }}\n          onClick={signOut}\n        >\n          Sign Out\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <MUIDrawer\n      variant=\"permanent\"\n      open\n      classes={{ paper: classes.drawerPaper }}\n    >\n      {myDrawer}\n    </MUIDrawer>\n  );\n};\n\nexport default withRouter(Drawer2);\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/drawer/Drawer1.js",["288","289","290"],"import React from \"react\";\nimport { Drawer as MUIDrawer } from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport DashBoardIcon from \"@mui/icons-material/DashboardOutlined\";\nimport PeopleOutlinedIcon from \"@mui/icons-material/PeopleOutlined\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport logo from \"../../../../assets/images/icon_blue.png\";\n\nimport { useSnackbar } from \"notistack\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nimport { auth } from \"../../../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData } from \"../../../../data/store/slice/user\";\n\nconst drawerWidth = 270;\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: \"275px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  listRoot: {\n    width: \"100%\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Drawer1 = (props) => {\n  const classes = useStyles();\n  const { history, mobileOpen, setMobileOpen } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const container =\n    props.window !== undefined ? () => window().document.body : undefined;\n\n  const drawerItems = [\n    {\n      text: \"Dashboard\",\n      icon: (\n        <DashBoardIcon\n          style={\n            selectedIndex === 0 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/\",\n    },\n    {\n      text: \"Manage App\",\n      icon: (\n        <SchoolOutlinedIcon\n          style={\n            selectedIndex === 1 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-app\",\n    },\n    {\n      text: \"Manage Users\",\n      icon: (\n        <PeopleOutlinedIcon\n          style={\n            selectedIndex === 2 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/manage-users\",\n    },\n    {\n      text: \"Profile\",\n      icon: (\n        <PersonOutlineIcon\n          style={\n            selectedIndex === 3 ? { color: \"#4C3992\" } : { color: \"black\" }\n          }\n        />\n      ),\n      to: \"/admin/dashboard/profile\",\n    },\n  ];\n\n  let picSize, cornerSize;\n  const theme = useTheme();\n  const xs = useMediaQuery(theme.breakpoints.only(\"xs\"));\n  const sm = useMediaQuery(theme.breakpoints.only(\"sm\"));\n  const md = useMediaQuery(theme.breakpoints.only(\"md\"));\n  if (xs) {\n    cornerSize = 76;\n    picSize = 70;\n  } else if (sm) {\n    cornerSize = 96;\n    picSize = 90;\n  } else if (md) {\n    cornerSize = 116;\n    picSize = 110;\n  } else {\n    cornerSize = 136;\n    picSize = 130;\n  }\n\n  const handleListItemClick = (to, index) => {\n    history.push(to);\n    setSelectedIndex(index);\n    setMobileOpen(!mobileOpen);\n  };\n\n  const signOut = async () => {\n    props.handleBackdrop(true);\n    try {\n      await auth.signOut();\n      dispatch(setUserData(null));\n      props.handleBackdrop(false);\n      enqueueSnackbar(`Successfully logged out`, { variant: \"success\" });\n      history.replace({\n        pathname: \"/login\",\n      });\n    } catch (err) {\n      enqueueSnackbar(`${err?.message || \"Check your internet connection.\"}`, {\n        variant: \"error\",\n      });\n    }\n    // finally {\n    //   history.go(0);\n    // }\n  };\n\n  const myDrawer = (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        className={classes.toolbar}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <a href=\"/\">\n          <img src={logo} style={{ width: 100 }} alt=\"site logo\" />\n        </a>\n      </div>\n      <Divider />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <List className={classes.listRoot}>\n          {drawerItems.map((item, index) => {\n            const { text, icon, to } = item;\n            if (1 === 1) {\n              return (\n                <ListItem\n                  button\n                  key={index}\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(to, index)}\n                >\n                  <ListItemIcon>{icon}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              );\n            } else {\n              return (\n                <Skeleton\n                  key={index}\n                  component=\"li\"\n                  variant=\"rect\"\n                  animation=\"wave\"\n                  height={30}\n                  style={{ margin: 10 }}\n                />\n              );\n            }\n          })}\n        </List>\n      </div>\n\n      <div\n        style={{\n          flexDirection: \"column\",\n          marginTop: \"auto\",\n          marginRight: \"auto\",\n          justifyContent: \"left\",\n          alignItems: \"start\",\n          padding: 16,\n        }}\n      >\n        <Button\n          startIcon={<PowerSettingsNewIcon />}\n          style={{ textTransform: \"none\" }}\n          onClick={signOut}\n        >\n          Sign Out\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <MUIDrawer\n      variant={props.drawerVariant}\n      container={container}\n      className={classes.drawer}\n      anchor={props.anchor}\n      open={mobileOpen}\n      onClose={props.handleDrawerToggle}\n      classes={{ paper: classes.drawerPaper }}\n      ModalProps={{\n        keepMounted: true, // Better open performance on mobile.\n      }}\n    >\n      {myDrawer}\n    </MUIDrawer>\n  );\n};\n\nexport default withRouter(Drawer1);\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/dialogs/custom-dialog.js",["291","292","293"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Modal from \"@mui/material/Modal\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    //top: `${top}%`,\n    margin: \"auto\",\n    minWidth: 200,\n    //left: `${left}%`,\n    //transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    // minWidth: '20%',\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    borderRadius: 16,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst CustomDialog = (props) => {\n  const { title, open, handleClose, bodyComponent } = props;\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Typography\n          variant=\"h6\"\n          style={{ fontFamily: \"roboto\", fontWeight: \"600\" }}\n        >\n          {title}\n        </Typography>\n\n        <IconButton onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <br />\n      {bodyComponent}\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        disablePortal={true}\n        disableEscapeKeyDown={true}\n        // disableBackdropClick={false}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default CustomDialog;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/new_category_form.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/category/update_category.js",["294","295"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditCategoryForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, name, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNew = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"categories\", \"img_\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              url: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Category updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`Error updating category`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateCategory = async (e) => {\n    setIsLoading(true);\n    if (!previewPassport) {\n      console.log(\"ID: \", id);\n      const mRef = doc(db, \"categories\", \"img_\" + id);\n      try {\n        await updateDoc(mRef, {\n          title: formValues.title,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`Category name updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`Error updating name`, {\n          variant: \"error\",\n        });\n      }\n    } else {\n      setFormValues({ title: formValues.title ? formValues.title : name });\n      const fileRef = ref(storage, \"categories/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          // File deleted now upload new file,\n          //get download url and save to firestore\n          setIsLoading(false);\n          uploadNew();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateCategory}>\n        <TextValidator\n          id=\"title\"\n          label=\"Category name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? name\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          // onBlur={handleBlur}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Category name is required\"]}\n        />\n        <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        />\n\n        <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div>\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditCategoryForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/update_news_form.js",["296","297"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditNewsForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title,\n    subTitle,\n    img,\n    category,\n    body,\n    authorName,\n    authorPhoto,\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \",\n    image: \"\",\n    category: \"\",\n    subTitle: \" \",\n    body: \" \",\n    createdAt: \"\",\n    authorName: \" \",\n    authorPhoto: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewAuthorPhoto = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              authorPhoto: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateNews = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      subTitle: formValues.subTitle ? formValues.subTitle : subTitle,\n      authorName: formValues.authorName ? formValues.authorName : authorName,\n      category: formValues.category ? formValues.category : category,\n      body: formValues.body ? formValues.body : body,\n    });\n    if (!previewImage && !previewAuthor) {\n      //No image is changed. So update all text\n      console.log(\"ID: \", id);\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"news\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          subTitle: formValues.subTitle,\n          authorName: formValues.authorName,\n          category: formValues.category,\n          body: formValues.body,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`News title updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else if (!previewImage && previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else {\n      const fileRef = ref(storage, \"news/\" + id);\n      const fileRef2 = ref(storage, \"news/img_\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n              let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"news\", \"\" + id);\n                        await updateDoc(mRef, {\n                          title: formValues.title,\n                          subTitle: formValues.subTitle,\n                          authorName: formValues.authorName,\n                          category: formValues.category,\n                          body: formValues.body,\n                          updatedAt: timeNow,\n                          image: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"news\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    authorPhoto: download,\n                                  });\n                                  setOpen(false);\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `Newsfeed updated successfully`,\n                                    {\n                                      variant: \"success\",\n                                    }\n                                  );\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(`${error?.message}`, {\n                                    variant: \"error\",\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {}\n                    }\n                  );\n                }\n              );\n            })\n            .catch((err) => {});\n          // setIsLoading(false);\n          // uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category ? formValues.category : category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"subTitle\"\n          label=\"News subtitle (optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.subTitle === \" \"\n              ? subTitle\n              : !formValues.subTitle\n              ? \"\"\n              : formValues.subTitle\n          }\n          onChange={handleChange}\n          name=\"subTitle\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type news here\"\n          name=\"body\"\n          label=\"News content\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  formValues.authorName === \" \"\n                    ? authorName\n                    : !formValues.authorName\n                    ? \"\"\n                    : formValues.authorName\n                }\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                alt=\"Author\"\n                src={previewAuthor ? previewAuthor : authorPhoto}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditNewsForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/news/add_news_form.js",["298"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  updateDoc,\n  onSnapshot,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddNewsForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    category: \"\",\n    subTitle: \" \",\n    body: \"\",\n    createdAt: \"\",\n    authorName: \"\",\n    authorPhoto: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createNews = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"news\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            category: formValues.category,\n            subTitle: formValues.subTitle,\n            authorName: formValues.authorName,\n            authorPhoto: \" \",\n            body: formValues.body,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              //Now upload author image\n              const tmn = timeNow.getTime();\n              setIsUploading(true);\n              setIsLoading(false);\n              uploadTask2.on(\n                \"state_changed\",\n                (snapshot2) => {\n                  const prog =\n                    (snapshot2.bytesTransferred / snapshot2.totalBytes) * 100;\n                  setProgress(prog);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask2.snapshot.ref).then(\n                    async (download) => {\n                      setIsUploading(false);\n                      setIsLoading(true);\n                      try {\n                        const mRef = doc(db, \"news\", \"\" + tmn);\n                        await updateDoc(mRef, {\n                          authorPhoto: download,\n                        });\n                        setOpen(false);\n                        setIsLoading(false);\n                        enqueueSnackbar(`News item added successfully`, {\n                          variant: \"success\",\n                        });\n                      } catch (error) {\n                        setIsLoading(false);\n                        enqueueSnackbar(`${error?.message}`, {\n                          variant: \"error\",\n                        });\n                      }\n                    }\n                  );\n                }\n              );\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"subTitle\"\n          label=\"News subtitle (optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.subTitle}\n          onChange={handleChange}\n          name=\"subTitle\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type news here\"\n          name=\"body\"\n          label=\"News content\"\n          value={formValues.body}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.authorPhoto}\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                validators={[\"required\"]}\n                errorMessages={[\"Author's image is required\"]}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.authorName}\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewAuthor && (\n                <Avatar\n                  alt=\"Author\"\n                  src={previewAuthor}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddNewsForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/categories/categories.js",["299","300","301","302"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport CategoryForm from \"../../../../../forms/category/new_category_form\";\nimport EditCategoryForm from \"../../../../../forms/category/update_category\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { display } from \"@mui/system\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n}));\n\nconst CategoryItem = (props) => {\n  const { image, name, id } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteCategory = () => {\n    const fileRef = ref(storage, \"categories/img_\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // File deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"categories\", \"img_\" + id));\n          setOpenDelete(false);\n          enqueueSnackbar(`Item deleted successfully`, { variant: \"success\" });\n        } catch (error) {\n          setOpenDelete(false);\n          enqueueSnackbar(`Item not deleted. Try again`, { variant: \"error\" });\n        }\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteCategory}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditCategoryForm setOpen={setOpen} img={image} name={name} id={id} />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Category\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3}>\n        <CardMedia image={image} className={classes.cardMedia} />\n        <Divider />\n        <div className={classes.row}>\n          <Typography fontSize={18} color=\"black\" padding={1}>\n            {name}\n          </Typography>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n      </Card>\n    </>\n  );\n};\n\nconst Categories = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n      console.log(\"Current cities in CA: \", categories);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create New Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<CategoryForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Categories\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Category\n        </Button>\n      </div>\n      <br />\n      <div className={classes.main}>\n        {categoriesList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {categoriesList?.map((_, index) => (\n              <Grid item xs={2} sm={4} md={4} key={index}>\n                <CategoryItem\n                  id={categoriesList[index]?.id}\n                  image={categoriesList[index]?.url}\n                  name={categoriesList[index].title}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/newsfeeds.js",["303"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport EditNewsForm from \"../../../../../forms/news/update_news_form\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport AddNewsForm from \"../../../../../forms/news/add_news_form\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 386,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst NewsItemCard = (props) => {\n  const {\n    image,\n    title,\n    subTitle,\n    id,\n    authorName,\n    authorPhoto,\n    body,\n    date,\n    category,\n    item,\n  } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteNews = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"news/\" + id);\n    const fileRef2 = ref(storage, \"news/img_\" + id);\n\n    deleteObject(fileRef)\n      .then(() => {\n        deleteObject(fileRef2)\n          .then(async () => {\n            // Images deleted now delete from firestore,\n            try {\n              await deleteDoc(doc(db, \"news\", \"\" + id));\n              enqueueSnackbar(`Item deleted successfully`, {\n                variant: \"success\",\n              });\n            } catch (error) {\n              console.log(\"ERR: Del: \", error);\n              enqueueSnackbar(`Item not deleted. Try again`, {\n                variant: \"error\",\n              });\n            }\n          })\n          .catch((err) => {});\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteNews}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update News\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditNewsForm\n            setOpen={setOpen}\n            img={image}\n            title={title}\n            id={id}\n            subTitle={subTitle}\n            authorName={authorName}\n            authorPhoto={authorPhoto}\n            body={body}\n            category={category}\n            date={date}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete News\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <Avatar\n              alt=\"Passport\"\n              src={authorPhoto}\n              className={classes.avatar}\n            />\n            <div className={classes.column}>\n              <Typography variant=\"body2\" fontSize={14}>\n                {authorName}\n              </Typography>\n              <Typography variant=\"body2\" fontSize={13}>\n                {date}\n              </Typography>\n            </div>\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/admin/dashboard/manage-app/news-feeds:\" + item?.id,\n              state: {\n                title: item?.title,\n                subTitle: item?.subTitle,\n                category: item?.category,\n                image: item?.image,\n                body: item?.body,\n                authorName: item?.authorName,\n                authorPhoto: item?.authorPhoto,\n                date: item?.createdAt,\n                id: item?.id,\n              },\n            })\n          }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {title?.length > 75 ? title?.substring(0, 75) + \"...\" : title}\n            </Typography>\n          </div>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            gutterBottom\n            fontSize={12}\n            color=\"black\"\n            paddingLeft={1}\n            paddingBottom={1}\n          >\n            {category}\n          </Typography>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {body?.length > 150 ? body?.substring(0, 150) + \"...\" : body}\n          </Typography>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst NewsFeeds = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [newsList, setNewsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"news\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const news = [];\n      querySnapshot.forEach((doc) => {\n        news.push(doc.data());\n      });\n      setNewsList(news);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create NewsFeed\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddNewsForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            News Feeds\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add News\n        </Button>\n      </div>\n      <br />\n      <div>\n        {newsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {newsList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <NewsItemCard\n                  item={item}\n                  id={newsList[index]?.id}\n                  image={newsList[index]?.image}\n                  title={newsList[index]?.title}\n                  subTitle={newsList[index]?.subTitle}\n                  authorName={newsList[index]?.authorName}\n                  authorPhoto={newsList[index]?.authorPhoto}\n                  body={newsList[index]?.body}\n                  // date={newsList[index]?.createdAt}\n                  category={newsList[index]?.category}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {newsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NewsFeeds;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/news/news_item.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/index.js",["304","305"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport EditProjectForm from \"../../../../../forms/projects/update_project_form\";\nimport AddProjectForm from \"../../../../../forms/projects/add_project_form\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 360,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst ProjectsItemCard = (props) => {\n  const { image, title, id, createdAt, state, item, updatedAt, desc } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteProject = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"projects/\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        try {\n          await deleteDoc(doc(db, \"projects\", \"\" + id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteProject}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Project\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditProjectForm\n            setOpen={setOpen}\n            img={image}\n            title={title}\n            id={id}\n            state={state}\n            desc={desc}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete News\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <div className={classes.column}>\n              <Typography variant=\"body2\" fontSize={14}>\n                {state}\n              </Typography>\n              <Typography variant=\"body2\" fontSize={13}>\n                {`${new Date(updatedAt?.seconds * 1000).toLocaleDateString(\n                  \"en-US\"\n                )}`}\n              </Typography>\n            </div>\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/admin/dashboard/manage-app/projects:\" + item?.id,\n              state: {\n                id: item?.id,\n                title: item?.title,\n                desc: item?.description,\n                state: item?.state,\n                image: item?.image,\n                createdAt: item?.createdAt,\n                updatedAt: item?.updatedAt,\n              },\n            })\n          }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {title?.length > 75 ? title?.substring(0, 75) + \"...\" : title}\n            </Typography>\n          </div>\n\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {desc?.length > 100 ? desc?.substring(0, 100) + \"...\" : desc}\n          </Typography>\n          <div className={classes.subRow}>\n            <Button variant=\"text\" size=\"small\">\n              View\n            </Button>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Projects = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [projectsList, setProjectsList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"projects\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const proj = [];\n      querySnapshot.forEach((doc) => {\n        proj.push(doc.data());\n      });\n      setProjectsList(proj);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create Project\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddProjectForm setOpen={setOpen} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Projects\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Project\n        </Button>\n      </div>\n      <br />\n      <div>\n        {projectsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {projectsList?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <ProjectsItemCard\n                  item={item}\n                  id={projectsList[index]?.id}\n                  image={projectsList[index]?.image}\n                  title={projectsList[index]?.title}\n                  desc={projectsList[index]?.description}\n                  state={projectsList[index]?.state}\n                  createdAt={projectsList[index]?.createdAt}\n                  updatedAt={projectsList[index]?.updatedAt}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {projectsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No records found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/projects/project_item.js",["306","307"],"import React from \"react\";\nimport { Avatar, Button, Typography } from \"@mui/material\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport { IconButton } from \"@mui/material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport EditNewsForm from \"../../../../../forms/news/update_news_form\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  deleteDoc,\n  deleteObject,\n  ref,\n  db,\n  doc,\n  storage,\n} from \"../../../../../../data/firebase\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport EditProjectForm from \"../../../../../forms/projects/update_project_form\";\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 48,\n    width: 48,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst ProjectItem = (props) => {\n  const { history, location } = props;\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteNews = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"news/\" + location?.state?.id);\n    const fileRef2 = ref(storage, \"news/img_\" + location?.state?.id);\n\n    deleteObject(fileRef)\n      .then(() => {\n        deleteObject(fileRef2)\n          .then(async () => {\n            // Images deleted now delete from firestore,\n            try {\n              await deleteDoc(doc(db, \"news\", \"\" + location?.state?.id));\n              enqueueSnackbar(`Item deleted successfully`, {\n                variant: \"success\",\n              });\n            } catch (error) {\n              console.log(\"ERR: Del: \", error);\n              enqueueSnackbar(`Item not deleted. Try again`, {\n                variant: \"error\",\n              });\n            }\n          })\n          .catch((err) => {});\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${location?.state?.title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteNews}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Project\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditProjectForm\n            setOpen={setOpen}\n            img={location?.state?.image}\n            title={location?.state?.title}\n            id={location?.state?.id}\n            desc={location?.state?.desc}\n            state={location?.state?.state}\n            createdAt={location?.state?.createdAt}\n            updatedAt={location?.state?.updatedAt}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Project\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <div className={classes.row}>\n        <Button\n          startIcon={<ArrowBackIosNewIcon />}\n          onClick={() => history.goBack()}\n        >\n          Back\n        </Button>\n        <div className={classes.lhsRow}>\n          <Typography\n            fontSize={21}\n            variant=\"h6\"\n            textAlign=\"center\"\n            fontWeight=\"bold\"\n          >\n            {location?.state?.title}\n          </Typography>\n        </div>\n\n        <div className={classes.lhsRow}>\n          <IconButton\n            aria-label=\"delete\"\n            color=\"primary\"\n            onClick={() => setOpen(true)}\n          >\n            <Edit />\n          </IconButton>\n          <IconButton\n            aria-label=\"delete\"\n            color=\"error\"\n            onClick={() => setOpenDelete(true)}\n          >\n            <Delete />\n          </IconButton>\n        </div>\n      </div>\n      <br />\n      {/* Image Section */}\n      <div>\n        <img\n          src={location?.state?.image}\n          alt=\"featured_image\"\n          width=\"100%\"\n          height={400}\n        />\n      </div>\n      <br />\n\n      <Typography fontSize={16} variant=\"h6\" textAlign=\"start\" gutterBottom>\n        {location?.state?.state}\n      </Typography>\n      <Typography fontSize={12} variant=\"h6\" textAlign=\"start\">\n        {` Last updated on ${new Date(\n          location?.state?.updatedAt?.seconds * 1000\n        ).toLocaleDateString(\"en-US\")}`}\n      </Typography>\n      <br />\n\n      <div className={classes.lhsRow}>\n        <Typography fontSize={15} variant=\"h6\" textAlign=\"start\">\n          {location?.state?.desc}\n        </Typography>\n      </div>\n      <br />\n    </>\n  );\n};\n\nexport default withRouter(ProjectItem);\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/update_project_form.js",["308"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditProjectForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, id, title, img, state, desc } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \",\n    image: \"\",\n    state: \" \",\n    desc: \" \",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [statesList, setStatesList] = React.useState([\n    \"Akwa Ibom State\",\n    \"Bayelsa State\",\n    \"Cross River State\",\n    \"Delta State\",\n    \"Edo State\",\n    \"Rivers State\",\n  ]);\n\n  //   React.useEffect(() => {\n  //     const q = query(collection(db, \"categories\"));\n  //     const unsubscribe = onSnapshot(q, (querySnapshot) => {\n  //       const categories = [];\n  //       querySnapshot.forEach((doc) => {\n  //         categories.push(doc.data());\n  //       });\n  //       setCategoriesList(categories);\n  //     });\n  //   }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateProject = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      state: formValues.state ? formValues.state : state,\n      desc: formValues?.desc ? formValues.desc : desc,\n    });\n    if (previewImage) {\n      //Change only the featured image and all texts\n      const fileRef = ref(storage, \"projects/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else {\n      const fileRef = ref(storage, \"projects/\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          const timeNow = new Date();\n          let storageRef = ref(storage, \"projects/\" + timeNow.getTime());\n          let uploadTask = uploadBytesResumable(storageRef, file);\n\n          setIsLoading(false);\n          setIsUploading(true);\n\n          uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n              const uprogress =\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n              setProgress(uprogress);\n            },\n            (error) => {\n              setIsUploading(false);\n              console.log(error);\n              enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n            },\n            () => {\n              setIsUploading(false);\n              setIsLoading(true);\n              getDownloadURL(uploadTask?.snapshot?.ref).then(\n                async (downloadURL) => {\n                  try {\n                    const mRef = doc(db, \"projects\", \"\" + id);\n                    await updateDoc(mRef, {\n                      title: formValues.title,\n                      state: formValues.state,\n                      description: formValues.desc,\n                      updatedAt: timeNow,\n                      image: downloadURL,\n                    });\n                    setOpen(false);\n                    setIsLoading(false);\n                    enqueueSnackbar(`Project updated successfully`, {\n                      variant: \"success\",\n                    });\n                  } catch (error) {}\n                }\n              );\n            }\n          );\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          setIsUploading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateProject}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.state ? formValues.state : state}\n          onChange={handleChange}\n          label=\"Project state\"\n          name=\"state\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project state is required\"]}\n        >\n          {(statesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item ?? \"\"}>\n              {item ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Project title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Project title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type project description here\"\n          name=\"desc\"\n          label=\"Project Description\"\n          value={\n            formValues.desc === \" \"\n              ? desc\n              : !formValues.desc\n              ? \"\"\n              : formValues.desc\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update Project\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditProjectForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/projects/add_project_form.js",["309","310","311"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nimport Dropzone from \"react-dropzone\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddProjectForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    image: \"\",\n    state: \"\",\n    desc: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const [statesList, setStatesList] = React.useState([\n    \"Akwa Ibom State\",\n    \"Bayelsa State\",\n    \"Cross River State\",\n    \"Delta State\",\n    \"Edo State\",\n    \"Rivers State\",\n  ]);\n  const [files, setFiles] = React.useState([]);\n  const [fileNames, setFileNames] = React.useState([]);\n  const [fileError, setFileError] = React.useState(\"\");\n\n  const handleDrop = (acceptedFiles) => {\n    setFileNames(acceptedFiles.map((file) => file.name));\n    setFiles(acceptedFiles);\n  };\n\n  const fileValidator = (file) => {\n    if (!file || file?.length < 1) {\n      return {\n        code: \"name-too-large\",\n        message: `You must select at least one file!`,\n      };\n    }\n    return null;\n  };\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createProject = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"projects/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"projects\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            title: formValues.title,\n            image: downloadURL,\n            state: formValues.state,\n            description: formValues.desc,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              //Now upload author image\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New project added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsUploading(false);\n              setIsLoading(false);\n              enqueueSnackbar(`${error?.message}`, {\n                variant: \"error\",\n              });\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createProject}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Featured image is required\"]}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.state}\n          onChange={handleChange}\n          label=\"Project state\"\n          name=\"state\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project state is required\"]}\n        >\n          {(statesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item ?? \"\"}>\n              {item ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"Project title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.title}\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Project title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Project description here\"\n          name=\"desc\"\n          label=\"Project description\"\n          value={formValues.desc}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Project description is required\"]}\n        />\n\n        <Dropzone\n          onDrop={handleDrop}\n          validator={fileValidator}\n          accept={\n            \"image/png, image/jpg, image/jpeg, application/pdf, application/mspowerpoint, application/powerpoint, application/vnd.ms-powerpoint, application/x-mspowerpoint\"\n          }\n        >\n          {({ getRootProps, getInputProps }) => (\n            <div {...getRootProps({ className: classes.dropZone })}>\n              <input {...getInputProps()} />\n              <p>Drag'n'drop files, or click to select files</p>\n            </div>\n          )}\n        </Dropzone>\n        <FormHelperText style={{ color: \"red\" }}>\n          {files?.length < 1 ? fileError : null}\n        </FormHelperText>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Create Project\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddProjectForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/misc/placeholder/custom_no_data.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/index.js",["312","313","314","315","316","317"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport CategoryDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport AddNewsForm from \"../../../../../forms/news/add_news_form\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport Paper from \"@mui/material/Paper\";\nimport DirEditCategoryForm from \"../../../../../forms/directories/edit_category\";\nimport DirAddCategoryForm from \"../../../../../forms/directories/add_category\";\nimport AddVendorForm from \"../../../../../forms/directories/add_vendor\";\nimport EditVendorForm from \"../../../../../forms/directories/edit_vendor\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 386,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst VendorItemCard = (props) => {\n  const {\n    id,\n    image,\n    logo,\n    name,\n    address,\n    category,\n    phone,\n    website,\n    description,\n    opensAt,\n    closesAt,\n    is24hrs,\n    blocked,\n    item,\n  } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteVendor = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"news/\" + id);\n    const fileRef2 = ref(storage, \"news/img_\" + id);\n\n    deleteObject(fileRef)\n      .then(() => {\n        deleteObject(fileRef2)\n          .then(async () => {\n            // Images deleted now delete from firestore,\n            try {\n              await deleteDoc(doc(db, \"news\", \"\" + id));\n              enqueueSnackbar(`Item deleted successfully`, {\n                variant: \"success\",\n              });\n            } catch (error) {\n              console.log(\"ERR: Del: \", error);\n              enqueueSnackbar(`Item not deleted. Try again`, {\n                variant: \"error\",\n              });\n            }\n          })\n          .catch((err) => {});\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteVendor}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Vendor\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditVendorForm\n            setOpen={setOpen}\n            img={image}\n            id={id}\n            logo={logo}\n            name={name}\n            address={address}\n            phone={phone}\n            website={website}\n            category={category}\n            opensAt={opensAt}\n            closesAt={closesAt}\n            description={description}\n            is24hrs={is24hrs}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete News\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <Avatar alt=\"Passport\" src={logo} className={classes.avatar} />\n            {/* <div className={classes.column}>\n              <Typography variant=\"body2\" fontSize={14}>\n                {authorName}\n              </Typography>\n              <Typography variant=\"body2\" fontSize={13}>\n                {date}\n              </Typography>\n            </div> */}\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname: \"/admin/dashboard/manage-app/vendors:\" + item?.id,\n              state: {\n                id: item?.id,\n                name: item?.name,\n                phone: item?.phone,\n                category: item?.category,\n                image: item?.image,\n                description: item?.description,\n                logo: item?.logo,\n                address: item?.address,\n                website: item?.website,\n                blocked: item?.blocked,\n                opensAt: item?.opensAt,\n                closesAt: item?.closesAt,\n                is24hrs: item?.is24hrs,\n                createdAt: item?.createdAt,\n                updatedAt: item?.updatedAt,\n              },\n            })\n          }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {name?.length > 75 ? name?.substring(0, 75) + \"...\" : name}\n            </Typography>\n          </div>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            gutterBottom\n            fontSize={12}\n            color=\"black\"\n            paddingLeft={1}\n            paddingBottom={1}\n          >\n            {category}\n          </Typography>\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {description?.length > 150\n              ? description?.substring(0, 150) + \"...\"\n              : description}\n          </Typography>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst VendorCategoryCard = (props) => {\n  const { id, name, updatedAt } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteItem = async () => {\n    setOpenDelete(false);\n    try {\n      await deleteDoc(doc(db, \"directories-categories\", \"\" + id));\n      setOpenDelete(false);\n      enqueueSnackbar(`Item deleted successfully`, { variant: \"success\" });\n    } catch (error) {\n      setOpenDelete(false);\n      enqueueSnackbar(`Item not deleted. Try again`, { variant: \"error\" });\n    }\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteItem}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Category\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <DirEditCategoryForm setOpen={setOpen} title={name} id={id} />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Category\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={2}>\n        <CardActionArea\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"body1\" sx={{ marginLeft: 2 }}>\n            {name}\n          </Typography>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Directories = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [openCategory, setOpenCategory] = React.useState(false);\n  const [vendorsList, setVendorsList] = React.useState(null);\n  const [vendorCategories, setVendorCategories] = React.useState([]);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"directories-categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setVendorCategories(categories);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"directories-vendors\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const vendors = [];\n      querySnapshot.forEach((doc) => {\n        vendors.push(doc.data());\n      });\n      setVendorsList(vendors);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CustomDialog\n        open={open}\n        title=\"Create Vendor\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={<AddVendorForm setOpen={setOpen} />}\n      />\n\n      <CategoryDialog\n        open={openCategory}\n        title=\"Create Category\"\n        handleClose={() => setOpenCategory(false)}\n        bodyComponent={<DirAddCategoryForm setOpen={setOpenCategory} />}\n      />\n      <div className={classes.row}>\n        <div className={classes.lhsRow}>\n          <Button\n            startIcon={<ArrowBackIosNewIcon />}\n            onClick={() => history.goBack()}\n          >\n            Back\n          </Button>\n          <Typography variant=\"h6\" color=\"blue\" fontSize={21}>\n            Directories\n          </Typography>\n        </div>\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          disabled={vendorCategories?.length < 1}\n          onClick={() => setOpen(true)}\n        >\n          Vendor\n        </Button>\n      </div>\n      <br />\n      <Paper\n        sx={{\n          padding: 2,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"left\",\n          alignItems: \"stretch\",\n        }}\n      >\n        <Button\n          startIcon={<Add />}\n          color=\"primary\"\n          variant=\"contained\"\n          sx={{ marginRight: 2 }}\n          onClick={() => setOpenCategory(true)}\n        >\n          Category\n        </Button>\n\n        {vendorCategories && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 3 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {vendorCategories?.map((item, index) => (\n              <Grid item xs={12} sm={6} md={6} key={index}>\n                <VendorCategoryCard\n                  item={item}\n                  id={vendorCategories[index]?.id}\n                  name={vendorCategories[index]?.name}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Paper>\n      <br />\n      <div>\n        {vendorsList && (\n          <Grid\n            container\n            spacing={{ xs: 2, md: 2 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            {vendorsList?.map((item, index) => (\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                md={6}\n                key={index}\n                onClick={() =>\n                  history.push({\n                    pathname: \"/admin/dashboard/manage-app/vendors:\" + item?.id,\n                    state: {\n                      name: vendorsList[index]?.name,\n                      address: vendorsList[index]?.address,\n                      phone: vendorsList[index]?.phone,\n                      image: vendorsList[index]?.image,\n                      website: vendorsList[index]?.website,\n                      opensAt: vendorsList[index]?.opensAt,\n                      closesAt: vendorsList[index]?.closesAt,\n                      description: vendorsList[index]?.description,\n                      createdAt: vendorsList[index]?.createdAt,\n                      updatedAt: vendorsList[index]?.updatedAt,\n                      category: vendorsList[index]?.category,\n                      logo: vendorsList[index]?.logo,\n                      id: vendorsList[index]?.id,\n                      is24hrs: vendorsList[index]?.is24Hours,\n                    },\n                  })\n                }\n              >\n                <VendorItemCard\n                  item={item}\n                  id={vendorsList[index]?.id}\n                  image={vendorsList[index]?.image}\n                  logo={vendorsList[index]?.logo}\n                  name={vendorsList[index]?.name}\n                  address={vendorsList[index]?.address}\n                  phone={vendorsList[index]?.phone}\n                  website={vendorsList[index]?.website}\n                  opensAt={vendorsList[index]?.opensAt}\n                  closesAt={vendorsList[index]?.closesAt}\n                  description={vendorsList[index]?.description}\n                  createdAt={vendorsList[index]?.createdAt}\n                  updatedAt={vendorsList[index]?.updatedAt}\n                  category={vendorsList[index]?.category}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        {vendorsList?.length < 1 && (\n          <div className={classes.main}>\n            <div style={{ marginTop: \"auto\" }}>\n              <CloudOffIcon fontSize=\"large\" />\n              <Typography>No vendors found</Typography>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Directories;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_category.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_vendor.js",["318","319"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  updateDoc,\n  onSnapshot,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport {\n  Checkbox,\n  CircularProgress,\n  Grid,\n  IconButton,\n  MenuItem,\n} from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { CameraAlt } from \"@mui/icons-material\";\nimport placeholder from \"../../../assets/images/placeholder.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: \"100%\",\n    height: 156,\n  },\n  logo: {\n    margin: \"0px auto 15px auto\",\n    width: 48,\n    height: 48,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n}));\n\nconst timesOpen = [\n  \"05:00 AM\",\n  \"06:00 AM\",\n  \"07:00 AM\",\n  \"08:00 AM\",\n  \"09:00 AM\",\n  \"10:00 AM\",\n  \"11:00 AM\",\n  \"12:00 PM\",\n];\n\nconst timesClosed = [\n  \"02:00 PM\",\n  \"03:00 PM\",\n  \"04:00 PM\",\n  \"05:00 PM\",\n  \"06:00 PM\",\n  \"07:00 PM\",\n  \"08:00 PM\",\n  \"09:00 PM\",\n  \"10:00 PM\",\n  \"11:00 PM\",\n  \"12:00 AM\",\n];\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddVendorForm = (props) => {\n  const classes = useStyles();\n  let { setOpen } = props;\n  const [formValues, setFormValues] = React.useState({\n    name: \"\",\n    image: \"\",\n    logo: \"\",\n    category: \"\",\n    address: \"\",\n    description: \"\",\n    phone: \"\",\n    website: \"\",\n    opensAt: \"\",\n    closesAt: \"\",\n    is24Hrs: false,\n  });\n  const [file, setFile] = React.useState(null);\n  const [logoFile, setLogoFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(placeholder);\n  const [previewLogo, setPreviewLogo] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const [categoriesList, setCategoriesList] = React.useState(null);\n  const coverRef = React.useRef();\n  const [is24Hrs, setIs24Hrs] = React.useState(false);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"directories-categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"logo\") {\n      setLogoFile(e.target.files[0]);\n      setPreviewLogo(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        logo: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createVendor = (e) => {\n    setIsUploading(true);\n\n    //First upload images to firebase storage then save to firestore\n    const timeNow = new Date();\n    let storageRef = ref(storage, \"vendors/\" + timeNow.getTime());\n    let storageRef2 = ref(storage, \"vendors/img_\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n    let uploadTask2 = uploadBytesResumable(storageRef2, logoFile);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"directories-vendors\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            name: formValues.name,\n            image: downloadURL,\n            category: formValues.category,\n            address: formValues.address,\n            phone: formValues.phone,\n            website: formValues.website,\n            description: formValues.description,\n            opensAt: is24Hrs ? \" \" : formValues.opensAt,\n            closesAt: is24Hrs ? \" \" : formValues.closesAt,\n            is24Hours: is24Hrs,\n            logo: \" \",\n            blocked: false,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              //Now upload author image\n              const tmn = timeNow.getTime();\n              setIsUploading(true);\n              setIsLoading(false);\n              uploadTask2.on(\n                \"state_changed\",\n                (snapshot2) => {\n                  const prog =\n                    (snapshot2.bytesTransferred / snapshot2.totalBytes) * 100;\n                  setProgress(prog);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask2.snapshot.ref).then(\n                    async (download) => {\n                      setIsUploading(false);\n                      setIsLoading(true);\n                      try {\n                        const mRef = doc(db, \"directories-vendors\", \"\" + tmn);\n                        await updateDoc(mRef, {\n                          logo: download,\n                        });\n                        setOpen(false);\n                        setIsLoading(false);\n                        enqueueSnackbar(`New vendor added successfully`, {\n                          variant: \"success\",\n                        });\n                      } catch (error) {\n                        setIsLoading(false);\n                        enqueueSnackbar(`${error?.message}`, {\n                          variant: \"error\",\n                        });\n                      }\n                    }\n                  );\n                }\n              );\n            })\n            .catch((error) => {\n              setIsLoading(false);\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createVendor}>\n        <TextValidator\n          ref={coverRef}\n          id=\"image\"\n          size=\"small\"\n          style={{ display: \"none\" }}\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Featured image is required\"]}\n          helperText=\"Featured image\"\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"logo\"\n          size=\"small\"\n          variant=\"outlined\"\n          style={{ display: \"none\" }}\n          value={formValues.logo}\n          name=\"logo\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg,\"\n          onChange={handleChange}\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's logo is required\"]}\n          helperText=\"Vendor's logo\"\n        />\n\n        <label\n          htmlFor=\"image\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: 144,\n            width: 420,\n            backgroundImage: \"url(\" + previewImage + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            marginBottom: 24,\n          }}\n          typeof=\"file\"\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginTop: \"auto\",\n              marginBottom: -32,\n            }}\n          >\n            <label\n              htmlFor=\"logo\"\n              style={{\n                zIndex: 1000,\n                display: \"flex\",\n                flexDirection: \"row\",\n                padding: 5,\n              }}\n            >\n              <Avatar\n                variant=\"circular\"\n                alt=\"Author\"\n                src={previewLogo}\n                className={classes.logo}\n              />\n              <label htmlFor=\"logo\" style={{ marginTop: 16, marginLeft: -10 }}>\n                <div className={classes.subRow}>\n                  <CameraAlt\n                    style={{ color: \"white\", zIndex: 10000 }}\n                    fontSize=\"small\"\n                  />\n                </div>\n              </label>\n            </label>\n            <label htmlFor=\"image\" style={{ marginBottom: 24, padding: 8 }}>\n              <div className={classes.subRow}>\n                <EditIcon color=\"primary\" fontSize=\"small\" />\n                <Typography color=\"blue\">Edit</Typography>\n              </div>\n            </label>\n          </div>\n        </label>\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <SelectValidator\n                className={classes.mb}\n                value={formValues.category}\n                onChange={handleChange}\n                label=\"Category\"\n                name=\"category\"\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's category is required\"]}\n              >\n                {(categoriesList ?? [])?.map((item, index) => (\n                  <MenuItem key={index} value={item?.name ?? \"\"}>\n                    {item?.name ?? \"\"}\n                  </MenuItem>\n                ))}\n              </SelectValidator>\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"name\"\n                label=\"Vendor name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.name}\n                onChange={handleChange}\n                name=\"name\"\n                required\n                fullWidth\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's name is required\"]}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"address\"\n          label=\"Vendor address\"\n          size=\"small\"\n          variant=\"outlined\"\n          required\n          value={formValues.address}\n          onChange={handleChange}\n          name=\"address\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's address is required\"]}\n        />\n\n        <Grid container spacing={1} padding={0} marginBottom={0}>\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"phone\"\n                label=\"Phone number\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.phone}\n                onChange={handleChange}\n                name=\"phone\"\n                fullWidth\n                required\n                type=\"phone\"\n                validators={[\"required\"]}\n                errorMessages={[\"Vendor's phone number is required\"]}\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={6}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"website\"\n                label=\"Website (Optional)\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={formValues.website}\n                onChange={handleChange}\n                name=\"website\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={4}\n          rowsMax={5}\n          placeholder=\"Briefly describe vendor\"\n          name=\"description\"\n          label=\"Description\"\n          value={formValues.description}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Vendor's description is required\"]}\n        />\n\n        <div className={classes.row}>\n          {!is24Hrs ? (\n            <Grid container spacing={1} padding={0} marginBottom={0}>\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <SelectValidator\n                    className={classes.mb}\n                    value={formValues.opensAt}\n                    onChange={handleChange}\n                    label=\"Opens By\"\n                    name=\"opensAt\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Opening time is required\"]}\n                  >\n                    {(timesOpen ?? [])?.map((item, index) => (\n                      <MenuItem key={index} value={item ?? \"\"}>\n                        {item ?? \"\"}\n                      </MenuItem>\n                    ))}\n                  </SelectValidator>\n                </div>\n              </Grid>\n\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <SelectValidator\n                    className={classes.mb}\n                    value={formValues.closesAt}\n                    onChange={handleChange}\n                    label=\"Closes By\"\n                    name=\"closesAt\"\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    validators={[\"required\"]}\n                    errorMessages={[\"Closing time is required\"]}\n                  >\n                    {(timesClosed ?? [])?.map((item, index) => (\n                      <MenuItem key={index} value={item ?? \"\"}>\n                        {item ?? \"\"}\n                      </MenuItem>\n                    ))}\n                  </SelectValidator>\n                </div>\n              </Grid>\n            </Grid>\n          ) : (\n            <Typography>Always open 24/7</Typography>\n          )}\n          <div className={classes.subRow}>\n            <Typography fontSize={14}>Always open</Typography>\n            <Checkbox value={is24Hrs} onChange={() => setIs24Hrs(!is24Hrs)} />\n          </div>\n        </div>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddVendorForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/add_category.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/directories/edit_vendor.js",["320","321"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  onSnapshot,\n  deleteObject,\n  updateDoc,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst EditVendorForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    id,\n    title,\n    subTitle,\n    img,\n    category,\n    body,\n    authorName,\n    authorPhoto,\n  } = props;\n  const [formValues, setFormValues] = React.useState({\n    title: \" \",\n    image: \"\",\n    category: \"\",\n    subTitle: \" \",\n    body: \" \",\n    createdAt: \"\",\n    authorName: \" \",\n    authorPhoto: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [authorFile, setAuthorFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const [previewAuthor, setPreviewAuthor] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [categoriesList, setCategoriesList] = React.useState(null);\n\n  React.useEffect(() => {\n    const q = query(collection(db, \"categories\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const categories = [];\n      querySnapshot.forEach((doc) => {\n        categories.push(doc.data());\n      });\n      setCategoriesList(categories);\n    });\n  }, []);\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else if (id === \"authorPhoto\") {\n      setAuthorFile(e.target.files[0]);\n      setPreviewAuthor(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        authorPhoto: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const uploadNewImage = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              image: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const uploadNewAuthorPhoto = () => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload image to firebase storage then save to firestore\n    const storageRef = ref(storage, \"news/img_\" + timeNow.getTime());\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        setIsUploading(false);\n        setIsLoading(true);\n        getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          const mRef = doc(db, \"news\", \"\" + id);\n          try {\n            await updateDoc(mRef, {\n              title: formValues.title,\n              subTitle: formValues.subTitle,\n              authorName: formValues.authorName,\n              category: formValues.category,\n              body: formValues.body,\n              updatedAt: timeNow,\n              authorPhoto: downloadURL,\n            });\n            setOpen(false);\n            setIsLoading(false);\n            enqueueSnackbar(`Newsfeed updated successfully`, {\n              variant: \"success\",\n            });\n          } catch (error) {\n            setIsLoading(false);\n            enqueueSnackbar(`${error?.message}`, {\n              variant: \"error\",\n            });\n          }\n        });\n      }\n    );\n  };\n\n  const updateNews = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      title: formValues.title ? formValues.title : title,\n      subTitle: formValues.subTitle ? formValues.subTitle : subTitle,\n      authorName: formValues.authorName ? formValues.authorName : authorName,\n      category: formValues.category ? formValues.category : category,\n      body: formValues.body ? formValues.body : body,\n    });\n    if (!previewImage && !previewAuthor) {\n      //No image is changed. So update all text\n      console.log(\"ID: \", id);\n      const timeNow = new Date();\n      try {\n        const mRef = doc(db, \"news\", \"\" + id);\n        await updateDoc(mRef, {\n          title: formValues.title,\n          subTitle: formValues.subTitle,\n          authorName: formValues.authorName,\n          category: formValues.category,\n          body: formValues.body,\n          updatedAt: timeNow,\n        });\n        setOpen(false);\n        setIsLoading(false);\n        enqueueSnackbar(`News title updated successfully`, {\n          variant: \"success\",\n        });\n      } catch (error) {\n        setIsLoading(false);\n        enqueueSnackbar(`${error?.message}`, {\n          variant: \"error\",\n        });\n      }\n    } else if (previewImage && !previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewImage();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else if (!previewImage && previewAuthor) {\n      //Change on the featured image and all texts\n      const fileRef = ref(storage, \"news/img_\" + id);\n\n      deleteObject(fileRef)\n        .then(() => {\n          setIsLoading(false);\n          uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    } else {\n      const fileRef = ref(storage, \"news/\" + id);\n      const fileRef2 = ref(storage, \"news/img_\" + id);\n\n      setIsLoading(true);\n\n      deleteObject(fileRef)\n        .then(() => {\n          //Now Delete authors photo\n          deleteObject(fileRef2)\n            .then(() => {\n              //Both items were deleted\n              const timeNow = new Date();\n              let storageRef = ref(storage, \"news/\" + timeNow.getTime());\n              let storageRef2 = ref(storage, \"news/img_\" + timeNow.getTime());\n              let uploadTask = uploadBytesResumable(storageRef, file);\n              let uploadTask2 = uploadBytesResumable(storageRef2, authorFile);\n\n              setIsLoading(false);\n              setIsUploading(true);\n\n              uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                  const uprogress =\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                  setProgress(uprogress);\n                },\n                (error) => {\n                  setIsUploading(false);\n                  console.log(error);\n                  enqueueSnackbar(`${error?.message}`, { variant: \"error\" });\n                },\n                () => {\n                  getDownloadURL(uploadTask?.snapshot?.ref).then(\n                    async (downloadURL) => {\n                      try {\n                        const mRef = doc(db, \"news\", \"\" + id);\n                        await updateDoc(mRef, {\n                          title: formValues.title,\n                          subTitle: formValues.subTitle,\n                          authorName: formValues.authorName,\n                          category: formValues.category,\n                          body: formValues.body,\n                          updatedAt: timeNow,\n                          image: downloadURL,\n                        });\n                        const tmn = timeNow.getTime();\n                        setIsUploading(true);\n                        setIsLoading(false);\n                        uploadTask2.on(\n                          \"state_changed\",\n                          (snapshot2) => {\n                            const prog =\n                              (snapshot2.bytesTransferred /\n                                snapshot2.totalBytes) *\n                              100;\n                            setProgress(prog);\n                          },\n                          (error) => {\n                            setIsUploading(false);\n                            console.log(error);\n                            enqueueSnackbar(`${error?.message}`, {\n                              variant: \"error\",\n                            });\n                          },\n                          () => {\n                            getDownloadURL(uploadTask2?.snapshot?.ref).then(\n                              async (download) => {\n                                setIsUploading(false);\n                                setIsLoading(true);\n                                try {\n                                  const mRef = doc(db, \"news\", \"\" + tmn);\n                                  await updateDoc(mRef, {\n                                    authorPhoto: download,\n                                  });\n                                  setOpen(false);\n                                  setIsLoading(false);\n                                  enqueueSnackbar(\n                                    `Newsfeed updated successfully`,\n                                    {\n                                      variant: \"success\",\n                                    }\n                                  );\n                                } catch (error) {\n                                  setIsLoading(false);\n                                  enqueueSnackbar(`${error?.message}`, {\n                                    variant: \"error\",\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        );\n                      } catch (error) {}\n                    }\n                  );\n                }\n              );\n            })\n            .catch((err) => {});\n          // setIsLoading(false);\n          // uploadNewAuthorPhoto();\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          console.log(\"ErR: \", error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg, .pdf\"\n              onChange={handleChange}\n              helperText=\"Featured image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                variant=\"rounded\"\n                alt=\"Passport\"\n                src={previewImage ? previewImage : img}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.category ? formValues.category : category}\n          onChange={handleChange}\n          label=\"News category\"\n          name=\"category\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"News category is required\"]}\n        >\n          {(categoriesList ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item?.title ?? \"\"}>\n              {item?.title ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"title\"\n          label=\"News title\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.title === \" \"\n              ? title\n              : !formValues.title\n              ? \"\"\n              : formValues.title\n          }\n          onChange={handleChange}\n          name=\"title\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"News title is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"subTitle\"\n          label=\"News subtitle (optional)\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={\n            formValues.subTitle === \" \"\n              ? subTitle\n              : !formValues.subTitle\n              ? \"\"\n              : formValues.subTitle\n          }\n          onChange={handleChange}\n          name=\"subTitle\"\n          fullWidth\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type news here\"\n          name=\"body\"\n          label=\"News content\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"News content is required\"]}\n        />\n\n        <Grid container spacing={1} padding={1} marginBottom={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <div>\n              <TextValidator\n                className={classes.mb}\n                id=\"authorPhoto\"\n                size=\"small\"\n                variant=\"outlined\"\n                name=\"authorPhoto\"\n                type=\"file\"\n                fullWidth\n                disabled={isLoading}\n                accept=\".png, .jpg, .jpeg,\"\n                onChange={handleChange}\n                helperText=\"Author's photograph\"\n              />\n              <TextValidator\n                className={classes.mb}\n                id=\"authorName\"\n                label=\"Author's name\"\n                size=\"small\"\n                variant=\"outlined\"\n                value={\n                  formValues.authorName === \" \"\n                    ? authorName\n                    : !formValues.authorName\n                    ? \"\"\n                    : formValues.authorName\n                }\n                onChange={handleChange}\n                name=\"authorName\"\n                fullWidth\n              />\n            </div>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              <Avatar\n                alt=\"Author\"\n                src={previewAuthor ? previewAuthor : authorPhoto}\n                className={classes.image}\n              />\n            </div>\n          </Grid>\n        </Grid>\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Update\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default EditVendorForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/privacy-policy/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/terms-of-service/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/privacy-policy/update_policy_form.js",["322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\n// const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdatePolicyForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, body, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    body: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n  const updatePolicy = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      body: formValues.body ? formValues.body : body,\n    });\n    // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"privacy-policy\");\n    try {\n      await updateDoc(mRef, {\n        body: formValues.body,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Privacy policy updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Error updating privacy policy\"}`, {\n        variant: \"error\",\n      });\n    }\n    // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n  };\n\n  return (\n    <div style={{ width: 512 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {/* {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />} */}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updatePolicy}>\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={8}\n          rowsMax={12}\n          placeholder=\"Type policy here\"\n          name=\"body\"\n          label=\"Privacy policy\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Privacy policy is required\"]}\n        />\n        {/* <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        /> */}\n\n        {/* <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div> */}\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdatePolicyForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/terms-of-service/index.js",["339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  deleteObject,\n  uploadBytesResumable,\n  getDownloadURL,\n  updateDoc,\n} from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport { addCategory } from \"../../../domain/service\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n}));\n\n// const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdateTermsOfServiceForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, body, id } = props;\n  const [formValues, setFormValues] = React.useState({\n    body: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n  const updateTerms = async (e) => {\n    setIsLoading(true);\n    setFormValues({\n      body: formValues.body ? formValues.body : body,\n    });\n    // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"terms-of-service\");\n    try {\n      await updateDoc(mRef, {\n        body: formValues.body,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Terms of service updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(\n        `${error?.message || \"Error updating terms of service\"}`,\n        {\n          variant: \"error\",\n        }\n      );\n    }\n    // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n  };\n\n  return (\n    <div style={{ width: 512 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {/* {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />} */}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateTerms}>\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={8}\n          rowsMax={12}\n          placeholder=\"Type terms of service here\"\n          name=\"body\"\n          label=\"Terms of service\"\n          value={\n            formValues.body === \" \"\n              ? body\n              : !formValues.body\n              ? \"\"\n              : formValues.body\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Terms of service is required\"]}\n        />\n        {/* <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        /> */}\n\n        {/* <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div> */}\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateTermsOfServiceForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/contact-us/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/contact-us/index.js",["356","357","358","359"],"import React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { db, doc, updateDoc } from \"../../../data/firebase/\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 128,\n    height: 128,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\n// const CircularProgressWithLabel = (props) => {\n//   return (\n//     <Box position=\"relative\" display=\"inline-flex\">\n//       <CircularProgress\n//         variant=\"determinate\"\n//         {...props}\n//         size={90}\n//         thickness={3.0}\n//         style={{ color: \"green\" }}\n//       />\n//       <Box\n//         top={0}\n//         left={0}\n//         bottom={0}\n//         right={0}\n//         position=\"absolute\"\n//         display=\"flex\"\n//         alignItems=\"center\"\n//         justifyContent=\"center\"\n//       >\n//         <Typography\n//           variant=\"body1\"\n//           component=\"div\"\n//           style={{ color: \"white\", fontFamily: \"roboto\" }}\n//         >{`${Math.round(props.value)}%`}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\nconst UpdateContactUsForm = (props) => {\n  const classes = useStyles();\n  let { setOpen, img, phone, email, website, facebook, instagram } = props;\n  const [formValues, setFormValues] = React.useState({\n    phone: \" \",\n    email: \" \",\n    website: \" \",\n    facebook: \" \",\n    instagram: \" \",\n    image: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  //   const [progress, setProgress] = React.useState(0);\n  const [previewPassport, setPreviewPassport] = React.useState(\"\");\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewPassport(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  //   const uploadNew = (e) => {\n  //     setIsUploading(true);\n  //     const timeNow = new Date();\n  //     //First upload image to firebase storage then save to firestore\n  //     const storageRef = ref(storage, \"categories/img_\" + timeNow.getTime());\n  //     const uploadTask = uploadBytesResumable(storageRef, file);\n\n  //     uploadTask.on(\n  //       \"state_changed\",\n  //       (snapshot) => {\n  //         const uprogress =\n  //           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n  //         setProgress(uprogress);\n  //       },\n  //       (error) => {\n  //         setIsUploading(false);\n  //         console.log(error);\n  //         enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n  //       },\n  //       () => {\n  //         setIsUploading(false);\n  //         setIsLoading(true);\n  //         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n  //           const mRef = doc(db, \"categories\", \"img_\" + id);\n  //           try {\n  //             await updateDoc(mRef, {\n  //               title: formValues.title,\n  //               url: downloadURL,\n  //             });\n  //             setOpen(false);\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Category updated successfully`, {\n  //               variant: \"success\",\n  //             });\n  //           } catch (error) {\n  //             setIsLoading(false);\n  //             enqueueSnackbar(`Error updating category`, {\n  //               variant: \"error\",\n  //             });\n  //           }\n  //         });\n  //       }\n  //     );\n  //   };\n\n  const updateContactInfo = async (e) => {\n    setIsLoading(true);\n    // setFormValues({\n    //   phone: formValues.phone === \" \" ? phone : formValues.phone,\n    //   email: formValues.email === \" \" ? email : formValues.email,\n    //   website: formValues.website === \" \" ? website : formValues.website,\n    //   facebook: formValues.facebook === \" \" ? facebook : formValues.facebook,\n    //   instagram:\n    //     formValues.instagram === \" \" ? instagram : formValues.instagram,\n    // });\n    // if (!previewPassport) {\n    //   console.log(\"ID: \", id);\n    const timeNow = new Date();\n    const mRef = doc(db, \"others\", \"contact-us\");\n    try {\n      await updateDoc(mRef, {\n        phone: formValues.phone === \" \" ? phone : formValues.phone,\n        email: formValues.email === \" \" ? email : formValues.email,\n        website: formValues.website === \" \" ? website : formValues.website,\n        facebook: formValues.facebook === \" \" ? facebook : formValues.facebook,\n        instagram:\n          formValues.instagram === \" \" ? instagram : formValues.instagram,\n        updatedAt: timeNow,\n      });\n      setOpen(false);\n      setIsLoading(false);\n      enqueueSnackbar(`Contact info updated successfully`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      setIsLoading(false);\n      enqueueSnackbar(`${error?.message || \"Error updating Ccntact info\"}`, {\n        variant: \"error\",\n      });\n    }\n    // }\n    // else {\n    //   setFormValues({ title: formValues.title ? formValues.title : name });\n    //   const fileRef = ref(storage, \"categories/img_\" + id);\n\n    //   deleteObject(fileRef)\n    //     .then(() => {\n    //       // File deleted now upload new file,\n    //       //get download url and save to firestore\n    //       setIsLoading(false);\n    //       uploadNew();\n    //     })\n    //     .catch((error) => {\n    //       setIsLoading(false);\n    //       console.log(\"ErR: \", error);\n    //     });\n    // }\n  };\n\n  return (\n    <div style={{ width: 512 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {/* {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />} */}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={updateContactInfo}>\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"phone\"\n          label=\"Phone\"\n          value={\n            formValues.phone === \" \"\n              ? phone\n              : !formValues.phone\n              ? \"\"\n              : formValues.phone\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Phone number is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"email\"\n          label=\"Email address\"\n          value={\n            formValues.email === \" \"\n              ? email\n              : !formValues.email\n              ? \"\"\n              : formValues.email\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"website\"\n          label=\"Website\"\n          value={\n            formValues.website === \" \"\n              ? website\n              : !formValues.website\n              ? \"\"\n              : formValues.website\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Website is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"facebook\"\n          label=\"Facebook\"\n          value={\n            formValues.facebook === \" \"\n              ? facebook\n              : !formValues.facebook\n              ? \"\"\n              : formValues.facebook\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Facebook is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          name=\"instagram\"\n          label=\"Instagram\"\n          value={\n            formValues.instagram === \" \"\n              ? instagram\n              : !formValues.instagram\n              ? \"\"\n              : formValues.instagram\n          }\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Instagram is required\"]}\n        />\n\n        {/* <br />\n        <TextValidator\n          id=\"image\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.image}\n          name=\"image\"\n          type=\"file\"\n          fullWidth\n          disabled={isLoading}\n          accept=\".png, .jpg, .jpeg, .pdf\"\n          onChange={handleChange}\n          //   validators={[\"required\"]}\n          //   errorMessages={[\"Category image is required\"]}\n          helperText=\"Upload category image\"\n        /> */}\n\n        {/* <div>\n          <Avatar\n            variant=\"rounded\"\n            alt=\"Passport\"\n            src={previewPassport ? previewPassport : img}\n            className={classes.image}\n          />\n        </div> */}\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default UpdateContactUsForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/index.js",["360","361"],"import * as React from \"react\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarColumnsButton,\n  GridToolbarFilterButton,\n  GridToolbarExport,\n  GridToolbarDensitySelector,\n} from \"@mui/x-data-grid\";\n// import { useDemoData } from \"@mui/x-data-grid-generator\";\nimport {\n  onSnapshot,\n  query,\n  where,\n  collection,\n  db,\n} from \"../../../../data/firebase\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CustomNoRowsOverlay from \"../../misc/placeholder/custom_no_data\";\nimport ActionButton from \"./action_button\";\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarColumnsButton />\n      <GridToolbarFilterButton />\n      <GridToolbarDensitySelector />\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nexport default function UserTable() {\n  const columns = [\n    {\n      field: \"photo\",\n      headerName: \"Image\",\n      width: 75,\n      renderCell: (params) => (\n        <Avatar alt=\"Profile Picture\" src={params.value} />\n      ),\n    },\n    {\n      field: \"fullName\",\n      headerName: \"Full name\",\n      description: \"This column has a value getter and is not sortable.\",\n      sortable: false,\n      width: 160,\n      valueGetter: (params) =>\n        `${params.row.firstname || \"\"} ${params.row.lastname || \"\"}`,\n    },\n    {\n      field: \"email\",\n      headerName: \"Email Address\",\n      width: 165,\n    },\n    {\n      field: \"phone\",\n      headerName: \"Phone\",\n      width: 128,\n    },\n    {\n      field: \"gender\",\n      headerName: \"Gender\",\n      width: 86,\n    },\n    {\n      field: \"state\",\n      headerName: \"State of Origin\",\n      width: 100,\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 96,\n    },\n    {\n      field: \"id\",\n      headerName: \"ACTIONS\",\n      width: 130,\n      renderCell: (params) => {\n        return (\n          <ActionButton\n            selected={params}\n            type=\"scholars\"\n            // setIsPerforming={setIsPerforming}\n            // handleSetSelectedRow={props.handleSetSelectedRow}\n          />\n        );\n      },\n    },\n  ];\n\n  // const { data } = useDemoData({\n  //   dataSet: \"Commodity\",\n  //   rowLength: 10,\n  //   maxColumns: 6,\n  // });\n\n  const [usersList, setUsersList] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    const usersRef = collection(db, \"users\");\n    const q = query(usersRef, where(\"userType\", \"==\", \"public\"));\n    onSnapshot(q, (querySnapshot) => {\n      const usrs = [];\n      querySnapshot.forEach((doc) => {\n        usrs.push(doc.data());\n      });\n      setUsersList(usrs);\n    });\n    return () => {\n      setUsersList([]);\n    };\n  }, []);\n\n  if (usersList) {\n    console.log(\"Filtered: \", usersList);\n  }\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        // {...data}\n        rows={usersList}\n        columns={columns}\n        components={{\n          Toolbar: CustomToolbar,\n          NoRowsOverlay: CustomNoRowsOverlay,\n        }}\n      />\n    </div>\n  );\n}\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/admin/create_admin_form.js",["362","363"],"import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { makeStyles } from \"@mui/styles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport { auth, ref, db, doc, setDoc, getDoc } from \"../../../data/firebase\";\nimport { createUser } from \"../../../domain/service\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles((theme) => ({\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CreateAdminForm = (props) => {\n  const { setOpen } = props;\n  const classes = useStyles();\n\n  const [showCode, setShowCode] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [formValues, setFormValues] = React.useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n  });\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  React.useEffect(() => {\n    setIsLoading(false);\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const createAdmin = (e) => {\n    setIsLoading(true);\n    const timeNow = new Date();\n    createUser(formValues.email, formValues.password)\n      .then(async (resp) => {\n        try {\n          setDoc(doc(db, \"users\", resp?.user?.uid), {\n            id: resp?.user?.uid,\n            firstname: formValues.firstname,\n            lastname: formValues.lastname,\n            phone: formValues.phone,\n            email: formValues.email,\n            password: formValues.password,\n            userType: \"admin\",\n            isBlocked: false,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then(async (result) => {\n              setIsLoading(false);\n              setOpen(false);\n              const docRef = doc(db, \"users\", resp?.user?.uid);\n              const docSnap = await getDoc(docRef);\n              if (docSnap.exists()) {\n                enqueueSnackbar(`Admin created successfully`, {\n                  variant: \"success\",\n                });\n              }\n            })\n            .catch((err) => {\n              setIsLoading(false);\n              enqueueSnackbar(\n                `${err?.message || \"Check your internet connection\"}`,\n                {\n                  variant: \"error\",\n                }\n              );\n            });\n        } catch (error) {\n          setIsLoading(false);\n          enqueueSnackbar(\n            `${error?.message || \"Check your internet connection\"}`,\n            {\n              variant: \"error\",\n            }\n          );\n        }\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        enqueueSnackbar(`${err?.message || \"Check your internet connection\"}`, {\n          variant: \"error\",\n        });\n        // console.log(\"ERR: \", err?.message);\n      });\n  };\n\n  return (\n    <div style={{ width: 360 }}>\n      <Backdrop style={{ zIndex: 1200 }} open={isLoading}>\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createAdmin}>\n        <TextValidator\n          className={classes.mb}\n          id=\"firstname\"\n          label=\"First name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.firstname}\n          onChange={handleChange}\n          name=\"firstname\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"First name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"lastname\"\n          label=\"Last name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.lastname}\n          onChange={handleChange}\n          name=\"lastname\"\n          fullWidth\n          required\n          validators={[\"required\"]}\n          errorMessages={[\"Last name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"email\"\n          label=\"Email address\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.email}\n          onChange={handleChange}\n          name=\"email\"\n          fullWidth\n          required\n          type=\"email\"\n          validators={[\"required\"]}\n          errorMessages={[\"Email address is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          id=\"phone\"\n          label=\"Phone number\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.phone}\n          onChange={handleChange}\n          name=\"phone\"\n          fullWidth\n          required\n          type=\"phone\"\n          validators={[\"required\"]}\n          errorMessages={[\"Phone number is required\"]}\n        />\n\n        <TextValidator\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type={showCode ? \"text\" : \"password\"}\n          id=\"password\"\n          onChange={handleChange}\n          value={formValues.password}\n          autoComplete=\"current-password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Password is required\"]}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle code\"\n                  onClick={() => setShowCode(!showCode)}\n                  onMouseDown={() => setShowCode(!showCode)}\n                  edge=\"end\"\n                >\n                  {showCode ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <br />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default CreateAdminForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/components/dashboard/users-table/action_button.js",["364","365","366"],"import React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n// import EmptyModal from \"../modal/EmptyModal\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVertRounded\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport VisibilityIcon from \"@mui/icons-material/VisibilityOutlined\";\nimport Fade from \"@mui/material/Fade\";\n// import DataPreview from \"../miscellaneous/DataPreview\";\nimport { useSnackbar } from \"notistack\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@mui/styles\";\nimport CustomDialog from \"../dialogs/custom-dialog\";\nimport DeleteDialog from \"../dialogs/custom-dialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  awardRoot: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  awardRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginLeft: \"auto\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst ActionButton = ({ selected, setIsPerforming, type }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openPreviewModal, setOpenPreviewModal] = React.useState(false);\n  const [openBlock, setOpenBlock] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n\n  const openAction = Boolean(anchorEl);\n  const { enqueueSnackbar } = useSnackbar();\n  const { userData } = useSelector((state) => state.user);\n  const handleMoreAction = (e) => setAnchorEl(e.currentTarget);\n  const handleCloseMoreAction = () => setAnchorEl(null);\n\n  // const { data: scholarData } = useSWR('/applicants/scholars/' + selected.row._id, APIService.authFetcher);\n\n  React.useEffect(() => {\n    console.log(\"DATS: \", userData);\n    return () => {\n      //   cleanup\n    };\n  }, []);\n\n  const handlePreview = () => {\n    handleCloseMoreAction();\n    setOpenPreviewModal(true);\n  };\n\n  const handleDelete = () => {\n    handleCloseMoreAction();\n    setOpenDelete(true);\n  };\n\n  const handleBlock = () => {\n    setAnchorEl(null);\n    setOpenBlock(true);\n  };\n\n  const performDelete = async () => {};\n\n  const performBlock = async () => {};\n\n  const renderBlockConfirm = (\n    <div className={classes.awardRoot}>\n      <Typography>\n        {`Are you sure you want to block ${selected.row.firstname} ${selected.row.lastname} from using this platform?`}\n      </Typography>\n      <div className={classes.awardRow}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"inherit\"\n          onClick={() => setOpenBlock(false)}\n        >\n          Cancel\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          style={{ backgroundColor: \"red\" }}\n          onClick={performBlock}\n        >\n          Block\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderDeleteConfirm = (\n    <div className={classes.awardRoot}>\n      <Typography>\n        {`Are you sure you want to delete ${selected.row.firstname} ${selected.row.lastname} from this platform?`}\n      </Typography>\n      <div className={classes.awardRow}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"inherit\"\n          onClick={() => setOpenBlock(false)}\n        >\n          Cancel\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          style={{ backgroundColor: \"red\" }}\n          onClick={performDelete}\n        >\n          Block\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"actions\"\n        aria-controls=\"fade-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMoreAction}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={openAction}\n        onClose={handleCloseMoreAction}\n        TransitionComponent={Fade}\n        elevation={1}\n      >\n        <MenuItem onClick={handlePreview}>\n          <ListItemIcon>\n            <VisibilityIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"View Detail\" />\n        </MenuItem>\n        {/* <DataPreview\n          open={openPreviewModal}\n          setOpen={setOpenPreviewModal}\n          data={selected.row}\n        /> */}\n        {userData && userData?.userType === \"super\" && selected?.row ? (\n          <div>\n            <MenuItem onClick={handleBlock}>\n              <ListItemText primary=\"Block user\" />\n            </MenuItem>\n            <CustomDialog\n              title=\"Block User\"\n              bodyComponent={renderBlockConfirm}\n              open={openBlock}\n              handleClose={() => setOpenBlock(false)}\n            />\n\n            {selected?.row?.userType === \"admin\" && (\n              <div>\n                <MenuItem onClick={handleDelete}>\n                  <ListItemText primary=\"Delete user\" />\n                </MenuItem>\n                <DeleteDialog\n                  title=\"Delete Admin\"\n                  bodyComponent={renderDeleteConfirm}\n                  open={openDelete}\n                  handleClose={() => setOpenDelete(false)}\n                />\n              </div>\n            )}\n          </div>\n        ) : null}\n      </Menu>\n    </>\n  );\n};\n\nexport default ActionButton;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/notfound/index.js",[],"/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/vendor_detail.js",["367","368","369","370","371","372","373","374","375"],"import React from \"react\";\nimport { Avatar, Button, Divider, Typography } from \"@mui/material\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport { IconButton } from \"@mui/material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport EditDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport EditNewsForm from \"../../../../../forms/news/update_news_form\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  deleteDoc,\n  deleteObject,\n  ref,\n  db,\n  doc,\n  storage,\n} from \"../../../../../../data/firebase\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport { Add } from \"@mui/icons-material\";\nimport AddProductForm from \"../../../../../forms/products/add_product\";\nimport Products from \"./products\";\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 48,\n    width: 48,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst VendorItem = (props) => {\n  const { history, location } = props;\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const [productList, setProductList] = React.useState(null);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteVendor = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"news/\" + location?.state?.id);\n    const fileRef2 = ref(storage, \"news/img_\" + location?.state?.id);\n\n    deleteObject(fileRef)\n      .then(() => {\n        deleteObject(fileRef2)\n          .then(async () => {\n            // Images deleted now delete from firestore,\n            try {\n              await deleteDoc(doc(db, \"news\", \"\" + location?.state?.id));\n              enqueueSnackbar(`Item deleted successfully`, {\n                variant: \"success\",\n              });\n            } catch (error) {\n              console.log(\"ERR: Del: \", error);\n              enqueueSnackbar(`Item not deleted. Try again`, {\n                variant: \"error\",\n              });\n            }\n          })\n          .catch((err) => {});\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${location?.state?.title} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteVendor}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Add Product\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <AddProductForm\n            setOpen={setOpen}\n            vendorID={location?.state?.id}\n            vendorName={location?.state?.name}\n            vendorPhone={location?.state?.phone}\n            vendorAddress={location?.state?.address}\n            vendorWebsite={location?.state?.website}\n          />\n        }\n      />\n      {/* <EditDialog\n        open={open}\n        title=\"Update News\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditNewsForm\n            setOpen={setOpen}\n            img={location?.state?.image}\n            name={location?.state?.name}\n            id={location?.state?.id}\n            address={location?.state?.address}\n            phone={location?.state?.phone}\n            website={location?.state?.website}\n            description={location?.state?.description}\n            category={location?.state?.category}\n            createdAt={location?.state?.createdAt}\n            updatedAt={location?.state?.updatedAt}\n            logo={location?.state?.logo}\n            is24hrs={location?.state?.is24hrs}\n            opensAt={location?.state?.opensAt}\n            closesAt={location?.state?.closesAt}\n          />\n        }\n      /> */}\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Product\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <div className={classes.row}>\n        <Button\n          startIcon={<ArrowBackIosNewIcon />}\n          onClick={() => history.goBack()}\n        >\n          Back\n        </Button>\n        <div className={classes.lhsRow}>\n          <Typography\n            fontSize={21}\n            variant=\"h6\"\n            textAlign=\"center\"\n            fontWeight=\"bold\"\n          >\n            {location?.state?.name}\n          </Typography>\n        </div>\n\n        <Button\n          startIcon={<Add />}\n          variant=\"contained\"\n          onClick={() => setOpen(true)}\n        >\n          Add Product\n        </Button>\n      </div>\n      <br />\n      {/* Image Section */}\n      <div>\n        <img\n          src={location?.state?.image}\n          alt=\"featured_image\"\n          width=\"100%\"\n          height={400}\n        />\n      </div>\n      <br />\n\n      <div className={classes.row}>\n        <Typography fontSize={16} variant=\"h6\" textAlign=\"start\" gutterBottom>\n          {location?.state?.category}\n        </Typography>\n\n        <div>\n          <Typography>\n            Last updated on{\" \"}\n            {`${new Date(\n              location?.state?.updatedAt?.seconds * 1000\n            ).toLocaleDateString(\"en-US\")}`}\n          </Typography>\n        </div>\n      </div>\n\n      <Typography fontSize={18} variant=\"h6\" textAlign=\"start\">\n        {location?.state?.address}\n      </Typography>\n      <br />\n\n      <div className={classes.lhsRow}>\n        <Typography fontSize={15} variant=\"h6\" textAlign=\"start\">\n          {location?.state?.description}\n        </Typography>\n      </div>\n      <br />\n\n      <div className={classes.row}>\n        <div>\n          <Avatar\n            alt=\"Brand-Logo\"\n            src={location?.state?.logo}\n            className={classes.avatar}\n          />\n          <Typography\n            fontSize={16}\n            fontWeight=\"bold\"\n            textAlign=\"start\"\n            gutterBottom\n          >\n            {location?.state?.phone}\n          </Typography>\n          <Typography\n            fontSize={16}\n            fontWeight=\"bold\"\n            textAlign=\"start\"\n            gutterBottom\n          >\n            {location?.state?.website}\n          </Typography>\n        </div>\n\n        <div>\n          {location?.state?.is24hrs ? (\n            <Typography>Always open 24/7</Typography>\n          ) : (\n            <div className={classes.lhsRow}>\n              <Typography paddingRight={2}>\n                Opens at {`${location?.state?.opensAt}`}\n              </Typography>\n              <Typography>\n                Closes at {`${location?.state?.closesAt}`}\n              </Typography>\n            </div>\n          )}\n        </div>\n      </div>\n      <br />\n      <Divider />\n      <br />\n      <div>\n        <Typography gutterBottom variant=\"h6\">\n          Vendor Products\n        </Typography>\n        <Products vendorID={location?.state?.id} />\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(VendorItem);\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/forms/products/add_product.js",["376","377","378","379"],"import React from \"react\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  SelectValidator,\n} from \"react-material-ui-form-validator\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport {\n  db,\n  ref,\n  storage,\n  setDoc,\n  doc,\n  uploadBytesResumable,\n  getDownloadURL,\n  query,\n  collection,\n  updateDoc,\n  onSnapshot,\n} from \"../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport { Box } from \"@mui/system\";\nimport { CircularProgress, Grid, MenuItem } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    margin: \"0px auto 15px auto\",\n    width: 120,\n    height: 100,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n        size={90}\n        thickness={3.0}\n        style={{ color: \"green\" }}\n      />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"body1\"\n          component=\"div\"\n          style={{ color: \"white\", fontFamily: \"roboto\" }}\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddProductForm = (props) => {\n  const classes = useStyles();\n  let {\n    setOpen,\n    vendorID,\n    vendorAddress,\n    vendorName,\n    vendorPhone,\n    vendorWebsite,\n  } = props;\n  let deliveryTypes = [\"Free delivery\", \"Pick up\", \"Pay on delivery\"];\n  const [formValues, setFormValues] = React.useState({\n    name: \"\",\n    image: \"\",\n    vendorName: \"\",\n    delivery: \"\",\n    vendorAddress: \"\",\n    vendorPhone: \"\",\n    vendorWebsite: \"\",\n    description: \"\",\n  });\n  const [file, setFile] = React.useState(null);\n  const [isUploading, setIsUploading] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [previewImage, setPreviewImage] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (e) => {\n    const { id, name, value } = e.target;\n\n    if (id === \"image\") {\n      setFile(e.target.files[0]);\n      setPreviewImage(URL.createObjectURL(e.target.files[0]));\n      setFormValues((prevData) => ({\n        ...prevData,\n        image: e.target.value,\n      }));\n    } else {\n      setFormValues((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const createNews = (e) => {\n    setIsUploading(true);\n    const timeNow = new Date();\n    //First upload images to firebase storage then save to firestore\n    let storageRef = ref(storage, \"products/\" + timeNow.getTime());\n    let uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const uprogress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(uprogress);\n      },\n      (error) => {\n        setIsUploading(false);\n        console.log(error);\n        enqueueSnackbar(`${error.message}`, { variant: \"error\" });\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setIsUploading(false);\n          setIsLoading(true);\n          setDoc(doc(db, \"products\", `${timeNow.getTime()}`), {\n            id: timeNow.getTime(),\n            name: formValues.name,\n            image: downloadURL,\n            delivery: formValues.delivery,\n            vendorID: vendorID,\n            vendorName: vendorName,\n            vendorPhone: vendorPhone,\n            vendorAddress: vendorAddress,\n            vendorWebsite: vendorWebsite,\n            description: formValues.description,\n            createdAt: timeNow,\n            updatedAt: timeNow,\n          })\n            .then((res) => {\n              setOpen(false);\n              setIsLoading(false);\n              enqueueSnackbar(`New product added successfully`, {\n                variant: \"success\",\n              });\n            })\n            .catch((error) => {\n              setIsLoading(false);\n              setIsLoading(false);\n              enqueueSnackbar(\n                `${error?.message || \"Check your internet connection\"}`,\n                {\n                  variant: \"error\",\n                }\n              );\n            });\n        });\n      }\n    );\n  };\n\n  return (\n    <div>\n      <Backdrop style={{ zIndex: 1200 }} open={isUploading || isLoading}>\n        {isUploading ? <CircularProgressWithLabel value={progress} /> : <div />}\n        {isLoading ? (\n          <CircularProgress\n            size={90}\n            thickness={3.0}\n            style={{ color: \"white\" }}\n          />\n        ) : (\n          <div />\n        )}\n      </Backdrop>\n      <ValidatorForm onSubmit={createNews}>\n        <Grid container spacing={1} padding={1}>\n          <Grid item xs={12} sm={6} md={7}>\n            <TextValidator\n              id=\"image\"\n              size=\"small\"\n              variant=\"outlined\"\n              value={formValues.image}\n              name=\"image\"\n              type=\"file\"\n              fullWidth\n              disabled={isLoading}\n              accept=\".png, .jpg, .jpeg\"\n              onChange={handleChange}\n              validators={[\"required\"]}\n              errorMessages={[\"Product image is required\"]}\n              helperText=\"Product image\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={5}>\n            <div>\n              {previewImage && (\n                <Avatar\n                  variant=\"rounded\"\n                  alt=\"Passport\"\n                  src={previewImage}\n                  className={classes.image}\n                />\n              )}\n            </div>\n          </Grid>\n        </Grid>\n\n        <SelectValidator\n          className={classes.mb}\n          value={formValues.delivery}\n          onChange={handleChange}\n          label=\"Delivery type\"\n          name=\"delivery\"\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          validators={[\"required\"]}\n          errorMessages={[\"Delivery type is required\"]}\n        >\n          {(deliveryTypes ?? [])?.map((item, index) => (\n            <MenuItem key={index} value={item ?? \"\"}>\n              {item ?? \"\"}\n            </MenuItem>\n          ))}\n        </SelectValidator>\n\n        <TextValidator\n          className={classes.mb}\n          id=\"name\"\n          label=\"Product name\"\n          size=\"small\"\n          variant=\"outlined\"\n          value={formValues.name}\n          onChange={handleChange}\n          name=\"name\"\n          fullWidth\n          validators={[\"required\"]}\n          errorMessages={[\"Product name is required\"]}\n        />\n\n        <TextValidator\n          className={classes.mb}\n          fullWidth\n          multiline\n          rows={5}\n          rowsMax={10}\n          placeholder=\"Type description here\"\n          name=\"description\"\n          label=\"Product description\"\n          value={formValues.description}\n          onChange={handleChange}\n          variant=\"outlined\"\n          validators={[\"required\"]}\n          errorMessages={[\"Product description is required\"]}\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={isLoading || isUploading}\n          fullWidth\n        >\n          Save\n        </Button>\n      </ValidatorForm>\n    </div>\n  );\n};\n\nexport default AddProductForm;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/products.js",["380","381","382","383","384","385","386","387"],"import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport { CardActionArea, Divider, Typography } from \"@mui/material\";\nimport { Add } from \"@mui/icons-material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Grid } from \"@mui/material\";\nimport {\n  onSnapshot,\n  query,\n  collection,\n  db,\n  doc,\n  ref,\n  deleteObject,\n  storage,\n  deleteDoc,\n  where,\n} from \"../../../../../../data/firebase\";\nimport { useSnackbar } from \"notistack\";\nimport CloudOffIcon from \"@mui/icons-material/CloudOff\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport EditProjectForm from \"../../../../../forms/projects/update_project_form\";\nimport AddProjectForm from \"../../../../../forms/projects/add_project_form\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 360,\n    width: \"100%\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rowHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 156,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 36,\n    width: 36,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n}));\n\nconst ProductItemCard = (props) => {\n  const { image, name, id, createdAt, delivery, item, updatedAt, desc } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n\n  const deleteProduct = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"products/\" + id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        try {\n          await deleteDoc(doc(db, \"products\", \"\" + id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteProduct}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <CustomDialog\n        open={open}\n        title=\"Update Product\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditProjectForm\n            setOpen={setOpen}\n            img={image}\n            title={name}\n            id={id}\n            delivery={delivery}\n            desc={desc}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Product\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <Card elevation={3} className={classes.root}>\n        <div className={classes.rowHeader}>\n          <div className={classes.lhsRow}>\n            <div className={classes.column}>\n              <Typography variant=\"body2\" fontSize={14}>\n                {delivery}\n              </Typography>\n              <Typography variant=\"body2\" fontSize={13}>\n                {`${new Date(updatedAt?.seconds * 1000).toLocaleDateString(\n                  \"en-US\"\n                )}`}\n              </Typography>\n            </div>\n          </div>\n          <div className={classes.subRow}>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"primary\"\n              onClick={() => setOpen(true)}\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              aria-label=\"delete\"\n              color=\"error\"\n              onClick={() => setOpenDelete(true)}\n            >\n              <Delete />\n            </IconButton>\n          </div>\n        </div>\n        <CardActionArea\n          onClick={() =>\n            history.push({\n              pathname:\n                \"/admin/dashboard/manage-app/vendors:\" +\n                id +\n                \"/products:\" +\n                item?.id,\n              state: {\n                id: item?.id,\n                name: item?.name,\n                image: item?.image,\n                desc: item?.description,\n                delivery: item?.delivery,\n                createdAt: item?.createdAt,\n                updatedAt: item?.updatedAt,\n              },\n            })\n          }\n        >\n          <CardMedia image={image} className={classes.cardMedia} />\n          <Divider />\n          <div className={classes.row}>\n            <Typography\n              fontSize={16}\n              color=\"black\"\n              paddingLeft={1}\n              textAlign=\"start\"\n              fontWeight=\"bold\"\n            >\n              {name?.length > 75 ? name?.substring(0, 75) + \"...\" : name}\n            </Typography>\n          </div>\n\n          <Typography\n            justifyContent=\"stretch\"\n            textAlign=\"left\"\n            fontSize={14}\n            color=\"black\"\n            padding={1}\n          >\n            {desc?.length > 100 ? desc?.substring(0, 100) + \"...\" : desc}\n          </Typography>\n          <div className={classes.subRow}>\n            <Button variant=\"text\" size=\"small\">\n              View\n            </Button>\n          </div>\n        </CardActionArea>\n      </Card>\n    </>\n  );\n};\n\nconst Products = (props) => {\n  const { vendorID } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n  const [productsList, setProductsList] = React.useState(null);\n\n  //   React.useEffect(() => {\n  //     const q = query(collection(db, \"products\"), where());\n  //     const unsubscribe = onSnapshot(q, (querySnapshot) => {\n  //       const prod = [];\n  //       querySnapshot.forEach((doc) => {\n  //         prod.push(doc.data());\n  //       });\n  //       setProductsList(prod);\n  //     });\n  //   }, []);\n\n  React.useEffect(() => {\n    const usersRef = collection(db, \"products\");\n    const q = query(usersRef, where(\"vendorID\", \"==\", vendorID));\n    onSnapshot(q, (querySnapshot) => {\n      const prod = [];\n      querySnapshot.forEach((doc) => {\n        prod.push(doc.data());\n      });\n      setProductsList(prod);\n      console.log(\"Ve: \" + vendorID + \" : \", productsList);\n    });\n    return () => {\n      setProductsList([]);\n    };\n  }, []);\n\n  return (\n    <div>\n      {productsList && (\n        <Grid\n          container\n          spacing={{ xs: 2, md: 2 }}\n          columns={{ xs: 4, sm: 8, md: 12 }}\n        >\n          {productsList?.map((item, index) => (\n            <Grid item xs={12} sm={6} md={6} key={index}>\n              <ProductItemCard\n                item={item}\n                id={productsList[index]?.id}\n                image={productsList[index]?.image}\n                name={productsList[index]?.name}\n                desc={productsList[index]?.description}\n                delivery={productsList[index]?.delivery}\n                createdAt={productsList[index]?.createdAt}\n                updatedAt={productsList[index]?.updatedAt}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      )}\n      {productsList?.length < 1 && (\n        <div className={classes.main}>\n          <div style={{ marginTop: \"auto\" }}>\n            <CloudOffIcon fontSize=\"large\" />\n            <Typography>No records found</Typography>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Products;\n","/Users/apple/Developer/NigerDeltaUnityApp_Admin/src/presentation/screens/dashboard/tabs/manage_app/directories/product_detail.js",["388","389","390","391","392","393","394","395"],"import React from \"react\";\nimport { Avatar, Button, Divider, Typography } from \"@mui/material\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport { IconButton } from \"@mui/material\";\nimport CustomDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport EditDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport DeleteDialog from \"../../../../../components/dashboard/dialogs/custom-dialog\";\nimport EditNewsForm from \"../../../../../forms/news/update_news_form\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  deleteDoc,\n  deleteObject,\n  ref,\n  db,\n  doc,\n  storage,\n} from \"../../../../../../data/firebase\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport { Add } from \"@mui/icons-material\";\nimport AddProductForm from \"../../../../../forms/products/add_product\";\nimport Products from \"./products\";\n\nconst useStyles = makeStyles((theme) => ({\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  main: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minHeight: 256,\n    minWidth: 320,\n    alignItems: \"center\",\n  },\n  cardMedia: {\n    height: 156,\n    width: \"100%\",\n  },\n  subRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"end\",\n    alignItems: \"center\",\n  },\n  lhsRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"start\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    height: 48,\n    width: 48,\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    padding: 4,\n  },\n  mb: {\n    marginBottom: 10,\n  },\n}));\n\nconst ProductDetail = (props) => {\n  const { history, location } = props;\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [openEdit, setOpenEdit] = React.useState(false);\n  const [openDelete, setOpenDelete] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const deleteProduct = () => {\n    setOpenDelete(false);\n    const fileRef = ref(storage, \"products/\" + location?.state?.id);\n\n    deleteObject(fileRef)\n      .then(async () => {\n        // Images deleted now delete from firestore,\n        try {\n          await deleteDoc(doc(db, \"products\", \"\" + location?.state?.id));\n          enqueueSnackbar(`Item deleted successfully`, {\n            variant: \"success\",\n          });\n        } catch (error) {\n          console.log(\"ERR: Del: \", error);\n          enqueueSnackbar(`Item not deleted. Try again`, {\n            variant: \"error\",\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"ErR: \", error);\n      });\n  };\n\n  const deleteBody = (\n    <div>\n      <Typography variant=\"body2\" gutterBottom>\n        {`Are you sure you want to delete ${location?.state?.name} ?`}\n      </Typography>\n      <br />\n      <div className={classes.subRow}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          style={{ marginRight: 4 }}\n          onClick={() => setOpenDelete(false)}\n        >\n          Cancel\n        </Button>\n\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={deleteProduct}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <EditDialog\n        open={open}\n        title=\"Update Product\"\n        handleClose={() => setOpen(false)}\n        bodyComponent={\n          <EditNewsForm\n            setOpen={setOpen}\n            img={location?.state?.image}\n            name={location?.state?.name}\n            id={location?.state?.id}\n            address={location?.state?.address}\n            phone={location?.state?.phone}\n            website={location?.state?.website}\n            description={location?.state?.description}\n            category={location?.state?.category}\n            createdAt={location?.state?.createdAt}\n            updatedAt={location?.state?.updatedAt}\n            logo={location?.state?.logo}\n            is24hrs={location?.state?.is24hrs}\n            opensAt={location?.state?.opensAt}\n            closesAt={location?.state?.closesAt}\n          />\n        }\n      />\n      <DeleteDialog\n        open={openDelete}\n        title=\"Delete Product\"\n        handleClose={() => setOpenDelete(false)}\n        bodyComponent={deleteBody}\n      />\n      <div className={classes.row}>\n        <Button\n          startIcon={<ArrowBackIosNewIcon />}\n          onClick={() => history.goBack()}\n        >\n          Back\n        </Button>\n        <div className={classes.lhsRow}>\n          <Typography\n            fontSize={21}\n            variant=\"h6\"\n            textAlign=\"center\"\n            fontWeight=\"bold\"\n          >\n            {location?.state?.name}\n          </Typography>\n        </div>\n\n        <div className={classes.subRow}>\n          <IconButton\n            aria-label=\"gh\"\n            color=\"primary\"\n            onClick={() => setOpen(true)}\n          >\n            <Edit />\n          </IconButton>\n          <IconButton\n            aria-label=\"delete\"\n            color=\"error\"\n            onClick={() => setOpenDelete(true)}\n          >\n            <Delete />\n          </IconButton>\n        </div>\n      </div>\n      <br />\n      {/* Image Section */}\n      <div>\n        <img\n          src={location?.state?.image}\n          alt=\"featured_image\"\n          width=\"100%\"\n          height={400}\n        />\n      </div>\n      <br />\n\n      <div className={classes.row}>\n        <div>\n          <Typography>\n            Last updated on{\" \"}\n            {`${new Date(\n              location?.state?.updatedAt?.seconds * 1000\n            ).toLocaleDateString(\"en-US\")}`}\n          </Typography>\n        </div>\n      </div>\n\n      <Typography fontSize={14} variant=\"h6\" textAlign=\"start\">\n        {location?.state?.delivery}\n      </Typography>\n      <br />\n\n      <div className={classes.lhsRow}>\n        <Typography fontSize={15} variant=\"h6\" textAlign=\"start\">\n          {location?.state?.desc}\n        </Typography>\n      </div>\n      <br />\n    </>\n  );\n};\n\nexport default withRouter(ProductDetail);\n",{"ruleId":"396","severity":1,"message":"397","line":11,"column":10,"nodeType":"398","messageId":"399","endLine":11,"endColumn":13},{"ruleId":"396","severity":1,"message":"400","line":11,"column":15,"nodeType":"398","messageId":"399","endLine":11,"endColumn":24},{"ruleId":"396","severity":1,"message":"401","line":11,"column":26,"nodeType":"398","messageId":"399","endLine":11,"endColumn":30},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","replacedBy":"405"},{"ruleId":"396","severity":1,"message":"406","line":5,"column":8,"nodeType":"398","messageId":"399","endLine":5,"endColumn":14},{"ruleId":"396","severity":1,"message":"407","line":10,"column":3,"nodeType":"398","messageId":"399","endLine":10,"endColumn":21},{"ruleId":"408","severity":1,"message":"409","line":46,"column":6,"nodeType":"410","endLine":46,"endColumn":8,"suggestions":"411"},{"ruleId":"396","severity":1,"message":"412","line":14,"column":10,"nodeType":"398","messageId":"399","endLine":14,"endColumn":19},{"ruleId":"396","severity":1,"message":"413","line":35,"column":9,"nodeType":"398","messageId":"399","endLine":35,"endColumn":21},{"ruleId":"396","severity":1,"message":"414","line":21,"column":10,"nodeType":"398","messageId":"399","endLine":21,"endColumn":21},{"ruleId":"396","severity":1,"message":"415","line":123,"column":10,"nodeType":"398","messageId":"399","endLine":123,"endColumn":23},{"ruleId":"396","severity":1,"message":"416","line":154,"column":9,"nodeType":"398","messageId":"399","endLine":154,"endColumn":36},{"ruleId":"396","severity":1,"message":"417","line":159,"column":9,"nodeType":"398","messageId":"399","endLine":159,"endColumn":37},{"ruleId":"396","severity":1,"message":"418","line":223,"column":9,"nodeType":"398","messageId":"399","endLine":223,"endColumn":18},{"ruleId":"396","severity":1,"message":"419","line":225,"column":7,"nodeType":"398","messageId":"399","endLine":225,"endColumn":18},{"ruleId":"396","severity":1,"message":"420","line":4,"column":8,"nodeType":"398","messageId":"399","endLine":4,"endColumn":12},{"ruleId":"396","severity":1,"message":"413","line":15,"column":9,"nodeType":"398","messageId":"399","endLine":15,"endColumn":21},{"ruleId":"396","severity":1,"message":"421","line":4,"column":8,"nodeType":"398","messageId":"399","endLine":4,"endColumn":12},{"ruleId":"396","severity":1,"message":"422","line":13,"column":3,"nodeType":"398","messageId":"399","endLine":13,"endColumn":9},{"ruleId":"396","severity":1,"message":"412","line":32,"column":10,"nodeType":"398","messageId":"399","endLine":32,"endColumn":19},{"ruleId":"396","severity":1,"message":"412","line":25,"column":10,"nodeType":"398","messageId":"399","endLine":25,"endColumn":19},{"ruleId":"396","severity":1,"message":"423","line":52,"column":10,"nodeType":"398","messageId":"399","endLine":52,"endColumn":19},{"ruleId":"396","severity":1,"message":"424","line":52,"column":21,"nodeType":"398","messageId":"399","endLine":52,"endColumn":33},{"ruleId":"396","severity":1,"message":"425","line":98,"column":15,"nodeType":"398","messageId":"399","endLine":98,"endColumn":24},{"ruleId":"396","severity":1,"message":"426","line":99,"column":15,"nodeType":"398","messageId":"399","endLine":99,"endColumn":27},{"ruleId":"396","severity":1,"message":"427","line":45,"column":25,"nodeType":"398","messageId":"399","endLine":45,"endColumn":32},{"ruleId":"396","severity":1,"message":"428","line":3,"column":10,"nodeType":"398","messageId":"399","endLine":3,"endColumn":23},{"ruleId":"396","severity":1,"message":"429","line":9,"column":3,"nodeType":"398","messageId":"399","endLine":9,"endColumn":8},{"ruleId":"396","severity":1,"message":"430","line":17,"column":3,"nodeType":"398","messageId":"399","endLine":17,"endColumn":26},{"ruleId":"396","severity":1,"message":"431","line":46,"column":9,"nodeType":"398","messageId":"399","endLine":46,"endColumn":14},{"ruleId":"396","severity":1,"message":"432","line":84,"column":21,"nodeType":"398","messageId":"399","endLine":84,"endColumn":33},{"ruleId":"396","severity":1,"message":"423","line":85,"column":10,"nodeType":"398","messageId":"399","endLine":85,"endColumn":19},{"ruleId":"396","severity":1,"message":"424","line":85,"column":21,"nodeType":"398","messageId":"399","endLine":85,"endColumn":33},{"ruleId":"396","severity":1,"message":"433","line":89,"column":11,"nodeType":"398","messageId":"399","endLine":89,"endColumn":22},{"ruleId":"396","severity":1,"message":"433","line":103,"column":11,"nodeType":"398","messageId":"399","endLine":103,"endColumn":22},{"ruleId":"396","severity":1,"message":"433","line":117,"column":11,"nodeType":"398","messageId":"399","endLine":117,"endColumn":22},{"ruleId":"396","severity":1,"message":"434","line":78,"column":10,"nodeType":"398","messageId":"399","endLine":78,"endColumn":18},{"ruleId":"396","severity":1,"message":"433","line":82,"column":11,"nodeType":"398","messageId":"399","endLine":82,"endColumn":22},{"ruleId":"396","severity":1,"message":"435","line":7,"column":3,"nodeType":"398","messageId":"399","endLine":7,"endColumn":17},{"ruleId":"396","severity":1,"message":"436","line":8,"column":3,"nodeType":"398","messageId":"399","endLine":8,"endColumn":28},{"ruleId":"396","severity":1,"message":"414","line":13,"column":10,"nodeType":"398","messageId":"399","endLine":13,"endColumn":21},{"ruleId":"396","severity":1,"message":"418","line":53,"column":9,"nodeType":"398","messageId":"399","endLine":53,"endColumn":18},{"ruleId":"396","severity":1,"message":"437","line":118,"column":5,"nodeType":"398","messageId":"399","endLine":118,"endColumn":15},{"ruleId":"396","severity":1,"message":"438","line":119,"column":5,"nodeType":"398","messageId":"399","endLine":119,"endColumn":12},{"ruleId":"396","severity":1,"message":"437","line":117,"column":5,"nodeType":"398","messageId":"399","endLine":117,"endColumn":15},{"ruleId":"396","severity":1,"message":"438","line":118,"column":5,"nodeType":"398","messageId":"399","endLine":118,"endColumn":12},{"ruleId":"439","severity":1,"message":"440","line":181,"column":17,"nodeType":"441","messageId":"442","endLine":181,"endColumn":24},{"ruleId":"396","severity":1,"message":"443","line":2,"column":22,"nodeType":"398","messageId":"399","endLine":2,"endColumn":30},{"ruleId":"396","severity":1,"message":"444","line":13,"column":9,"nodeType":"398","messageId":"399","endLine":13,"endColumn":12},{"ruleId":"396","severity":1,"message":"445","line":14,"column":9,"nodeType":"398","messageId":"399","endLine":14,"endColumn":13},{"ruleId":"396","severity":1,"message":"446","line":10,"column":3,"nodeType":"398","messageId":"399","endLine":10,"endColumn":9},{"ruleId":"396","severity":1,"message":"447","line":18,"column":10,"nodeType":"398","messageId":"399","endLine":18,"endColumn":21},{"ruleId":"396","severity":1,"message":"447","line":24,"column":10,"nodeType":"398","messageId":"399","endLine":24,"endColumn":21},{"ruleId":"396","severity":1,"message":"433","line":109,"column":11,"nodeType":"398","messageId":"399","endLine":109,"endColumn":22},{"ruleId":"396","severity":1,"message":"433","line":95,"column":11,"nodeType":"398","messageId":"399","endLine":95,"endColumn":22},{"ruleId":"396","severity":1,"message":"443","line":2,"column":22,"nodeType":"398","messageId":"399","endLine":2,"endColumn":30},{"ruleId":"396","severity":1,"message":"448","line":12,"column":8,"nodeType":"398","messageId":"399","endLine":12,"endColumn":19},{"ruleId":"396","severity":1,"message":"449","line":16,"column":10,"nodeType":"398","messageId":"399","endLine":16,"endColumn":17},{"ruleId":"396","severity":1,"message":"433","line":174,"column":11,"nodeType":"398","messageId":"399","endLine":174,"endColumn":22},{"ruleId":"396","severity":1,"message":"433","line":291,"column":11,"nodeType":"398","messageId":"399","endLine":291,"endColumn":22},{"ruleId":"396","severity":1,"message":"450","line":89,"column":29,"nodeType":"398","messageId":"399","endLine":89,"endColumn":38},{"ruleId":"396","severity":1,"message":"433","line":259,"column":11,"nodeType":"398","messageId":"399","endLine":259,"endColumn":22},{"ruleId":"396","severity":1,"message":"451","line":2,"column":10,"nodeType":"398","messageId":"399","endLine":2,"endColumn":16},{"ruleId":"396","severity":1,"message":"452","line":9,"column":8,"nodeType":"398","messageId":"399","endLine":9,"endColumn":20},{"ruleId":"396","severity":1,"message":"453","line":85,"column":22,"nodeType":"398","messageId":"399","endLine":85,"endColumn":35},{"ruleId":"396","severity":1,"message":"453","line":84,"column":22,"nodeType":"398","messageId":"399","endLine":84,"endColumn":35},{"ruleId":"396","severity":1,"message":"454","line":93,"column":10,"nodeType":"398","messageId":"399","endLine":93,"endColumn":19},{"ruleId":"396","severity":1,"message":"455","line":94,"column":21,"nodeType":"398","messageId":"399","endLine":94,"endColumn":33},{"ruleId":"396","severity":1,"message":"456","line":27,"column":8,"nodeType":"398","messageId":"399","endLine":27,"endColumn":19},{"ruleId":"396","severity":1,"message":"457","line":108,"column":5,"nodeType":"398","messageId":"399","endLine":108,"endColumn":12},{"ruleId":"396","severity":1,"message":"458","line":300,"column":21,"nodeType":"398","messageId":"399","endLine":300,"endColumn":30},{"ruleId":"396","severity":1,"message":"459","line":305,"column":9,"nodeType":"398","messageId":"399","endLine":305,"endColumn":16},{"ruleId":"396","severity":1,"message":"433","line":407,"column":11,"nodeType":"398","messageId":"399","endLine":407,"endColumn":22},{"ruleId":"396","severity":1,"message":"433","line":418,"column":11,"nodeType":"398","messageId":"399","endLine":418,"endColumn":22},{"ruleId":"396","severity":1,"message":"460","line":30,"column":3,"nodeType":"398","messageId":"399","endLine":30,"endColumn":13},{"ruleId":"396","severity":1,"message":"433","line":151,"column":11,"nodeType":"398","messageId":"399","endLine":151,"endColumn":22},{"ruleId":"396","severity":1,"message":"447","line":24,"column":10,"nodeType":"398","messageId":"399","endLine":24,"endColumn":21},{"ruleId":"396","severity":1,"message":"433","line":109,"column":11,"nodeType":"398","messageId":"399","endLine":109,"endColumn":22},{"ruleId":"396","severity":1,"message":"451","line":3,"column":8,"nodeType":"398","messageId":"399","endLine":3,"endColumn":14},{"ruleId":"396","severity":1,"message":"461","line":8,"column":3,"nodeType":"398","messageId":"399","endLine":8,"endColumn":6},{"ruleId":"396","severity":1,"message":"462","line":9,"column":3,"nodeType":"398","messageId":"399","endLine":9,"endColumn":10},{"ruleId":"396","severity":1,"message":"446","line":10,"column":3,"nodeType":"398","messageId":"399","endLine":10,"endColumn":9},{"ruleId":"396","severity":1,"message":"463","line":12,"column":3,"nodeType":"398","messageId":"399","endLine":12,"endColumn":15},{"ruleId":"396","severity":1,"message":"464","line":13,"column":3,"nodeType":"398","messageId":"399","endLine":13,"endColumn":23},{"ruleId":"396","severity":1,"message":"465","line":14,"column":3,"nodeType":"398","messageId":"399","endLine":14,"endColumn":17},{"ruleId":"396","severity":1,"message":"447","line":18,"column":10,"nodeType":"398","messageId":"399","endLine":18,"endColumn":21},{"ruleId":"396","severity":1,"message":"466","line":20,"column":10,"nodeType":"398","messageId":"399","endLine":20,"endColumn":13},{"ruleId":"396","severity":1,"message":"467","line":22,"column":10,"nodeType":"398","messageId":"399","endLine":22,"endColumn":20},{"ruleId":"396","severity":1,"message":"468","line":64,"column":18,"nodeType":"398","messageId":"399","endLine":64,"endColumn":21},{"ruleId":"396","severity":1,"message":"469","line":64,"column":29,"nodeType":"398","messageId":"399","endLine":64,"endColumn":31},{"ruleId":"396","severity":1,"message":"470","line":69,"column":10,"nodeType":"398","messageId":"399","endLine":69,"endColumn":14},{"ruleId":"396","severity":1,"message":"471","line":70,"column":23,"nodeType":"398","messageId":"399","endLine":70,"endColumn":37},{"ruleId":"396","severity":1,"message":"472","line":72,"column":10,"nodeType":"398","messageId":"399","endLine":72,"endColumn":18},{"ruleId":"396","severity":1,"message":"473","line":72,"column":20,"nodeType":"398","messageId":"399","endLine":72,"endColumn":31},{"ruleId":"396","severity":1,"message":"474","line":73,"column":10,"nodeType":"398","messageId":"399","endLine":73,"endColumn":25},{"ruleId":"396","severity":1,"message":"451","line":3,"column":8,"nodeType":"398","messageId":"399","endLine":3,"endColumn":14},{"ruleId":"396","severity":1,"message":"461","line":8,"column":3,"nodeType":"398","messageId":"399","endLine":8,"endColumn":6},{"ruleId":"396","severity":1,"message":"462","line":9,"column":3,"nodeType":"398","messageId":"399","endLine":9,"endColumn":10},{"ruleId":"396","severity":1,"message":"446","line":10,"column":3,"nodeType":"398","messageId":"399","endLine":10,"endColumn":9},{"ruleId":"396","severity":1,"message":"463","line":12,"column":3,"nodeType":"398","messageId":"399","endLine":12,"endColumn":15},{"ruleId":"396","severity":1,"message":"464","line":13,"column":3,"nodeType":"398","messageId":"399","endLine":13,"endColumn":23},{"ruleId":"396","severity":1,"message":"465","line":14,"column":3,"nodeType":"398","messageId":"399","endLine":14,"endColumn":17},{"ruleId":"396","severity":1,"message":"447","line":18,"column":10,"nodeType":"398","messageId":"399","endLine":18,"endColumn":21},{"ruleId":"396","severity":1,"message":"466","line":20,"column":10,"nodeType":"398","messageId":"399","endLine":20,"endColumn":13},{"ruleId":"396","severity":1,"message":"467","line":22,"column":10,"nodeType":"398","messageId":"399","endLine":22,"endColumn":20},{"ruleId":"396","severity":1,"message":"468","line":64,"column":18,"nodeType":"398","messageId":"399","endLine":64,"endColumn":21},{"ruleId":"396","severity":1,"message":"469","line":64,"column":29,"nodeType":"398","messageId":"399","endLine":64,"endColumn":31},{"ruleId":"396","severity":1,"message":"470","line":69,"column":10,"nodeType":"398","messageId":"399","endLine":69,"endColumn":14},{"ruleId":"396","severity":1,"message":"471","line":70,"column":23,"nodeType":"398","messageId":"399","endLine":70,"endColumn":37},{"ruleId":"396","severity":1,"message":"472","line":72,"column":10,"nodeType":"398","messageId":"399","endLine":72,"endColumn":18},{"ruleId":"396","severity":1,"message":"473","line":72,"column":20,"nodeType":"398","messageId":"399","endLine":72,"endColumn":31},{"ruleId":"396","severity":1,"message":"474","line":73,"column":10,"nodeType":"398","messageId":"399","endLine":73,"endColumn":25},{"ruleId":"396","severity":1,"message":"468","line":53,"column":18,"nodeType":"398","messageId":"399","endLine":53,"endColumn":21},{"ruleId":"396","severity":1,"message":"470","line":62,"column":10,"nodeType":"398","messageId":"399","endLine":62,"endColumn":14},{"ruleId":"396","severity":1,"message":"471","line":63,"column":23,"nodeType":"398","messageId":"399","endLine":63,"endColumn":37},{"ruleId":"396","severity":1,"message":"474","line":66,"column":10,"nodeType":"398","messageId":"399","endLine":66,"endColumn":25},{"ruleId":"396","severity":1,"message":"423","line":101,"column":10,"nodeType":"398","messageId":"399","endLine":101,"endColumn":19},{"ruleId":"396","severity":1,"message":"424","line":101,"column":21,"nodeType":"398","messageId":"399","endLine":101,"endColumn":33},{"ruleId":"396","severity":1,"message":"401","line":11,"column":10,"nodeType":"398","messageId":"399","endLine":11,"endColumn":14},{"ruleId":"396","severity":1,"message":"461","line":11,"column":16,"nodeType":"398","messageId":"399","endLine":11,"endColumn":19},{"ruleId":"396","severity":1,"message":"475","line":39,"column":10,"nodeType":"398","messageId":"399","endLine":39,"endColumn":26},{"ruleId":"396","severity":1,"message":"476","line":44,"column":11,"nodeType":"398","messageId":"399","endLine":44,"endColumn":26},{"ruleId":"408","severity":1,"message":"477","line":56,"column":6,"nodeType":"410","endLine":56,"endColumn":8,"suggestions":"478"},{"ruleId":"396","severity":1,"message":"460","line":6,"column":10,"nodeType":"398","messageId":"399","endLine":6,"endColumn":20},{"ruleId":"396","severity":1,"message":"479","line":8,"column":8,"nodeType":"398","messageId":"399","endLine":8,"endColumn":18},{"ruleId":"396","severity":1,"message":"452","line":10,"column":8,"nodeType":"398","messageId":"399","endLine":10,"endColumn":20},{"ruleId":"396","severity":1,"message":"480","line":20,"column":8,"nodeType":"398","messageId":"399","endLine":20,"endColumn":14},{"ruleId":"396","severity":1,"message":"481","line":21,"column":8,"nodeType":"398","messageId":"399","endLine":21,"endColumn":12},{"ruleId":"396","severity":1,"message":"482","line":79,"column":10,"nodeType":"398","messageId":"399","endLine":79,"endColumn":18},{"ruleId":"396","severity":1,"message":"483","line":79,"column":20,"nodeType":"398","messageId":"399","endLine":79,"endColumn":31},{"ruleId":"396","severity":1,"message":"484","line":81,"column":10,"nodeType":"398","messageId":"399","endLine":81,"endColumn":21},{"ruleId":"396","severity":1,"message":"485","line":81,"column":23,"nodeType":"398","messageId":"399","endLine":81,"endColumn":37},{"ruleId":"396","severity":1,"message":"486","line":18,"column":3,"nodeType":"398","messageId":"399","endLine":18,"endColumn":8},{"ruleId":"396","severity":1,"message":"487","line":19,"column":3,"nodeType":"398","messageId":"399","endLine":19,"endColumn":13},{"ruleId":"396","severity":1,"message":"488","line":20,"column":3,"nodeType":"398","messageId":"399","endLine":20,"endColumn":12},{"ruleId":"396","severity":1,"message":"489","line":21,"column":3,"nodeType":"398","messageId":"399","endLine":21,"endColumn":13},{"ruleId":"396","severity":1,"message":"490","line":5,"column":10,"nodeType":"398","messageId":"399","endLine":5,"endColumn":13},{"ruleId":"396","severity":1,"message":"491","line":29,"column":8,"nodeType":"398","messageId":"399","endLine":29,"endColumn":27},{"ruleId":"396","severity":1,"message":"492","line":31,"column":8,"nodeType":"398","messageId":"399","endLine":31,"endColumn":22},{"ruleId":"396","severity":1,"message":"450","line":90,"column":28,"nodeType":"398","messageId":"399","endLine":90,"endColumn":37},{"ruleId":"396","severity":1,"message":"459","line":259,"column":9,"nodeType":"398","messageId":"399","endLine":259,"endColumn":16},{"ruleId":"396","severity":1,"message":"493","line":260,"column":10,"nodeType":"398","messageId":"399","endLine":260,"endColumn":14},{"ruleId":"396","severity":1,"message":"494","line":260,"column":16,"nodeType":"398","messageId":"399","endLine":260,"endColumn":23},{"ruleId":"408","severity":1,"message":"495","line":288,"column":6,"nodeType":"410","endLine":288,"endColumn":8,"suggestions":"496"},{"ruleId":"396","severity":1,"message":"451","line":2,"column":10,"nodeType":"398","messageId":"399","endLine":2,"endColumn":16},{"ruleId":"396","severity":1,"message":"497","line":2,"column":26,"nodeType":"398","messageId":"399","endLine":2,"endColumn":33},{"ruleId":"396","severity":1,"message":"498","line":7,"column":8,"nodeType":"398","messageId":"399","endLine":7,"endColumn":20},{"ruleId":"396","severity":1,"message":"490","line":22,"column":10,"nodeType":"398","messageId":"399","endLine":22,"endColumn":13},{"ruleId":"396","severity":1,"message":"499","line":23,"column":8,"nodeType":"398","messageId":"399","endLine":23,"endColumn":22},{"ruleId":"396","severity":1,"message":"500","line":24,"column":8,"nodeType":"398","messageId":"399","endLine":24,"endColumn":16},{"ruleId":"396","severity":1,"message":"482","line":79,"column":10,"nodeType":"398","messageId":"399","endLine":79,"endColumn":18},{"ruleId":"396","severity":1,"message":"483","line":79,"column":20,"nodeType":"398","messageId":"399","endLine":79,"endColumn":31},"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'analytics' is defined but never used.","'auth' is defined but never used.","no-native-reassign",["501"],"no-negated-in-lhs",["502"],"'Signup' is defined but never used.","'PrivateRouteSignup' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["503"],"'Copyright' is defined but never used.","'handleSubmit' is assigned a value but never used.","'useSnackbar' is defined but never used.","'openNotiModal' is assigned a value but never used.","'openMobileNotificationModal' is assigned a value but never used.","'closeMobileNotificationModal' is assigned a value but never used.","'container' is assigned a value but never used.","'resultTrail' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'getDoc' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'excerpt' is assigned a value but never used.","'useMediaQuery' is defined but never used.","'where' is defined but never used.","'GridFilterToolbarButton' is defined but never used.","'theme' is assigned a value but never used.","'setUsersList' is assigned a value but never used.","'unsubscribe' is assigned a value but never used.","'newsList' is assigned a value but never used.","'setPersistence' is defined but never used.","'browserSessionPersistence' is defined but never used.","'cornerSize' is assigned a value but never used.","'picSize' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'useTheme' is defined but never used.","'top' is assigned a value but never used.","'left' is assigned a value but never used.","'setDoc' is defined but never used.","'addCategory' is defined but never used.","'CardContent' is defined but never used.","'display' is defined but never used.","'createdAt' is assigned a value but never used.","'Avatar' is defined but never used.","'EditNewsForm' is defined but never used.","'setStatesList' is assigned a value but never used.","'fileNames' is assigned a value but never used.","'setFileError' is assigned a value but never used.","'AddNewsForm' is defined but never used.","'blocked' is assigned a value but never used.","'updatedAt' is assigned a value but never used.","'history' is assigned a value but never used.","'IconButton' is defined but never used.","'ref' is defined but never used.","'storage' is defined but never used.","'deleteObject' is defined but never used.","'uploadBytesResumable' is defined but never used.","'getDownloadURL' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'img' is assigned a value but never used.","'id' is assigned a value but never used.","'file' is assigned a value but never used.","'setIsUploading' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'previewPassport' is assigned a value but never used.","'openPreviewModal' is assigned a value but never used.","'enqueueSnackbar' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.",["504"],"'EditDialog' is defined but never used.","'Delete' is defined but never used.","'Edit' is defined but never used.","'openEdit' is assigned a value but never used.","'setOpenEdit' is assigned a value but never used.","'productList' is assigned a value but never used.","'setProductList' is assigned a value but never used.","'query' is defined but never used.","'collection' is defined but never used.","'updateDoc' is defined but never used.","'onSnapshot' is defined but never used.","'Add' is defined but never used.","'ArrowBackIosNewIcon' is defined but never used.","'AddProjectForm' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'productsList' and 'vendorID'. Either include them or remove the dependency array.",["505"],"'Divider' is defined but never used.","'CustomDialog' is defined but never used.","'AddProductForm' is defined but never used.","'Products' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},"Update the dependencies array to be: [dispatch]",{"range":"512","text":"513"},"Update the dependencies array to be: [userData]",{"range":"514","text":"515"},"Update the dependencies array to be: [productsList, vendorID]",{"range":"516","text":"517"},[1370,1372],"[dispatch]",[1974,1976],"[userData]",[7829,7831],"[productsList, vendorID]"]